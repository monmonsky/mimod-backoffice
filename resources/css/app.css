@import "https://fonts.googleapis.com/css2?family=DM+Sans:wght@100;200;300;400;500;600;700;800;900;950;1000&display=swap";
@import "https://fonts.googleapis.com/css2?family=Wix+Madefor+Text:wght@400;500;600;700;800;1000&display=swap";
@import "https://fonts.googleapis.com/css2?family=Inclusive+Sans:wght@400;500;600;700;800;900;1000&display=swap";
@import "https://fonts.googleapis.com/css2?family=AR+One+Sans:wght@400;500;600;700;800;1000&display=swap"; /*! tailwindcss v4.1.12 | MIT License | https://tailwindcss.com */
@layer properties {
    @supports (((-webkit-hyphens: none)) and (not (margin-trim: inline))) or
        ((-moz-orient: inline) and (not (color: rgb(from red r g b)))) {
        *,
        :before,
        :after,
        ::backdrop {
            --tw-font-weight: initial;
            --tw-translate-x: 0;
            --tw-translate-y: 0;
            --tw-translate-z: 0;
            --tw-scale-x: 1;
            --tw-scale-y: 1;
            --tw-scale-z: 1;
            --tw-rotate-x: initial;
            --tw-rotate-y: initial;
            --tw-rotate-z: initial;
            --tw-skew-x: initial;
            --tw-skew-y: initial;
            --tw-space-y-reverse: 0;
            --tw-space-x-reverse: 0;
            --tw-divide-y-reverse: 0;
            --tw-border-style: solid;
            --tw-gradient-position: initial;
            --tw-gradient-from: #0000;
            --tw-gradient-via: #0000;
            --tw-gradient-to: #0000;
            --tw-gradient-stops: initial;
            --tw-gradient-via-stops: initial;
            --tw-gradient-from-position: 0%;
            --tw-gradient-via-position: 50%;
            --tw-gradient-to-position: 100%;
            --tw-leading: initial;
            --tw-tracking: initial;
            --tw-shadow: 0 0 #0000;
            --tw-shadow-color: initial;
            --tw-shadow-alpha: 100%;
            --tw-inset-shadow: 0 0 #0000;
            --tw-inset-shadow-color: initial;
            --tw-inset-shadow-alpha: 100%;
            --tw-ring-color: initial;
            --tw-ring-shadow: 0 0 #0000;
            --tw-inset-ring-color: initial;
            --tw-inset-ring-shadow: 0 0 #0000;
            --tw-ring-inset: initial;
            --tw-ring-offset-width: 0px;
            --tw-ring-offset-color: #fff;
            --tw-ring-offset-shadow: 0 0 #0000;
            --tw-blur: initial;
            --tw-brightness: initial;
            --tw-contrast: initial;
            --tw-grayscale: initial;
            --tw-hue-rotate: initial;
            --tw-invert: initial;
            --tw-opacity: initial;
            --tw-saturate: initial;
            --tw-sepia: initial;
            --tw-drop-shadow: initial;
            --tw-drop-shadow-color: initial;
            --tw-drop-shadow-alpha: 100%;
            --tw-drop-shadow-size: initial;
            --tw-backdrop-blur: initial;
            --tw-backdrop-brightness: initial;
            --tw-backdrop-contrast: initial;
            --tw-backdrop-grayscale: initial;
            --tw-backdrop-hue-rotate: initial;
            --tw-backdrop-invert: initial;
            --tw-backdrop-opacity: initial;
            --tw-backdrop-saturate: initial;
            --tw-backdrop-sepia: initial;
            --tw-duration: initial;
            --tw-ease: initial;
            --tw-text-shadow-color: initial;
            --tw-text-shadow-alpha: 100%;
            --tw-outline-style: solid;
            --tw-divide-x-reverse: 0;
        }
    }
}
:root,
:host {
    --font-sans: "Inclusive Sans", sans-serif;
    --text-xs: 12px;
    --text-sm: 14px;
    --text-base: 16px;
    --text-lg: 18px;
    --text-xl: 20px;
    --font-mono:
        ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New",
        monospace;
    --color-red-400: oklch(70.4% 0.191 22.216);
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-red-600: oklch(57.7% 0.245 27.325);
    --color-orange-400: oklch(75% 0.183 55.934);
    --color-orange-500: oklch(70.5% 0.213 47.604);
    --color-orange-600: oklch(64.6% 0.222 41.116);
    --color-yellow-400: oklch(85.2% 0.199 91.936);
    --color-yellow-500: oklch(79.5% 0.184 86.047);
    --color-yellow-600: oklch(68.1% 0.162 75.834);
    --color-lime-400: oklch(84.1% 0.238 128.85);
    --color-green-400: oklch(79.2% 0.209 151.711);
    --color-green-500: oklch(72.3% 0.219 149.579);
    --color-green-600: oklch(62.7% 0.194 149.214);
    --color-emerald-500: oklch(69.6% 0.17 162.48);
    --color-teal-400: oklch(77.7% 0.152 181.912);
    --color-teal-500: oklch(70.4% 0.14 182.503);
    --color-teal-600: oklch(60% 0.118 184.704);
    --color-cyan-400: oklch(78.9% 0.154 211.53);
    --color-cyan-600: oklch(60.9% 0.126 221.723);
    --color-blue-400: oklch(70.7% 0.165 254.624);
    --color-blue-500: oklch(62.3% 0.214 259.815);
    --color-blue-600: oklch(54.6% 0.245 262.881);
    --color-indigo-500: oklch(58.5% 0.233 277.117);
    --color-indigo-600: oklch(51.1% 0.262 276.966);
    --color-violet-500: oklch(60.6% 0.25 292.717);
    --color-purple-400: oklch(71.4% 0.203 305.504);
    --color-purple-500: oklch(62.7% 0.265 303.9);
    --color-purple-600: oklch(55.8% 0.288 302.321);
    --color-fuchsia-500: oklch(66.7% 0.295 322.15);
    --color-gray-500: oklch(55.1% 0.027 264.364);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --container-xs: 20rem;
    --container-sm: 24rem;
    --container-md: 28rem;
    --container-lg: 32rem;
    --container-xl: 36rem;
    --container-2xl: 42rem;
    --container-3xl: 48rem;
    --container-4xl: 56rem;
    --container-5xl: 64rem;
    --container-6xl: 72rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base--line-height: 1.5;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: 1.2;
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --text-6xl: 3.75rem;
    --text-6xl--line-height: 1;
    --font-weight-thin: 100;
    --font-weight-extralight: 200;
    --font-weight-light: 300;
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --font-weight-extrabold: 800;
    --font-weight-black: 900;
    --tracking-tight: -0.025em;
    --tracking-wide: 0.025em;
    --tracking-wider: 0.05em;
    --leading-tight: 1.25;
    --radius-xs: 0.125rem;
    --radius-sm: 0.25rem;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --radius-xl: 0.75rem;
    --animate-spin: spin 1s linear infinite;
    --animate-ping: ping 1s cubic-bezier(0, 0, 0.2, 1) infinite;
    --blur-xs: 4px;
    --blur-sm: 8px;
    --blur-md: 12px;
    --blur-lg: 16px;
    --default-transition-duration: 0.15s;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --animate-bounce-slow: bounce-slow 2s infinite alternate;
    --animate-text-color: text-color 16s linear infinite;
}
[data-font-family="default"] {
    --font-sans: "Inclusive Sans", sans-serif;
}
[data-font-family="dm-sans"] {
    --font-sans: "DM Sans", sans-serif;
}
[data-font-family="wix"] {
    --font-sans: "Wix Madefor Text", sans-serif;
}
[data-font-family="inclusive"] {
    --font-sans: "Inclusive Sans", sans-serif;
}
[data-font-family="ar-one"] {
    --font-sans: "AR One Sans", sans-serif;
}
body {
    font-family: var(--font-sans);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
}
strong {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
}
@layer theme;
@layer base {
    *,
    :after,
    :before,
    ::backdrop {
        box-sizing: border-box;
        border: 0 solid;
        margin: 0;
        padding: 0;
    }
    ::file-selector-button {
        box-sizing: border-box;
        border: 0 solid;
        margin: 0;
        padding: 0;
    }
    html,
    :host {
        -webkit-text-size-adjust: 100%;
        tab-size: 4;
        line-height: 1.5;
        font-family: var(
            --default-font-family,
            ui-sans-serif,
            system-ui,
            sans-serif,
            "Apple Color Emoji",
            "Segoe UI Emoji",
            "Segoe UI Symbol",
            "Noto Color Emoji"
        );
        font-feature-settings: var(--default-font-feature-settings, normal);
        font-variation-settings: var(--default-font-variation-settings, normal);
        -webkit-tap-highlight-color: transparent;
    }
    hr {
        height: 0;
        color: inherit;
        border-top-width: 1px;
    }
    abbr:where([title]) {
        -webkit-text-decoration: underline dotted;
        text-decoration: underline dotted;
    }
    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        font-size: inherit;
        font-weight: inherit;
    }
    a {
        color: inherit;
        -webkit-text-decoration: inherit;
        text-decoration: inherit;
    }
    b,
    strong {
        font-weight: bolder;
    }
    code,
    kbd,
    samp,
    pre {
        font-family: var(
            --default-mono-font-family,
            ui-monospace,
            SFMono-Regular,
            Menlo,
            Monaco,
            Consolas,
            "Liberation Mono",
            "Courier New",
            monospace
        );
        font-feature-settings: var(--default-mono-font-feature-settings, normal);
        font-variation-settings: var(--default-mono-font-variation-settings, normal);
        font-size: 1em;
    }
    small {
        font-size: 80%;
    }
    sub,
    sup {
        vertical-align: baseline;
        font-size: 75%;
        line-height: 0;
        position: relative;
    }
    sub {
        bottom: -0.25em;
    }
    sup {
        top: -0.5em;
    }
    table {
        text-indent: 0;
        border-color: inherit;
        border-collapse: collapse;
    }
    :-moz-focusring {
        outline: auto;
    }
    progress {
        vertical-align: baseline;
    }
    summary {
        display: list-item;
    }
    ol,
    ul,
    menu {
        list-style: none;
    }
    img,
    svg,
    video,
    canvas,
    audio,
    iframe,
    embed,
    object {
        vertical-align: middle;
        display: block;
    }
    img,
    video {
        max-width: 100%;
        height: auto;
    }
    button,
    input,
    select,
    optgroup,
    textarea {
        font: inherit;
        font-feature-settings: inherit;
        font-variation-settings: inherit;
        letter-spacing: inherit;
        color: inherit;
        opacity: 1;
        background-color: #0000;
        border-radius: 0;
    }
    ::file-selector-button {
        font: inherit;
        font-feature-settings: inherit;
        font-variation-settings: inherit;
        letter-spacing: inherit;
        color: inherit;
        opacity: 1;
        background-color: #0000;
        border-radius: 0;
    }
    :where(select:is([multiple], [size])) optgroup {
        font-weight: bolder;
    }
    :where(select:is([multiple], [size])) optgroup option {
        padding-inline-start: 20px;
    }
    ::file-selector-button {
        margin-inline-end: 4px;
    }
    ::placeholder {
        opacity: 1;
    }
    @supports (not ((-webkit-appearance: -apple-pay-button))) or (contain-intrinsic-size: 1px) {
        ::placeholder {
            color: currentColor;
        }
        @supports (color: color-mix(in lab, red, red)) {
            ::placeholder {
                color: color-mix(in oklab, currentcolor 50%, transparent);
            }
        }
    }
    textarea {
        resize: vertical;
    }
    ::-webkit-search-decoration {
        -webkit-appearance: none;
    }
    ::-webkit-date-and-time-value {
        min-height: 1lh;
        text-align: inherit;
    }
    ::-webkit-datetime-edit {
        display: inline-flex;
    }
    ::-webkit-datetime-edit-fields-wrapper {
        padding: 0;
    }
    ::-webkit-datetime-edit {
        padding-block: 0;
    }
    ::-webkit-datetime-edit-year-field {
        padding-block: 0;
    }
    ::-webkit-datetime-edit-month-field {
        padding-block: 0;
    }
    ::-webkit-datetime-edit-day-field {
        padding-block: 0;
    }
    ::-webkit-datetime-edit-hour-field {
        padding-block: 0;
    }
    ::-webkit-datetime-edit-minute-field {
        padding-block: 0;
    }
    ::-webkit-datetime-edit-second-field {
        padding-block: 0;
    }
    ::-webkit-datetime-edit-millisecond-field {
        padding-block: 0;
    }
    ::-webkit-datetime-edit-meridiem-field {
        padding-block: 0;
    }
    ::-webkit-calendar-picker-indicator {
        line-height: 1;
    }
    :-moz-ui-invalid {
        box-shadow: none;
    }
    button,
    input:where([type="button"], [type="reset"], [type="submit"]) {
        appearance: button;
    }
    ::file-selector-button {
        appearance: button;
    }
    ::-webkit-inner-spin-button {
        height: auto;
    }
    ::-webkit-outer-spin-button {
        height: auto;
    }
    [hidden]:where(:not([hidden="until-found"])) {
        display: none !important;
    }
    :where(:root),
    :root:has(input.theme-controller[value="light"]:checked),
    [data-theme="light"] {
        color-scheme: light;
        --color-base-100: oklch(100% 0 0);
        --color-base-200: oklch(98% 0 0);
        --color-base-300: oklch(95% 0 0);
        --color-base-content: oklch(21% 0.006 285.885);
        --color-primary: oklch(45% 0.24 277.023);
        --color-primary-content: oklch(93% 0.034 272.788);
        --color-secondary: oklch(65% 0.241 354.308);
        --color-secondary-content: oklch(94% 0.028 342.258);
        --color-accent: oklch(77% 0.152 181.912);
        --color-accent-content: oklch(38% 0.063 188.416);
        --color-neutral: oklch(14% 0.005 285.823);
        --color-neutral-content: oklch(92% 0.004 286.32);
        --color-info: oklch(74% 0.16 232.661);
        --color-info-content: oklch(29% 0.066 243.157);
        --color-success: oklch(76% 0.177 163.223);
        --color-success-content: oklch(37% 0.077 168.94);
        --color-warning: oklch(82% 0.189 84.429);
        --color-warning-content: oklch(41% 0.112 45.904);
        --color-error: oklch(71% 0.194 13.428);
        --color-error-content: oklch(27% 0.105 12.094);
        --radius-selector: 0.5rem;
        --radius-field: 0.25rem;
        --radius-box: 0.5rem;
        --size-selector: 0.25rem;
        --size-field: 0.25rem;
        --border: 1px;
        --depth: 1;
        --noise: 0;
    }
    @media (prefers-color-scheme: dark) {
        :root:not([data-theme]) {
            color-scheme: dark;
            --color-base-100: oklch(25.33% 0.016 252.42);
            --color-base-200: oklch(23.26% 0.014 253.1);
            --color-base-300: oklch(21.15% 0.012 254.09);
            --color-base-content: oklch(97.807% 0.029 256.847);
            --color-primary: oklch(58% 0.233 277.117);
            --color-primary-content: oklch(96% 0.018 272.314);
            --color-secondary: oklch(65% 0.241 354.308);
            --color-secondary-content: oklch(94% 0.028 342.258);
            --color-accent: oklch(77% 0.152 181.912);
            --color-accent-content: oklch(38% 0.063 188.416);
            --color-neutral: oklch(14% 0.005 285.823);
            --color-neutral-content: oklch(92% 0.004 286.32);
            --color-info: oklch(74% 0.16 232.661);
            --color-info-content: oklch(29% 0.066 243.157);
            --color-success: oklch(76% 0.177 163.223);
            --color-success-content: oklch(37% 0.077 168.94);
            --color-warning: oklch(82% 0.189 84.429);
            --color-warning-content: oklch(41% 0.112 45.904);
            --color-error: oklch(71% 0.194 13.428);
            --color-error-content: oklch(27% 0.105 12.094);
            --radius-selector: 0.5rem;
            --radius-field: 0.25rem;
            --radius-box: 0.5rem;
            --size-selector: 0.25rem;
            --size-field: 0.25rem;
            --border: 1px;
            --depth: 1;
            --noise: 0;
        }
    }
    :root:has(input.theme-controller[value="light"]:checked),
    [data-theme="light"] {
        color-scheme: light;
        --color-base-100: oklch(100% 0 0);
        --color-base-200: oklch(98% 0 0);
        --color-base-300: oklch(95% 0 0);
        --color-base-content: oklch(21% 0.006 285.885);
        --color-primary: oklch(45% 0.24 277.023);
        --color-primary-content: oklch(93% 0.034 272.788);
        --color-secondary: oklch(65% 0.241 354.308);
        --color-secondary-content: oklch(94% 0.028 342.258);
        --color-accent: oklch(77% 0.152 181.912);
        --color-accent-content: oklch(38% 0.063 188.416);
        --color-neutral: oklch(14% 0.005 285.823);
        --color-neutral-content: oklch(92% 0.004 286.32);
        --color-info: oklch(74% 0.16 232.661);
        --color-info-content: oklch(29% 0.066 243.157);
        --color-success: oklch(76% 0.177 163.223);
        --color-success-content: oklch(37% 0.077 168.94);
        --color-warning: oklch(82% 0.189 84.429);
        --color-warning-content: oklch(41% 0.112 45.904);
        --color-error: oklch(71% 0.194 13.428);
        --color-error-content: oklch(27% 0.105 12.094);
        --radius-selector: 0.5rem;
        --radius-field: 0.25rem;
        --radius-box: 0.5rem;
        --size-selector: 0.25rem;
        --size-field: 0.25rem;
        --border: 1px;
        --depth: 1;
        --noise: 0;
    }
    :root:has(input.theme-controller[value="dark"]:checked),
    [data-theme="dark"] {
        color-scheme: dark;
        --color-base-100: oklch(25.33% 0.016 252.42);
        --color-base-200: oklch(23.26% 0.014 253.1);
        --color-base-300: oklch(21.15% 0.012 254.09);
        --color-base-content: oklch(97.807% 0.029 256.847);
        --color-primary: oklch(58% 0.233 277.117);
        --color-primary-content: oklch(96% 0.018 272.314);
        --color-secondary: oklch(65% 0.241 354.308);
        --color-secondary-content: oklch(94% 0.028 342.258);
        --color-accent: oklch(77% 0.152 181.912);
        --color-accent-content: oklch(38% 0.063 188.416);
        --color-neutral: oklch(14% 0.005 285.823);
        --color-neutral-content: oklch(92% 0.004 286.32);
        --color-info: oklch(74% 0.16 232.661);
        --color-info-content: oklch(29% 0.066 243.157);
        --color-success: oklch(76% 0.177 163.223);
        --color-success-content: oklch(37% 0.077 168.94);
        --color-warning: oklch(82% 0.189 84.429);
        --color-warning-content: oklch(41% 0.112 45.904);
        --color-error: oklch(71% 0.194 13.428);
        --color-error-content: oklch(27% 0.105 12.094);
        --radius-selector: 0.5rem;
        --radius-field: 0.25rem;
        --radius-box: 0.5rem;
        --size-selector: 0.25rem;
        --size-field: 0.25rem;
        --border: 1px;
        --depth: 1;
        --noise: 0;
    }
    @property --radialprogress {
        syntax: "<percentage>";
        inherits: true;
        initial-value: 0%;
    }
    :root {
        --fx-noise: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 200 200'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.34' numOctaves='4' stitchTiles='stitch'%3E%3C/feTurbulence%3E%3C/filter%3E%3Crect width='200' height='200' filter='url(%23a)' opacity='0.2'%3E%3C/rect%3E%3C/svg%3E");
    }
    :root,
    [data-theme] {
        background-color: var(--root-bg, var(--color-base-100));
        color: var(--color-base-content);
    }
    :root {
        scrollbar-color: currentColor #0000;
    }
    @supports (color: color-mix(in lab, red, red)) {
        :root {
            scrollbar-color: color-mix(in oklch, currentColor 35%, #0000) #0000;
        }
    }
    :root:has(
        .modal-open,
        .modal[open],
        .modal:target,
        .modal-toggle:checked,
        .drawer:not([class*="drawer-open"]) > .drawer-toggle:checked
    ) {
        overflow: hidden;
    }
    @media (prefers-color-scheme: dark) {
        :root:not([data-theme]) {
            color-scheme: dark;
            --color-base-100: #181c20;
            --color-base-200: #22262a;
            --color-base-300: #2c3034;
            --color-base-content: #f0f4f8;
            --color-primary: #378dff;
            --color-primary-content: #fff;
            --color-secondary: #b071ff;
            --color-secondary-content: #fff;
            --color-accent: #00d3bb;
            --color-accent-content: #f3fbf6;
            --color-neutral: #dce1e6;
            --color-neutral-content: #1e2832;
            --color-info: #14b4ff;
            --color-info-content: #fff;
            --color-success: #0bbf58;
            --color-success-content: #fff;
            --color-warning: #f5a524;
            --color-warning-content: #150a00;
            --color-error: #f31260;
            --color-error-content: #fff;
            --radius-selector: 0.25rem;
            --radius-field: 0.25rem;
            --radius-box: 0.25rem;
            --size-selector: 0.25rem;
            --size-field: 0.25rem;
            --border: 1px;
            --depth: 0;
            --noise: 0;
            --root-bg: #121416;
            --layout-sidebar-background: #181c20;
            --layout-topbar-background: #181b1f;
            --rounded-box: 0.25rem;
            --card-p: 20px;
            --card-fs: var(--text-base);
        }
    }
    :root:has(input.theme-controller[value="dark"]:checked),
    [data-theme="dark"] {
        color-scheme: dark;
        --color-base-100: #181c20;
        --color-base-200: #22262a;
        --color-base-300: #2c3034;
        --color-base-content: #f0f4f8;
        --color-primary: #378dff;
        --color-primary-content: #fff;
        --color-secondary: #b071ff;
        --color-secondary-content: #fff;
        --color-accent: #00d3bb;
        --color-accent-content: #f3fbf6;
        --color-neutral: #dce1e6;
        --color-neutral-content: #1e2832;
        --color-info: #14b4ff;
        --color-info-content: #fff;
        --color-success: #0bbf58;
        --color-success-content: #fff;
        --color-warning: #f5a524;
        --color-warning-content: #150a00;
        --color-error: #f31260;
        --color-error-content: #fff;
        --radius-selector: 0.25rem;
        --radius-field: 0.25rem;
        --radius-box: 0.25rem;
        --size-selector: 0.25rem;
        --size-field: 0.25rem;
        --border: 1px;
        --depth: 0;
        --noise: 0;
        --root-bg: #121416;
        --layout-sidebar-background: #181c20;
        --layout-topbar-background: #181b1f;
        --rounded-box: 0.25rem;
        --card-p: 20px;
        --card-fs: var(--text-base);
    }
    :where(:root),
    :root:has(input.theme-controller[value="light"]:checked),
    [data-theme="light"] {
        color-scheme: light;
        --color-base-100: #fff;
        --color-base-200: #eef0f2;
        --color-base-300: #dcdee0;
        --color-base-content: #1e2328;
        --color-primary: #167bff;
        --color-primary-content: #fff;
        --color-secondary: #9c5de8;
        --color-secondary-content: #fff;
        --color-accent: #00d3bb;
        --color-accent-content: #f3fbf6;
        --color-neutral: #1e2832;
        --color-neutral-content: #fafcff;
        --color-info: #14b4ff;
        --color-info-content: #fff;
        --color-success: #0bbf58;
        --color-success-content: #fff;
        --color-warning: #f5a524;
        --color-warning-content: #150a00;
        --color-error: #f31260;
        --color-error-content: #fff;
        --radius-selector: 0.25rem;
        --radius-field: 0.25rem;
        --radius-box: 0.25rem;
        --size-selector: 0.25rem;
        --size-field: 0.25rem;
        --border: 1px;
        --depth: 0;
        --noise: 0;
        --root-bg: #fafbfc;
        --layout-sidebar-background: #fff;
        --layout-topbar-background: #fff;
        --rounded-box: 0.25rem;
        --card-p: 20px;
        --card-fs: var(--text-base);
    }
    :root:has(input.theme-controller[value="contrast"]:checked),
    [data-theme="contrast"] {
        color-scheme: light;
        --root-bg: #f2f4f6;
        --layout-sidebar-background: #fcfdff;
        --layout-topbar-background: #fdfeff;
        --color-base-100: #fff;
        --color-base-200: #eef0f2;
        --color-base-300: #dcdee0;
        --color-base-content: #1e2328;
        --color-primary: #167bff;
        --color-primary-content: #fff;
        --color-secondary: #9c5de8;
        --color-secondary-content: #fff;
        --color-accent: #00d3bb;
        --color-accent-content: #f3fbf6;
        --color-neutral: #1e2832;
        --color-neutral-content: #fafcff;
        --color-info: #14b4ff;
        --color-info-content: #fff;
        --color-success: #0bbf58;
        --color-success-content: #fff;
        --color-warning: #f5a524;
        --color-warning-content: #150a00;
        --color-error: #f31260;
        --color-error-content: #fff;
        --radius-field: 0.25rem;
        --radius-box: 0.25rem;
        --rounded-box: 0.25rem;
        --radius-selector: 0.25rem;
        --size-selector: 0.25rem;
        --size-field: 0.25rem;
        --border: 1px;
        --card-p: 20px;
        --card-fs: var(--text-base);
        --depth: 0;
        --noise: 0;
    }
    :root:has(input.theme-controller[value="material"]:checked),
    [data-theme="material"] {
        color-scheme: light;
        --root-bg: #fdfeff;
        --layout-sidebar-background: #f5f7ff;
        --layout-topbar-background: #f5f7ff;
        --color-base-100: #f6f8ff;
        --color-base-200: #eaecfa;
        --color-base-300: #e0e2f8;
        --color-base-content: #191e28;
        --color-primary: #167bff;
        --color-primary-content: #fff;
        --color-secondary: #9c5de8;
        --color-secondary-content: #fff;
        --color-accent: #00d3bb;
        --color-accent-content: #f3fbf6;
        --color-neutral: #1e2832;
        --color-neutral-content: #fafcff;
        --color-info: #14b4ff;
        --color-info-content: #fff;
        --color-success: #0bbf58;
        --color-success-content: #fff;
        --color-warning: #f5a524;
        --color-warning-content: #150a00;
        --color-error: #f31260;
        --color-error-content: #fff;
        --radius-field: 20px;
        --radius-box: 20px;
        --rounded-box: 20px;
        --radius-selector: 20px;
        --size-selector: 0.25rem;
        --size-field: 0.25rem;
        --border: 1px;
        --card-p: 20px;
        --depth: 0;
        --noise: 0;
    }
    :root:has(input.theme-controller[value="dim"]:checked),
    [data-theme="dim"] {
        color-scheme: dark;
        --color-base-100: #2a2e38;
        --color-base-200: #343842;
        --color-base-300: #3c404a;
        --color-base-content: #f0f4f8;
        --color-primary: #378dff;
        --color-primary-content: #fff;
        --color-secondary: #b071ff;
        --color-secondary-content: #fff;
        --color-accent: #00d3bb;
        --color-accent-content: #f3fbf6;
        --color-neutral: #dce1e6;
        --color-neutral-content: #1e2832;
        --color-info: #14b4ff;
        --color-info-content: #fff;
        --color-success: #0bbf58;
        --color-success-content: #fff;
        --color-warning: #f5a524;
        --color-warning-content: #150a00;
        --color-error: #f31260;
        --color-error-content: #fff;
        --radius-selector: 0.25rem;
        --radius-field: 0.25rem;
        --radius-box: 0.25rem;
        --size-selector: 0.25rem;
        --size-field: 0.25rem;
        --border: 1px;
        --depth: 0;
        --noise: 0;
        --root-bg: #222630;
        --layout-sidebar-background: #2a2e38;
        --layout-topbar-background: #2a2e38;
        --rounded-box: 0.25rem;
        --card-p: 20px;
        --card-fs: var(--text-base);
    }
    :root:has(input.theme-controller[value="material-dark"]:checked),
    [data-theme="material-dark"] {
        color-scheme: dark;
        --root-bg: #141618;
        --layout-sidebar-background: #181c20;
        --layout-topbar-background: #181c22;
        --color-base-100: #181e24;
        --color-base-200: #202830;
        --color-base-300: #2c323a;
        --color-base-content: #f0f4f8;
        --color-primary: #378dff;
        --color-primary-content: #fff;
        --color-secondary: #b071ff;
        --color-secondary-content: #fff;
        --color-accent: #00d3bb;
        --color-accent-content: #f3fbf6;
        --color-neutral: #dce1e6;
        --color-neutral-content: #1e2832;
        --color-info: #14b4ff;
        --color-info-content: #fff;
        --color-success: #0bbf58;
        --color-success-content: #fff;
        --color-warning: #f5a524;
        --color-warning-content: #150a00;
        --color-error: #f31260;
        --color-error-content: #fff;
        --radius-field: 20px;
        --radius-box: 20px;
        --rounded-box: 20px;
        --radius-selector: 20px;
        --size-selector: 0.25rem;
        --size-field: 0.25rem;
        --border: 1px;
        --card-p: 20px;
        --depth: 0;
        --noise: 0;
    }
    @property --motion-bounce {
        syntax: "*";
        inherits: false;
        initial-value: linear(
            0,
            0.004,
            0.016,
            0.035,
            0.063,
            0.098,
            0.141 13.6%,
            0.25,
            0.391,
            0.563,
            0.765,
            1,
            0.891 40.9%,
            0.848,
            0.813,
            0.785,
            0.766,
            0.754,
            0.75,
            0.754,
            0.766,
            0.785,
            0.813,
            0.848,
            0.891 68.2%,
            1 72.7%,
            0.973,
            0.953,
            0.941,
            0.938,
            0.941,
            0.953,
            0.973,
            1,
            0.988,
            0.984,
            0.988,
            1
        );
    }
    @property --motion-spring-smooth {
        syntax: "*";
        inherits: false;
        initial-value: linear(
            0,
            0.001 0.44%,
            0.0045 0.94%,
            0.0195 2.03%,
            0.0446 3.19%,
            0.0811 4.5%,
            0.1598 6.82%,
            0.3685 12.34%,
            0.4693 15.17%,
            0.5663,
            0.6498 21.27%,
            0.7215 24.39%,
            0.7532 25.98%,
            0.7829 27.65%,
            0.8105,
            0.8349 31.14%,
            0.8573 32.95%,
            0.8776 34.84%,
            0.8964 36.87%,
            0.9136 39.05%,
            0.929 41.37%,
            0.9421 43.77%,
            0.9537 46.38%,
            0.9636 49.14%,
            0.9789 55.31%,
            0.9888 62.35%,
            0.9949 71.06%,
            0.9982 82.52%,
            0.9997 99.94%
        );
    }
    @property --motion-spring-snappy {
        syntax: "*";
        inherits: false;
        initial-value: linear(
            0,
            0.0014,
            0.0053 1.02%,
            0.0126,
            0.0227 2.18%,
            0.0517 3.41%,
            0.094 4.79%,
            0.1865 7.26%,
            0.4182 12.77%,
            0.5246 15.46%,
            0.6249,
            0.7112,
            0.7831 23.95%,
            0.8146 25.4%,
            0.844,
            0.8699 28.45%,
            0.8935,
            0.9139 31.64%,
            0.932,
            0.9473,
            0.9601 36.65%,
            0.9714 38.47%,
            0.9808 40.35%,
            0.9948 44.49%,
            1.0031 49.43%,
            1.0057 53.35%,
            1.0063 58.14%,
            1.0014 80.78%,
            1.0001 99.94%
        );
    }
    @property --motion-spring-bouncy {
        syntax: "*";
        inherits: false;
        initial-value: linear(
            0,
            0.0018,
            0.0069,
            0.0151 1.74%,
            0.0277 2.4%,
            0.062 3.7%,
            0.1115 5.15%,
            0.2211 7.77%,
            0.4778 13.21%,
            0.5912 15.75%,
            0.6987 18.44%,
            0.7862 20.98%,
            0.861 23.59%,
            0.8926,
            0.9205,
            0.945 27.51%,
            0.9671 28.89%,
            0.9868,
            1.003 31.79%,
            1.0224 34.11%,
            1.0358 36.58%,
            1.0436 39.27%,
            1.046 42.31%,
            1.0446 44.71%,
            1.0406 47.47%,
            1.0118 61.84%,
            1.0027 69.53%,
            0.9981 80.49%,
            0.9991 99.94%
        );
    }
    @property --motion-spring-bouncier {
        syntax: "*";
        inherits: false;
        initial-value: linear(
            0,
            0.0023,
            0.0088,
            0.0194 1.59%,
            0.035 2.17%,
            0.078 3.33%,
            0.1415 4.64%,
            0.2054 5.75%,
            0.2821 6.95%,
            0.5912 11.45%,
            0.7205 13.43%,
            0.8393 15.45%,
            0.936 17.39%,
            0.9778,
            1.015,
            1.0477,
            1.0759,
            1.0998 22.22%,
            1.1203,
            1.1364,
            1.1484 25.26%,
            1.1586 26.61%,
            1.1629 28.06%,
            1.1613 29.56%,
            1.1537 31.2%,
            1.1434 32.6%,
            1.1288 34.19%,
            1.0508 41.29%,
            1.0174 44.87%,
            1.0025 46.89%,
            0.9911 48.87%,
            0.9826 50.9%,
            0.9769 53.03%,
            0.9735 56.02%,
            0.9748 59.45%,
            0.9964 72.64%,
            1.0031 79.69%,
            1.0042 86.83%,
            1.0008 99.97%
        );
    }
    @property --motion-spring-bounciest {
        syntax: "*";
        inherits: false;
        initial-value: linear(
            0,
            0.0032,
            0.0131,
            0.0294,
            0.0524,
            0.0824,
            0.1192 1.54%,
            0.2134 2.11%,
            0.3102 2.59%,
            0.4297 3.13%,
            0.8732 4.95%,
            1.0373,
            1.1827 6.36%,
            1.2972 7.01%,
            1.3444,
            1.3859,
            1.4215,
            1.4504,
            1.4735,
            1.4908,
            1.5024,
            1.5084 9.5%,
            1.5091,
            1.5061,
            1.4993,
            1.4886,
            1.4745,
            1.4565 11.11%,
            1.4082 11.7%,
            1.3585 12.2%,
            1.295 12.77%,
            1.0623 14.64%,
            0.9773,
            0.9031 16.08%,
            0.8449 16.73%,
            0.8014,
            0.7701 17.95%,
            0.7587,
            0.7501,
            0.7443,
            0.7412 19.16%,
            0.7421 19.68%,
            0.7508 20.21%,
            0.7672 20.77%,
            0.7917 21.37%,
            0.8169 21.87%,
            0.8492 22.43%,
            0.9681 24.32%,
            1.0114,
            1.0492 25.75%,
            1.0789 26.41%,
            1.1008,
            1.1167,
            1.1271,
            1.1317 28.81%,
            1.1314,
            1.1271 29.87%,
            1.1189 30.43%,
            1.1063 31.03%,
            1.0769 32.11%,
            0.9941 34.72%,
            0.9748 35.43%,
            0.9597 36.09%,
            0.9487,
            0.9407,
            0.9355,
            0.933 38.46%,
            0.9344 39.38%,
            0.9421 40.38%,
            0.9566 41.5%,
            0.9989 44.12%,
            1.0161 45.37%,
            1.029 46.75%,
            1.0341 48.1%,
            1.0335 49.04%,
            1.0295 50.05%,
            1.0221 51.18%,
            0.992 55.02%,
            0.9854 56.38%,
            0.9827 57.72%,
            0.985 59.73%,
            1.004 64.67%,
            1.0088 67.34%,
            1.0076 69.42%,
            0.9981 74.28%,
            0.9956 76.85%,
            0.9961 79.06%,
            1.0023 86.46%,
            0.999 95.22%,
            0.9994 100%
        );
    }
    @property --motion-origin-scale-x {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }
    @property --motion-origin-scale-y {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }
    @property --motion-origin-translate-x {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }
    @property --motion-origin-translate-y {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }
    @property --motion-origin-rotate {
        syntax: "*";
        inherits: false;
        initial-value: 0deg;
    }
    @property --motion-origin-blur {
        syntax: "*";
        inherits: false;
        initial-value: 0px;
    }
    @property --motion-origin-grayscale {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }
    @property --motion-origin-opacity {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }
    @property --motion-origin-background-color {
        syntax: "*";
        inherits: false;
    }
    @property --motion-origin-text-color {
        syntax: "*";
        inherits: false;
    }
    @property --motion-end-scale-x {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }
    @property --motion-end-scale-y {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }
    @property --motion-end-translate-x {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }
    @property --motion-end-translate-y {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }
    @property --motion-end-rotate {
        syntax: "*";
        inherits: false;
        initial-value: 0deg;
    }
    @property --motion-end-blur {
        syntax: "*";
        inherits: false;
        initial-value: 0px;
    }
    @property --motion-end-grayscale {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }
    @property --motion-end-opacity {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }
    @property --motion-end-background-color {
        syntax: "*";
        inherits: false;
    }
    @property --motion-end-text-color {
        syntax: "*";
        inherits: false;
    }
    @property --motion-loop-scale-x {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }
    @property --motion-loop-scale-y {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }
    @property --motion-loop-translate-x {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }
    @property --motion-loop-translate-y {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }
    @property --motion-loop-rotate {
        syntax: "*";
        inherits: false;
        initial-value: 0deg;
    }
    @property --motion-loop-blur {
        syntax: "*";
        inherits: false;
        initial-value: 0px;
    }
    @property --motion-loop-grayscale {
        syntax: "*";
        inherits: false;
        initial-value: 0%;
    }
    @property --motion-loop-opacity {
        syntax: "*";
        inherits: false;
        initial-value: 100%;
    }
    @property --motion-loop-background-color {
        syntax: "*";
        inherits: false;
    }
    @property --motion-loop-text-color {
        syntax: "*";
        inherits: false;
    }
    @property --motion-duration {
        syntax: "*";
        inherits: false;
        initial-value: 0.7s;
    }
    @property --motion-timing {
        syntax: "*";
        inherits: false;
        initial-value: cubic-bezier(0.165, 0.84, 0.44, 1);
    }
    @property --motion-perceptual-duration-multiplier {
        syntax: "*";
        inherits: false;
        initial-value: 1;
    }
    @property --motion-delay {
        syntax: "*";
        inherits: false;
        initial-value: 0s;
    }
    @property --motion-loop-count {
        syntax: "*";
        inherits: false;
        initial-value: infinite;
    }
    @property --motion-scale-in-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }
    @property --motion-translate-in-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }
    @property --motion-rotate-in-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }
    @property --motion-filter-in-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }
    @property --motion-opacity-in-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }
    @property --motion-background-color-in-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }
    @property --motion-text-color-in-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }
    @property --motion-scale-out-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }
    @property --motion-translate-out-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }
    @property --motion-rotate-out-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }
    @property --motion-filter-out-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }
    @property --motion-opacity-out-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }
    @property --motion-background-color-out-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }
    @property --motion-text-color-out-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }
    @property --motion-scale-loop-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }
    @property --motion-translate-loop-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }
    @property --motion-rotate-loop-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }
    @property --motion-filter-loop-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }
    @property --motion-opacity-loop-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }
    @property --motion-background-color-loop-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }
    @property --motion-text-color-loop-animation {
        syntax: "*";
        inherits: false;
        initial-value: none;
    }
    @media screen and (prefers-reduced-motion: no-preference) {
        @keyframes motion-scale-in {
            0% {
                scale: var(--motion-origin-scale-x) var(--motion-origin-scale-y);
            }
            to {
                scale: 1;
            }
        }
        @keyframes motion-scale-out {
            0% {
                scale: 1;
            }
            to {
                scale: var(--motion-end-scale-x) var(--motion-end-scale-y);
            }
        }
        @keyframes motion-scale-loop-mirror {
            0%,
            to {
                scale: 1;
            }
            50% {
                scale: var(--motion-loop-scale-x) var(--motion-loop-scale-y);
            }
        }
        @keyframes motion-scale-loop-reset {
            0% {
                scale: 1;
            }
            to {
                scale: var(--motion-loop-scale-x) var(--motion-loop-scale-y);
            }
        }
        @keyframes motion-translate-in {
            0% {
                translate: var(--motion-origin-translate-x) var(--motion-origin-translate-y);
            }
            to {
                translate: 0;
            }
        }
        @keyframes motion-translate-out {
            0% {
                translate: 0;
            }
            to {
                translate: var(--motion-end-translate-x) var(--motion-end-translate-y);
            }
        }
        @keyframes motion-translate-loop-mirror {
            0%,
            to {
                translate: 0;
            }
            50% {
                translate: var(--motion-loop-translate-x) var(--motion-loop-translate-y);
            }
        }
        @keyframes motion-translate-loop-reset {
            0% {
                translate: 0;
            }
            to {
                translate: var(--motion-loop-translate-x) var(--motion-loop-translate-y);
            }
        }
        @keyframes motion-rotate-in {
            0% {
                rotate: var(--motion-origin-rotate);
            }
            to {
                rotate: 0;
            }
        }
        @keyframes motion-rotate-out {
            0% {
                rotate: 0;
            }
            to {
                rotate: var(--motion-end-rotate);
            }
        }
        @keyframes motion-rotate-loop-mirror {
            0%,
            to {
                rotate: none;
            }
            50% {
                rotate: var(--motion-loop-rotate);
            }
        }
        @keyframes motion-rotate-loop-reset {
            to {
                rotate: var(--motion-loop-rotate);
            }
        }
    }
    @keyframes motion-filter-in {
        0% {
            filter: blur(var(--motion-origin-blur)) grayscale(var(--motion-origin-grayscale));
        }
        to {
            filter: blur() grayscale(0);
        }
    }
    @keyframes motion-filter-out {
        0% {
            filter: blur() grayscale(0);
        }
        to {
            filter: blur(var(--motion-end-blur)) grayscale(var(--motion-end-grayscale));
        }
    }
    @keyframes motion-filter-loop-mirror {
        0%,
        to {
            filter: blur() grayscale(0);
        }
        50% {
            filter: blur(var(--motion-loop-blur)) grayscale(var(--motion-loop-grayscale));
        }
    }
    @keyframes motion-filter-loop-reset {
        0% {
            filter: blur() grayscale(0);
        }
        to {
            filter: blur(var(--motion-loop-blur)) grayscale(var(--motion-loop-grayscale));
        }
    }
    @keyframes motion-opacity-in {
        0% {
            opacity: var(--motion-origin-opacity);
        }
    }
    @keyframes motion-opacity-out {
        to {
            opacity: var(--motion-end-opacity);
        }
    }
    @keyframes motion-opacity-loop-mirror {
        50% {
            opacity: var(--motion-loop-opacity);
        }
    }
    @keyframes motion-opacity-loop-reset {
        to {
            opacity: var(--motion-loop-opacity);
        }
    }
    @keyframes motion-background-color-in {
        0% {
            background-color: var(--motion-origin-background-color);
        }
    }
    @keyframes motion-background-color-out {
        to {
            background-color: var(--motion-end-background-color);
        }
    }
    @keyframes motion-background-color-loop-mirror {
        50% {
            background-color: var(--motion-loop-background-color);
        }
    }
    @keyframes motion-background-color-loop-reset {
        to {
            background-color: var(--motion-loop-background-color);
        }
    }
    @keyframes motion-text-color-in {
        0% {
            color: var(--motion-origin-text-color);
        }
    }
    @keyframes motion-text-color-out {
        to {
            color: var(--motion-end-text-color);
        }
    }
    @keyframes motion-text-color-loop-mirror {
        50% {
            color: var(--motion-loop-text-color);
        }
    }
    @keyframes motion-text-color-loop-reset {
        to {
            color: var(--motion-loop-text-color);
        }
    }
}
@layer components;
@layer utilities {
    .modal {
        pointer-events: none;
        visibility: hidden;
        width: 100%;
        max-width: none;
        height: 100%;
        max-height: none;
        color: inherit;
        transition:
            translate 0.3s ease-out,
            visibility 0.3s allow-discrete,
            background-color 0.3s ease-out,
            opacity 0.1s ease-out;
        overscroll-behavior: contain;
        z-index: 999;
        scrollbar-gutter: auto;
        background-color: #0000;
        place-items: center;
        margin: 0;
        padding: 0;
        display: grid;
        position: fixed;
        inset: 0;
        overflow: hidden;
    }
    .modal::backdrop {
        display: none;
    }
    .modal.modal-open,
    .modal[open],
    .modal:target {
        pointer-events: auto;
        visibility: visible;
        opacity: 1;
        background-color: #0006;
    }
    :is(.modal.modal-open, .modal[open], .modal:target) .modal-box {
        opacity: 1;
        translate: 0;
        scale: 1;
    }
    @starting-style {
        .modal.modal-open,
        .modal[open],
        .modal:target {
            visibility: hidden;
            opacity: 0;
        }
    }
    .drawer-side {
        pointer-events: none;
        visibility: hidden;
        z-index: 10;
        overscroll-behavior: contain;
        opacity: 0;
        width: 100%;
        transition:
            opacity 0.2s ease-out 0.1s allow-discrete,
            visibility 0.3s ease-out 0.1s allow-discrete;
        inset-inline-start: 0;
        grid-template-rows: repeat(1, minmax(0, 1fr));
        grid-template-columns: repeat(1, minmax(0, 1fr));
        grid-row-start: 1;
        grid-column-start: 1;
        place-items: flex-start start;
        height: 100dvh;
        display: grid;
        position: fixed;
        top: 0;
        overflow: hidden;
    }
    .drawer-side > .drawer-overlay {
        cursor: pointer;
        background-color: #0006;
        place-self: stretch stretch;
        position: sticky;
        top: 0;
    }
    .drawer-side > * {
        grid-row-start: 1;
        grid-column-start: 1;
    }
    .drawer-side > :not(.drawer-overlay) {
        will-change: transform;
        transition: translate 0.3s ease-out;
        translate: -100%;
    }
    [dir="rtl"] :is(.drawer-side > :not(.drawer-overlay)) {
        translate: 100%;
    }
    .drawer-toggle {
        appearance: none;
        opacity: 0;
        width: 0;
        height: 0;
        position: fixed;
    }
    .drawer-toggle:checked ~ .drawer-side {
        pointer-events: auto;
        visibility: visible;
        opacity: 1;
        overflow-y: auto;
    }
    .drawer-toggle:checked ~ .drawer-side > :not(.drawer-overlay) {
        translate: 0%;
    }
    .drawer-toggle:focus-visible ~ .drawer-content label.drawer-button {
        outline-offset: 2px;
        outline: 2px solid;
    }
    .tooltip {
        --tt-bg: var(--color-neutral);
        --tt-off: calc(100% + 0.5rem);
        --tt-tail: calc(100% + 1px + 0.25rem);
        display: inline-block;
        position: relative;
    }
    .tooltip > :where(.tooltip-content),
    .tooltip:where([data-tip]):before {
        border-radius: var(--radius-field);
        text-align: center;
        white-space: normal;
        max-width: 20rem;
        color: var(--color-neutral-content);
        opacity: 0;
        background-color: var(--tt-bg);
        pointer-events: none;
        z-index: 2;
        --tw-content: attr(data-tip);
        content: var(--tw-content);
        width: max-content;
        padding-block: 0.25rem;
        padding-inline: 0.5rem;
        font-size: 0.875rem;
        line-height: 1.25;
        position: absolute;
    }
    @media (prefers-reduced-motion: no-preference) {
        .tooltip > :where(.tooltip-content),
        .tooltip:where([data-tip]):before,
        .tooltip:after {
            transition:
                opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms,
                transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms;
        }
    }
    .tooltip:after {
        opacity: 0;
        background-color: var(--tt-bg);
        content: "";
        pointer-events: none;
        --mask-tooltip: url("data:image/svg+xml,%3Csvg width='10' height='4' viewBox='0 0 8 4' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0.500009 1C3.5 1 3.00001 4 5.00001 4C7 4 6.5 1 9.5 1C10 1 10 0.499897 10 0H0C-1.99338e-08 0.5 0 1 0.500009 1Z' fill='black'/%3E%3C/svg%3E%0A");
        width: 0.625rem;
        height: 0.25rem;
        -webkit-mask-position: -1px 0;
        mask-position: -1px 0;
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-image: var(--mask-tooltip);
        mask-image: var(--mask-tooltip);
        display: block;
        position: absolute;
    }
    :is(
            .tooltip.tooltip-open,
            .tooltip[data-tip]:not([data-tip=""]):hover,
            .tooltip:not(:has(.tooltip-content:empty)):has(.tooltip-content):hover,
            .tooltip:has(:focus-visible)
        )
        > .tooltip-content,
    :is(
            .tooltip.tooltip-open,
            .tooltip[data-tip]:not([data-tip=""]):hover,
            .tooltip:not(:has(.tooltip-content:empty)):has(.tooltip-content):hover,
            .tooltip:has(:focus-visible)
        )[data-tip]:before,
    :is(
        .tooltip.tooltip-open,
        .tooltip[data-tip]:not([data-tip=""]):hover,
        .tooltip:not(:has(.tooltip-content:empty)):has(.tooltip-content):hover,
        .tooltip:has(:focus-visible)
    ):after {
        opacity: 1;
        --tt-pos: 0rem;
    }
    @media (prefers-reduced-motion: no-preference) {
        :is(
                .tooltip.tooltip-open,
                .tooltip[data-tip]:not([data-tip=""]):hover,
                .tooltip:not(:has(.tooltip-content:empty)):has(.tooltip-content):hover,
                .tooltip:has(:focus-visible)
            )
            > .tooltip-content,
        :is(
                .tooltip.tooltip-open,
                .tooltip[data-tip]:not([data-tip=""]):hover,
                .tooltip:not(:has(.tooltip-content:empty)):has(.tooltip-content):hover,
                .tooltip:has(:focus-visible)
            )[data-tip]:before,
        :is(
            .tooltip.tooltip-open,
            .tooltip[data-tip]:not([data-tip=""]):hover,
            .tooltip:not(:has(.tooltip-content:empty)):has(.tooltip-content):hover,
            .tooltip:has(:focus-visible)
        ):after {
            transition:
                opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1),
                transform 0.2s cubic-bezier(0.4, 0, 0.2, 1);
        }
    }
    .tooltip > .tooltip-content,
    .tooltip[data-tip]:before {
        transform: translate(-50%) translateY(var(--tt-pos, 0.25rem));
        inset: auto auto var(--tt-off) 50%;
    }
    .tooltip:after {
        transform: translate(-50%) translateY(var(--tt-pos, 0.25rem));
        inset: auto auto var(--tt-tail) 50%;
    }
    .tab {
        cursor: pointer;
        appearance: none;
        text-align: center;
        webkit-user-select: none;
        -webkit-user-select: none;
        user-select: none;
        flex-wrap: wrap;
        justify-content: center;
        align-items: center;
        display: inline-flex;
        position: relative;
    }
    @media (hover: hover) {
        .tab:hover {
            color: var(--color-base-content);
        }
    }
    .tab {
        --tab-p: 1rem;
        --tab-bg: var(--color-base-100);
        --tab-border-color: var(--color-base-300);
        --tab-radius-ss: 0;
        --tab-radius-se: 0;
        --tab-radius-es: 0;
        --tab-radius-ee: 0;
        --tab-order: 0;
        --tab-radius-min: calc(0.75rem - var(--border));
        order: var(--tab-order);
        height: var(--tab-height);
        border-color: #0000;
        padding-inline-start: var(--tab-p);
        padding-inline-end: var(--tab-p);
        font-size: 0.875rem;
    }
    .tab:is(input[type="radio"]) {
        min-width: fit-content;
    }
    .tab:is(input[type="radio"]):after {
        content: attr(aria-label);
    }
    .tab:is(label) {
        position: relative;
    }
    .tab:is(label) input {
        cursor: pointer;
        appearance: none;
        opacity: 0;
        position: absolute;
        inset: 0;
    }
    :is(
            .tab:checked,
            .tab:is(label:has(:checked)),
            .tab:is(
                .tab-active,
                [aria-selected="true"],
                [aria-current="true"],
                [aria-current="page"]
            )
        )
        + .tab-content {
        height: calc(100% - var(--tab-height) + var(--border));
        display: block;
    }
    .tab:not(
        :checked,
        label:has(:checked),
        :hover,
        .tab-active,
        [aria-selected="true"],
        [aria-current="true"],
        [aria-current="page"]
    ) {
        color: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .tab:not(
            :checked,
            label:has(:checked),
            :hover,
            .tab-active,
            [aria-selected="true"],
            [aria-current="true"],
            [aria-current="page"]
        ) {
            color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
        }
    }
    .tab:not(input):empty {
        cursor: default;
        flex-grow: 1;
    }
    .tab:focus {
        --tw-outline-style: none;
        outline-style: none;
    }
    @media (forced-colors: active) {
        .tab:focus {
            outline-offset: 2px;
            outline: 2px solid #0000;
        }
    }
    .tab:focus-visible,
    .tab:is(label:has(:checked:focus-visible)) {
        outline-offset: -5px;
        outline: 2px solid;
    }
    .tab[disabled] {
        pointer-events: none;
        opacity: 0.4;
    }
    .menu {
        --menu-active-fg: var(--color-neutral-content);
        --menu-active-bg: var(--color-neutral);
        flex-flow: column wrap;
        width: fit-content;
        padding: 0.5rem;
        font-size: 0.875rem;
        display: flex;
    }
    .menu :where(li ul) {
        white-space: nowrap;
        margin-inline-start: 1rem;
        padding-inline-start: 0.5rem;
        position: relative;
    }
    .menu :where(li ul):before {
        background-color: var(--color-base-content);
        opacity: 0.1;
        width: var(--border);
        content: "";
        inset-inline-start: 0;
        position: absolute;
        top: 0.75rem;
        bottom: 0.75rem;
    }
    .menu :where(li > .menu-dropdown:not(.menu-dropdown-show)) {
        display: none;
    }
    .menu :where(li:not(.menu-title) > :not(ul, details, .menu-title, .btn)),
    .menu :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
        border-radius: var(--radius-field);
        text-align: start;
        text-wrap: balance;
        -webkit-user-select: none;
        user-select: none;
        grid-auto-columns: minmax(auto, max-content) auto max-content;
        grid-auto-flow: column;
        align-content: flex-start;
        align-items: center;
        gap: 0.5rem;
        padding-block: 0.375rem;
        padding-inline: 0.75rem;
        transition-property: color, background-color, box-shadow;
        transition-duration: 0.2s;
        transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
        display: grid;
    }
    .menu :where(li > details > summary) {
        --tw-outline-style: none;
        outline-style: none;
    }
    @media (forced-colors: active) {
        .menu :where(li > details > summary) {
            outline-offset: 2px;
            outline: 2px solid #0000;
        }
    }
    .menu :where(li > details > summary)::-webkit-details-marker {
        display: none;
    }
    :is(.menu :where(li > details > summary), .menu :where(li > .menu-dropdown-toggle)):after {
        content: "";
        transform-origin: 50%;
        pointer-events: none;
        justify-self: flex-end;
        width: 0.375rem;
        height: 0.375rem;
        transition-property: rotate, translate;
        transition-duration: 0.2s;
        display: block;
        translate: 0 -1px;
        rotate: -135deg;
        box-shadow: inset 2px 2px;
    }
    .menu :where(li > details[open] > summary):after,
    .menu :where(li > .menu-dropdown-toggle.menu-dropdown-show):after {
        translate: 0 1px;
        rotate: 45deg;
    }
    .menu
        :where(
            li:not(.menu-title, .disabled) > :not(ul, details, .menu-title),
            li:not(.menu-title, .disabled) > details > summary:not(.menu-title)
        ):not(.menu-active, :active, .btn).menu-focus,
    .menu
        :where(
            li:not(.menu-title, .disabled) > :not(ul, details, .menu-title),
            li:not(.menu-title, .disabled) > details > summary:not(.menu-title)
        ):not(.menu-active, :active, .btn):focus-visible {
        cursor: pointer;
        background-color: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .menu
            :where(
                li:not(.menu-title, .disabled) > :not(ul, details, .menu-title),
                li:not(.menu-title, .disabled) > details > summary:not(.menu-title)
            ):not(.menu-active, :active, .btn).menu-focus,
        .menu
            :where(
                li:not(.menu-title, .disabled) > :not(ul, details, .menu-title),
                li:not(.menu-title, .disabled) > details > summary:not(.menu-title)
            ):not(.menu-active, :active, .btn):focus-visible {
            background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
        }
    }
    .menu
        :where(
            li:not(.menu-title, .disabled) > :not(ul, details, .menu-title),
            li:not(.menu-title, .disabled) > details > summary:not(.menu-title)
        ):not(.menu-active, :active, .btn).menu-focus,
    .menu
        :where(
            li:not(.menu-title, .disabled) > :not(ul, details, .menu-title),
            li:not(.menu-title, .disabled) > details > summary:not(.menu-title)
        ):not(.menu-active, :active, .btn):focus-visible {
        color: var(--color-base-content);
        --tw-outline-style: none;
        outline-style: none;
    }
    @media (forced-colors: active) {
        .menu
            :where(
                li:not(.menu-title, .disabled) > :not(ul, details, .menu-title),
                li:not(.menu-title, .disabled) > details > summary:not(.menu-title)
            ):not(.menu-active, :active, .btn).menu-focus,
        .menu
            :where(
                li:not(.menu-title, .disabled) > :not(ul, details, .menu-title),
                li:not(.menu-title, .disabled) > details > summary:not(.menu-title)
            ):not(.menu-active, :active, .btn):focus-visible {
            outline-offset: 2px;
            outline: 2px solid #0000;
        }
    }
    .menu
        :where(
            li:not(.menu-title, .disabled)
                > :not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover,
            li:not(.menu-title, .disabled)
                > details
                > summary:not(.menu-title):not(.menu-active, :active, .btn):hover
        ) {
        cursor: pointer;
        background-color: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .menu
            :where(
                li:not(.menu-title, .disabled)
                    > :not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover,
                li:not(.menu-title, .disabled)
                    > details
                    > summary:not(.menu-title):not(.menu-active, :active, .btn):hover
            ) {
            background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
        }
    }
    .menu
        :where(
            li:not(.menu-title, .disabled)
                > :not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover,
            li:not(.menu-title, .disabled)
                > details
                > summary:not(.menu-title):not(.menu-active, :active, .btn):hover
        ) {
        --tw-outline-style: none;
        outline-style: none;
    }
    @media (forced-colors: active) {
        .menu
            :where(
                li:not(.menu-title, .disabled)
                    > :not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover,
                li:not(.menu-title, .disabled)
                    > details
                    > summary:not(.menu-title):not(.menu-active, :active, .btn):hover
            ) {
            outline-offset: 2px;
            outline: 2px solid #0000;
        }
    }
    .menu
        :where(
            li:not(.menu-title, .disabled)
                > :not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover,
            li:not(.menu-title, .disabled)
                > details
                > summary:not(.menu-title):not(.menu-active, :active, .btn):hover
        ) {
        box-shadow:
            inset 0 1px #00000003,
            inset 0 -1px #ffffff03;
    }
    .menu :where(li:empty) {
        background-color: var(--color-base-content);
        opacity: 0.1;
        height: 1px;
        margin: 0.5rem 1rem;
    }
    .menu :where(li) {
        flex-flow: column wrap;
        flex-shrink: 0;
        align-items: stretch;
        display: flex;
        position: relative;
    }
    .menu :where(li) .badge {
        justify-self: flex-end;
    }
    .menu :where(li) > :not(ul, .menu-title, details, .btn):active,
    .menu :where(li) > :not(ul, .menu-title, details, .btn).menu-active,
    .menu :where(li) > details > summary:active {
        --tw-outline-style: none;
        outline-style: none;
    }
    @media (forced-colors: active) {
        .menu :where(li) > :not(ul, .menu-title, details, .btn):active,
        .menu :where(li) > :not(ul, .menu-title, details, .btn).menu-active,
        .menu :where(li) > details > summary:active {
            outline-offset: 2px;
            outline: 2px solid #0000;
        }
    }
    .menu :where(li) > :not(ul, .menu-title, details, .btn):active,
    .menu :where(li) > :not(ul, .menu-title, details, .btn).menu-active,
    .menu :where(li) > details > summary:active {
        color: var(--menu-active-fg);
        background-color: var(--menu-active-bg);
        background-size: auto, calc(var(--noise) * 100%);
        background-image: none, var(--fx-noise);
    }
    :is(
        .menu :where(li) > :not(ul, .menu-title, details, .btn):active,
        .menu :where(li) > :not(ul, .menu-title, details, .btn).menu-active,
        .menu :where(li) > details > summary:active
    ):not(
        :is(
            .menu :where(li) > :not(ul, .menu-title, details, .btn):active,
            .menu :where(li) > :not(ul, .menu-title, details, .btn).menu-active,
            .menu :where(li) > details > summary:active
        ):active
    ) {
        box-shadow: 0 2px calc(var(--depth) * 3px) -2px var(--menu-active-bg);
    }
    .menu :where(li).menu-disabled {
        pointer-events: none;
        color: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .menu :where(li).menu-disabled {
            color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
        }
    }
    .menu .dropdown:focus-within .menu-dropdown-toggle:after {
        translate: 0 1px;
        rotate: 45deg;
    }
    .menu .dropdown-content {
        margin-top: 0.5rem;
        padding: 0.5rem;
    }
    .menu .dropdown-content:before {
        display: none;
    }
    .collapse-plus > .collapse-title:after {
        width: 0.5rem;
        height: 0.5rem;
        display: block;
        position: absolute;
    }
    @media (prefers-reduced-motion: no-preference) {
        .collapse-plus > .collapse-title:after {
            transition-property: all;
            transition-duration: 0.3s;
            transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        }
    }
    .collapse-plus > .collapse-title:after {
        content: "+";
        pointer-events: none;
        top: 0.9rem;
        inset-inline-end: 1.4rem;
    }
    .dropdown {
        position-area: var(--anchor-v, bottom) var(--anchor-h, span-right);
        display: inline-block;
        position: relative;
    }
    .dropdown > :not(summary):focus {
        --tw-outline-style: none;
        outline-style: none;
    }
    @media (forced-colors: active) {
        .dropdown > :not(summary):focus {
            outline-offset: 2px;
            outline: 2px solid #0000;
        }
    }
    .dropdown .dropdown-content {
        position: absolute;
    }
    .dropdown:not(details, .dropdown-open, .dropdown-hover:hover, :focus-within) .dropdown-content {
        transform-origin: top;
        opacity: 0;
        display: none;
        scale: 95%;
    }
    .dropdown[popover],
    .dropdown .dropdown-content {
        z-index: 999;
    }
    @media (prefers-reduced-motion: no-preference) {
        .dropdown[popover],
        .dropdown .dropdown-content {
            transition-behavior: allow-discrete;
            transition-property: opacity, scale, display;
            transition-duration: 0.2s;
            transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
            animation: 0.2s dropdown;
        }
    }
    @starting-style {
        .dropdown[popover],
        .dropdown .dropdown-content {
            opacity: 0;
            scale: 95%;
        }
    }
    :is(.dropdown.dropdown-open, .dropdown:not(.dropdown-hover):focus, .dropdown:focus-within)
        > [tabindex]:first-child {
        pointer-events: none;
    }
    :is(.dropdown.dropdown-open, .dropdown:not(.dropdown-hover):focus, .dropdown:focus-within)
        .dropdown-content {
        opacity: 1;
    }
    .dropdown.dropdown-hover:hover .dropdown-content {
        opacity: 1;
        scale: 100%;
    }
    .dropdown:is(details) summary::-webkit-details-marker {
        display: none;
    }
    :is(.dropdown.dropdown-open, .dropdown:focus, .dropdown:focus-within) .dropdown-content {
        scale: 100%;
    }
    .dropdown:where([popover]) {
        background: 0 0;
    }
    .dropdown[popover] {
        color: inherit;
        position: fixed;
    }
    @supports not (position-area: bottom) {
        .dropdown[popover] {
            margin: auto;
        }
        .dropdown[popover].dropdown-open:not(:popover-open) {
            transform-origin: top;
            opacity: 0;
            display: none;
            scale: 95%;
        }
        .dropdown[popover]::backdrop {
            background-color: oklab(0% none none/.3);
        }
    }
    .dropdown[popover]:not(.dropdown-open, :popover-open) {
        transform-origin: top;
        opacity: 0;
        display: none;
        scale: 95%;
    }
    :where(.btn) {
        width: unset;
    }
    .btn {
        cursor: pointer;
        text-align: center;
        vertical-align: middle;
        outline-offset: 2px;
        webkit-user-select: none;
        -webkit-user-select: none;
        user-select: none;
        padding-inline: var(--btn-p);
        color: var(--btn-fg);
        --tw-prose-links: var(--btn-fg);
        height: var(--size);
        font-size: var(--fontsize, 0.875rem);
        outline-color: var(--btn-color, var(--color-base-content));
        background-color: var(--btn-bg);
        background-size: auto, calc(var(--noise) * 100%);
        background-image: none, var(--btn-noise);
        border-width: var(--border);
        border-style: solid;
        border-color: var(--btn-border);
        text-shadow: 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 0.15));
        touch-action: manipulation;
        box-shadow:
            0 0.5px 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 6%)) inset,
            var(--btn-shadow);
        --size: calc(var(--size-field, 0.25rem) * 10);
        --btn-bg: var(--btn-color, var(--color-base-200));
        --btn-fg: var(--color-base-content);
        --btn-p: 1rem;
        --btn-border: var(--btn-bg);
        border-start-start-radius: var(--join-ss, var(--radius-field));
        border-start-end-radius: var(--join-se, var(--radius-field));
        border-end-end-radius: var(--join-ee, var(--radius-field));
        border-end-start-radius: var(--join-es, var(--radius-field));
        flex-wrap: nowrap;
        flex-shrink: 0;
        justify-content: center;
        align-items: center;
        gap: 0.375rem;
        font-weight: 600;
        transition-property: color, background-color, border-color, box-shadow;
        transition-duration: 0.2s;
        transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
        display: inline-flex;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .btn {
            --btn-border: color-mix(in oklab, var(--btn-bg), #000 calc(var(--depth) * 5%));
        }
    }
    .btn {
        --btn-shadow: 0 3px 2px -2px var(--btn-bg), 0 4px 3px -2px var(--btn-bg);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .btn {
            --btn-shadow:
                0 3px 2px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000),
                0 4px 3px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000);
        }
    }
    .btn {
        --btn-noise: var(--fx-noise);
    }
    .prose .btn {
        text-decoration-line: none;
    }
    @media (hover: hover) {
        .btn:hover {
            --btn-bg: var(--btn-color, var(--color-base-200));
        }
        @supports (color: color-mix(in lab, red, red)) {
            .btn:hover {
                --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
            }
        }
    }
    .btn:focus-visible,
    .btn:has(:focus-visible) {
        isolation: isolate;
        outline-width: 2px;
        outline-style: solid;
    }
    .btn:active:not(.btn-active) {
        --btn-bg: var(--btn-color, var(--color-base-200));
        translate: 0 0.5px;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .btn:active:not(.btn-active) {
            --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 5%);
        }
    }
    .btn:active:not(.btn-active) {
        --btn-border: var(--btn-color, var(--color-base-200));
    }
    @supports (color: color-mix(in lab, red, red)) {
        .btn:active:not(.btn-active) {
            --btn-border: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
        }
    }
    .btn:active:not(.btn-active) {
        --btn-shadow: 0 0 0 0 oklch(0% 0 0/0), 0 0 0 0 oklch(0% 0 0/0);
    }
    .btn:is(:disabled, [disabled], .btn-disabled):not(.btn-link, .btn-ghost) {
        background-color: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .btn:is(:disabled, [disabled], .btn-disabled):not(.btn-link, .btn-ghost) {
            background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
        }
    }
    .btn:is(:disabled, [disabled], .btn-disabled):not(.btn-link, .btn-ghost) {
        box-shadow: none;
    }
    .btn:is(:disabled, [disabled], .btn-disabled) {
        pointer-events: none;
        --btn-border: #0000;
        --btn-noise: none;
        --btn-fg: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .btn:is(:disabled, [disabled], .btn-disabled) {
            --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
        }
    }
    @media (hover: hover) {
        .btn:is(:disabled, [disabled], .btn-disabled):hover {
            pointer-events: none;
            background-color: var(--color-neutral);
        }
        @supports (color: color-mix(in lab, red, red)) {
            .btn:is(:disabled, [disabled], .btn-disabled):hover {
                background-color: color-mix(in oklab, var(--color-neutral) 20%, transparent);
            }
        }
        .btn:is(:disabled, [disabled], .btn-disabled):hover {
            --btn-border: #0000;
            --btn-fg: var(--color-base-content);
        }
        @supports (color: color-mix(in lab, red, red)) {
            .btn:is(:disabled, [disabled], .btn-disabled):hover {
                --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
            }
        }
    }
    .btn:is(input[type="checkbox"], input[type="radio"]) {
        appearance: none;
    }
    .btn:is(input[type="checkbox"], input[type="radio"]):after {
        content: attr(aria-label);
    }
    .btn:where(input:checked:not(.filter .btn)) {
        --btn-color: var(--color-primary);
        --btn-fg: var(--color-primary-content);
        isolation: isolate;
    }
    .loading {
        pointer-events: none;
        aspect-ratio: 1;
        vertical-align: middle;
        width: calc(var(--size-selector, 0.25rem) * 6);
        background-color: currentColor;
        display: inline-block;
        -webkit-mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='black' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cg transform-origin='center'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3' stroke-linecap='round'%3E%3CanimateTransform attributeName='transform' type='rotate' from='0 12 12' to='360 12 12' dur='2s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dasharray' values='0,150;42,150;42,150' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dashoffset' values='0;-16;-59' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3C/circle%3E%3C/g%3E%3C/svg%3E");
        mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='black' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cg transform-origin='center'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3' stroke-linecap='round'%3E%3CanimateTransform attributeName='transform' type='rotate' from='0 12 12' to='360 12 12' dur='2s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dasharray' values='0,150;42,150;42,150' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dashoffset' values='0;-16;-59' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3C/circle%3E%3C/g%3E%3C/svg%3E");
        -webkit-mask-position: 50%;
        mask-position: 50%;
        -webkit-mask-size: 100%;
        mask-size: 100%;
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
    }
    .pointer-events-none {
        pointer-events: none;
    }
    .collapse:not(td, tr, colgroup) {
        visibility: visible;
    }
    .collapse {
        border-radius: var(--radius-box, 1rem);
        isolation: isolate;
        grid-template-rows: max-content 0fr;
        width: 100%;
        display: grid;
        position: relative;
        overflow: hidden;
    }
    @media (prefers-reduced-motion: no-preference) {
        .collapse {
            transition: grid-template-rows 0.2s;
        }
    }
    .collapse > input:is([type="checkbox"], [type="radio"]) {
        appearance: none;
        opacity: 0;
        z-index: 1;
        grid-row-start: 1;
        grid-column-start: 1;
        width: 100%;
        min-height: 1lh;
        padding: 1rem;
        padding-inline-end: 3rem;
        transition: background-color 0.2s ease-out;
    }
    .collapse:is([open], :focus:not(.collapse-close)),
    .collapse:not(.collapse-close):has(> input:is([type="checkbox"], [type="radio"]):checked) {
        grid-template-rows: max-content 1fr;
    }
    .collapse:is([open], :focus:not(.collapse-close)) > .collapse-content,
    .collapse:not(.collapse-close)
        > :where(input:is([type="checkbox"], [type="radio"]):checked ~ .collapse-content) {
        visibility: visible;
        min-height: fit-content;
    }
    .collapse:focus-visible,
    .collapse:has(> input:is([type="checkbox"], [type="radio"]):focus-visible) {
        outline-color: var(--color-base-content);
        outline-offset: 2px;
        outline-width: 2px;
        outline-style: solid;
    }
    .collapse:not(.collapse-close) > input[type="checkbox"],
    .collapse:not(.collapse-close) > input[type="radio"]:not(:checked),
    .collapse:not(.collapse-close) > .collapse-title {
        cursor: pointer;
    }
    .collapse:focus:not(.collapse-close, .collapse[open]) > .collapse-title {
        cursor: unset;
    }
    .collapse:is([open], :focus:not(.collapse-close)) > :where(.collapse-content),
    .collapse:not(.collapse-close)
        > :where(input:is([type="checkbox"], [type="radio"]):checked ~ .collapse-content) {
        padding-bottom: 1rem;
    }
    @media (prefers-reduced-motion: no-preference) {
        .collapse:is([open], :focus:not(.collapse-close)) > :where(.collapse-content),
        .collapse:not(.collapse-close)
            > :where(input:is([type="checkbox"], [type="radio"]):checked ~ .collapse-content) {
            transition:
                padding 0.2s ease-out,
                background-color 0.2s ease-out;
        }
        .collapse[open].collapse-arrow > .collapse-title:after,
        .collapse.collapse-open.collapse-arrow > .collapse-title:after {
            transform: translateY(-50%) rotate(225deg);
        }
    }
    .collapse.collapse-open.collapse-plus > .collapse-title:after {
        content: "−";
    }
    .collapse.collapse-arrow:focus:not(.collapse-close) > .collapse-title:after,
    .collapse.collapse-arrow:not(.collapse-close)
        > input:is([type="checkbox"], [type="radio"]):checked
        ~ .collapse-title:after {
        transform: translateY(-50%) rotate(225deg);
    }
    .collapse[open].collapse-plus > .collapse-title:after,
    .collapse.collapse-plus:focus:not(.collapse-close) > .collapse-title:after,
    .collapse.collapse-plus:not(.collapse-close)
        > input:is([type="checkbox"], [type="radio"]):checked
        ~ .collapse-title:after {
        content: "−";
    }
    .collapse:is(details) {
        width: 100%;
    }
    .collapse:is(details) summary {
        display: block;
        position: relative;
    }
    .collapse:is(details) summary::-webkit-details-marker {
        display: none;
    }
    .collapse:is(details) summary {
        outline: none;
    }
    .collapse-content {
        visibility: hidden;
        min-height: 0;
        cursor: unset;
        grid-row-start: 2;
        grid-column-start: 1;
        padding-left: 1rem;
        padding-right: 1rem;
    }
    @media (prefers-reduced-motion: no-preference) {
        .collapse-content {
            transition:
                visibility 0.2s,
                padding 0.2s ease-out,
                background-color 0.2s ease-out;
        }
    }
    .validator:user-valid {
        --input-color: var(--color-success);
    }
    .validator:user-valid:focus {
        --input-color: var(--color-success);
    }
    .validator:user-valid:checked {
        --input-color: var(--color-success);
    }
    .validator:user-valid[aria-checked="true"] {
        --input-color: var(--color-success);
    }
    .validator:user-valid:focus-within {
        --input-color: var(--color-success);
    }
    .validator:has(:user-valid) {
        --input-color: var(--color-success);
    }
    .validator:has(:user-valid):focus {
        --input-color: var(--color-success);
    }
    .validator:has(:user-valid):checked {
        --input-color: var(--color-success);
    }
    .validator:has(:user-valid)[aria-checked="true"] {
        --input-color: var(--color-success);
    }
    .validator:has(:user-valid):focus-within {
        --input-color: var(--color-success);
    }
    .validator:user-invalid {
        --input-color: var(--color-error);
    }
    .validator:user-invalid:focus {
        --input-color: var(--color-error);
    }
    .validator:user-invalid:checked {
        --input-color: var(--color-error);
    }
    .validator:user-invalid[aria-checked="true"] {
        --input-color: var(--color-error);
    }
    .validator:user-invalid:focus-within {
        --input-color: var(--color-error);
    }
    .validator:user-invalid ~ .validator-hint {
        visibility: visible;
        color: var(--color-error);
        display: block;
    }
    .validator:has(:user-invalid) {
        --input-color: var(--color-error);
    }
    .validator:has(:user-invalid):focus {
        --input-color: var(--color-error);
    }
    .validator:has(:user-invalid):checked {
        --input-color: var(--color-error);
    }
    .validator:has(:user-invalid)[aria-checked="true"] {
        --input-color: var(--color-error);
    }
    .validator:has(:user-invalid):focus-within {
        --input-color: var(--color-error);
    }
    .validator:has(:user-invalid) ~ .validator-hint {
        visibility: visible;
        color: var(--color-error);
        display: block;
    }
    .validator[aria-invalid]:not([aria-invalid="false"]),
    .validator[aria-invalid]:not([aria-invalid="false"]):focus,
    .validator[aria-invalid]:not([aria-invalid="false"]):checked,
    .validator[aria-invalid]:not([aria-invalid="false"])[aria-checked="true"],
    .validator[aria-invalid]:not([aria-invalid="false"]):focus-within {
        --input-color: var(--color-error);
    }
    .validator[aria-invalid]:not([aria-invalid="false"]) ~ .validator-hint {
        visibility: visible;
        color: var(--color-error);
        display: block;
    }
    .collapse {
        visibility: collapse;
    }
    .list {
        flex-direction: column;
        font-size: 0.875rem;
        display: flex;
    }
    .list :where(.list-row) {
        --list-grid-cols: minmax(0, auto) 1fr;
        border-radius: var(--radius-box);
        word-break: break-word;
        grid-auto-flow: column;
        grid-template-columns: var(--list-grid-cols);
        gap: 1rem;
        padding: 1rem;
        display: grid;
        position: relative;
    }
    .list :where(.list-row):has(.list-col-grow:first-child) {
        --list-grid-cols: 1fr;
    }
    .list :where(.list-row):has(.list-col-grow:nth-child(2)) {
        --list-grid-cols: minmax(0, auto) 1fr;
    }
    .list :where(.list-row):has(.list-col-grow:nth-child(3)) {
        --list-grid-cols: minmax(0, auto) minmax(0, auto) 1fr;
    }
    .list :where(.list-row):has(.list-col-grow:nth-child(4)) {
        --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) 1fr;
    }
    .list :where(.list-row):has(.list-col-grow:nth-child(5)) {
        --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) minmax(0, auto) 1fr;
    }
    .list :where(.list-row):has(.list-col-grow:nth-child(6)) {
        --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) minmax(0, auto)
            minmax(0, auto) 1fr;
    }
    .list :where(.list-row) :not(.list-col-wrap) {
        grid-row-start: 1;
    }
    :is(.list > :not(:last-child).list-row, .list > :not(:last-child) .list-row):after {
        content: "";
        border-bottom: var(--border) solid;
        inset-inline: var(--radius-box);
        border-color: var(--color-base-content);
        position: absolute;
        bottom: 0;
    }
    @supports (color: color-mix(in lab, red, red)) {
        :is(.list > :not(:last-child).list-row, .list > :not(:last-child) .list-row):after {
            border-color: color-mix(in oklab, var(--color-base-content) 5%, transparent);
        }
    }
    .toggle {
        border: var(--border) solid currentColor;
        color: var(--input-color);
        cursor: pointer;
        appearance: none;
        vertical-align: middle;
        webkit-user-select: none;
        -webkit-user-select: none;
        user-select: none;
        --radius-selector-max: calc(
            var(--radius-selector) + var(--radius-selector) + var(--radius-selector)
        );
        border-radius: calc(
            var(--radius-selector) + min(var(--toggle-p), var(--radius-selector-max)) +
                min(var(--border), var(--radius-selector-max))
        );
        padding: var(--toggle-p);
        flex-shrink: 0;
        grid-template-columns: 0fr 1fr 1fr;
        place-content: center;
        display: inline-grid;
        position: relative;
        box-shadow: inset 0 1px;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .toggle {
            box-shadow: 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000)
                inset;
        }
    }
    .toggle {
        --input-color: var(--color-base-content);
        transition:
            color 0.3s,
            grid-template-columns 0.2s;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .toggle {
            --input-color: color-mix(in oklab, var(--color-base-content) 50%, #0000);
        }
    }
    .toggle {
        --toggle-p: calc(var(--size) * 0.125);
        --size: calc(var(--size-selector, 0.25rem) * 6);
        width: calc((var(--size) * 2) - (var(--border) + var(--toggle-p)) * 2);
        height: var(--size);
    }
    .toggle > * {
        z-index: 1;
        cursor: pointer;
        appearance: none;
        background-color: #0000;
        border: none;
        grid-column: 2 / span 1;
        grid-row-start: 1;
        height: 100%;
        padding: 0.125rem;
        transition:
            opacity 0.2s,
            rotate 0.4s;
    }
    .toggle > :focus {
        --tw-outline-style: none;
        outline-style: none;
    }
    @media (forced-colors: active) {
        .toggle > :focus {
            outline-offset: 2px;
            outline: 2px solid #0000;
        }
    }
    .toggle > :nth-child(2) {
        color: var(--color-base-100);
        rotate: none;
    }
    .toggle > :nth-child(3) {
        color: var(--color-base-100);
        opacity: 0;
        rotate: -15deg;
    }
    .toggle:has(:checked) > :nth-child(2) {
        opacity: 0;
        rotate: 15deg;
    }
    .toggle:has(:checked) > :nth-child(3) {
        opacity: 1;
        rotate: none;
    }
    .toggle:before {
        aspect-ratio: 1;
        border-radius: var(--radius-selector);
        --tw-content: "";
        content: var(--tw-content);
        height: 100%;
        box-shadow:
            0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset,
            0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset,
            0 1px currentColor;
        background-color: currentColor;
        grid-row-start: 1;
        grid-column-start: 2;
        transition:
            background-color 0.1s,
            translate 0.2s,
            inset-inline-start 0.2s;
        position: relative;
        inset-inline-start: 0;
        translate: 0;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .toggle:before {
            box-shadow:
                0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset,
                0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset,
                0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000);
        }
    }
    .toggle:before {
        background-size: auto, calc(var(--noise) * 100%);
        background-image: none, var(--fx-noise);
    }
    @media (forced-colors: active) {
        .toggle:before {
            outline-style: var(--tw-outline-style);
            outline-offset: -1px;
            outline-width: 1px;
        }
    }
    @media print {
        .toggle:before {
            outline-offset: -1rem;
            outline: 0.25rem solid;
        }
    }
    .toggle:focus-visible,
    .toggle:has(:focus-visible) {
        outline-offset: 2px;
        outline: 2px solid;
    }
    .toggle:checked,
    .toggle[aria-checked="true"],
    .toggle:has(> input:checked) {
        background-color: var(--color-base-100);
        --input-color: var(--color-base-content);
        grid-template-columns: 1fr 1fr 0fr;
    }
    :is(.toggle:checked, .toggle[aria-checked="true"], .toggle:has(> input:checked)):before {
        background-color: currentColor;
    }
    @starting-style {
        :is(.toggle:checked, .toggle[aria-checked="true"], .toggle:has(> input:checked)):before {
            opacity: 0;
        }
    }
    .toggle:indeterminate {
        grid-template-columns: 0.5fr 1fr 0.5fr;
    }
    .toggle:disabled {
        cursor: not-allowed;
        opacity: 0.3;
    }
    .toggle:disabled:before {
        border: var(--border) solid currentColor;
        background-color: #0000;
    }
    .input {
        cursor: text;
        border: var(--border) solid #0000;
        appearance: none;
        background-color: var(--color-base-100);
        vertical-align: middle;
        white-space: nowrap;
        width: clamp(3rem, 20rem, 100%);
        height: var(--size);
        touch-action: manipulation;
        border-color: var(--input-color);
        box-shadow:
            0 1px var(--input-color) inset,
            0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
        border-start-start-radius: var(--join-ss, var(--radius-field));
        border-start-end-radius: var(--join-se, var(--radius-field));
        border-end-end-radius: var(--join-ee, var(--radius-field));
        border-end-start-radius: var(--join-es, var(--radius-field));
        flex-shrink: 1;
        align-items: center;
        gap: 0.5rem;
        padding-inline: 0.75rem;
        font-size: 0.875rem;
        display: inline-flex;
        position: relative;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .input {
            box-shadow:
                0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset,
                0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
        }
    }
    .input {
        --size: calc(var(--size-field, 0.25rem) * 10);
        --input-color: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .input {
            --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);
        }
    }
    .input:where(input) {
        display: inline-flex;
    }
    .input :where(input) {
        appearance: none;
        background-color: #0000;
        border: none;
        width: 100%;
        height: 100%;
        display: inline-flex;
    }
    .input :where(input):focus,
    .input :where(input):focus-within {
        --tw-outline-style: none;
        outline-style: none;
    }
    @media (forced-colors: active) {
        .input :where(input):focus,
        .input :where(input):focus-within {
            outline-offset: 2px;
            outline: 2px solid #0000;
        }
    }
    .input :where(input[type="url"]),
    .input :where(input[type="email"]) {
        direction: ltr;
    }
    .input :where(input[type="date"]) {
        display: inline-flex;
    }
    .input:focus,
    .input:focus-within {
        --input-color: var(--color-base-content);
        box-shadow: 0 1px var(--input-color);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .input:focus,
        .input:focus-within {
            box-shadow: 0 1px
                color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000);
        }
    }
    .input:focus,
    .input:focus-within {
        outline: 2px solid var(--input-color);
        outline-offset: 2px;
        isolation: isolate;
        z-index: 1;
    }
    .input:has(> input[disabled]),
    .input:is(:disabled, [disabled]),
    fieldset:disabled .input {
        cursor: not-allowed;
        border-color: var(--color-base-200);
        background-color: var(--color-base-200);
        color: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .input:has(> input[disabled]),
        .input:is(:disabled, [disabled]),
        fieldset:disabled .input {
            color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
        }
    }
    :is(
        .input:has(> input[disabled]),
        .input:is(:disabled, [disabled]),
        fieldset:disabled .input
    )::placeholder {
        color: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        :is(
            .input:has(> input[disabled]),
            .input:is(:disabled, [disabled]),
            fieldset:disabled .input
        )::placeholder {
            color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
        }
    }
    .input:has(> input[disabled]),
    .input:is(:disabled, [disabled]),
    fieldset:disabled .input {
        box-shadow: none;
    }
    .input:has(> input[disabled]) > input[disabled] {
        cursor: not-allowed;
    }
    .input::-webkit-date-and-time-value {
        text-align: inherit;
    }
    .input[type="number"]::-webkit-inner-spin-button {
        margin-block: -0.75rem;
        margin-inline-end: -0.75rem;
    }
    .input::-webkit-calendar-picker-indicator {
        position: absolute;
        inset-inline-end: 0.75em;
    }
    .input:has(> input[type="date"]) :where(input[type="date"]) {
        webkit-appearance: none;
        appearance: none;
        display: inline-flex;
    }
    .input:has(> input[type="date"]) input[type="date"]::-webkit-calendar-picker-indicator {
        cursor: pointer;
        width: 1em;
        height: 1em;
        position: absolute;
        inset-inline-end: 0.75em;
    }
    .table {
        border-radius: var(--radius-box);
        text-align: left;
        width: 100%;
        font-size: 0.875rem;
        position: relative;
    }
    .table:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
        text-align: right;
    }
    @media (hover: hover) {
        :is(.table tr.row-hover, .table tr.row-hover:nth-child(2n)):hover {
            background-color: var(--color-base-200);
        }
    }
    .table :where(th, td) {
        vertical-align: middle;
        padding-block: 0.75rem;
        padding-inline: 1rem;
    }
    .table :where(thead, tfoot) {
        white-space: nowrap;
        color: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .table :where(thead, tfoot) {
            color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
        }
    }
    .table :where(thead, tfoot) {
        font-size: 0.875rem;
        font-weight: 600;
    }
    .table :where(tfoot) {
        border-top: var(--border) solid var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .table :where(tfoot) {
            border-top: var(--border) solid color-mix(in oklch, var(--color-base-content) 5%, #0000);
        }
    }
    .table :where(.table-pin-rows thead tr) {
        z-index: 1;
        background-color: var(--color-base-100);
        position: sticky;
        top: 0;
    }
    .table :where(.table-pin-rows tfoot tr) {
        z-index: 1;
        background-color: var(--color-base-100);
        position: sticky;
        bottom: 0;
    }
    .table :where(.table-pin-cols tr th) {
        background-color: var(--color-base-100);
        position: sticky;
        left: 0;
        right: 0;
    }
    .table :where(thead tr, tbody tr:not(:last-child)) {
        border-bottom: var(--border) solid var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .table :where(thead tr, tbody tr:not(:last-child)) {
            border-bottom: var(--border) solid
                color-mix(in oklch, var(--color-base-content) 5%, #0000);
        }
    }
    .avatar-offline:before {
        content: "";
        z-index: 1;
        background-color: var(--color-base-300);
        outline: 2px solid var(--color-base-100);
        border-radius: 3.40282e38px;
        width: 15%;
        height: 15%;
        display: block;
        position: absolute;
        top: 7%;
        right: 7%;
    }
    .avatar-online:before {
        content: "";
        z-index: 1;
        background-color: var(--color-success);
        outline: 2px solid var(--color-base-100);
        border-radius: 3.40282e38px;
        width: 15%;
        height: 15%;
        display: block;
        position: absolute;
        top: 7%;
        right: 7%;
    }
    .steps {
        counter-reset: step;
        grid-auto-columns: 1fr;
        grid-auto-flow: column;
        display: inline-grid;
        overflow: auto hidden;
    }
    .steps .step {
        text-align: center;
        --step-bg: var(--color-base-300);
        --step-fg: var(--color-base-content);
        grid-template-rows: 40px 1fr;
        grid-template-columns: auto;
        place-items: center;
        min-width: 4rem;
        display: grid;
    }
    .steps .step:before {
        width: 100%;
        height: 0.5rem;
        color: var(--step-bg);
        background-color: var(--step-bg);
        --tw-content: "";
        content: var(--tw-content);
        border: 1px solid;
        grid-row-start: 1;
        grid-column-start: 1;
        margin-inline-start: -100%;
        top: 0;
    }
    .steps .step > .step-icon,
    .steps .step:not(:has(.step-icon)):after {
        content: counter(step);
        counter-increment: step;
        z-index: 1;
        color: var(--step-fg);
        background-color: var(--step-bg);
        border: 1px solid var(--step-bg);
        border-radius: 3.40282e38px;
        grid-row-start: 1;
        grid-column-start: 1;
        place-self: center;
        place-items: center;
        width: 2rem;
        height: 2rem;
        display: grid;
        position: relative;
    }
    .steps .step:first-child:before {
        content: none;
    }
    .steps .step[data-content]:after {
        content: attr(data-content);
    }
    .steps .step-neutral + .step-neutral:before,
    .steps .step-neutral:after,
    .steps .step-neutral > .step-icon {
        --step-bg: var(--color-neutral);
        --step-fg: var(--color-neutral-content);
    }
    .steps .step-primary + .step-primary:before,
    .steps .step-primary:after,
    .steps .step-primary > .step-icon {
        --step-bg: var(--color-primary);
        --step-fg: var(--color-primary-content);
    }
    .steps .step-secondary + .step-secondary:before,
    .steps .step-secondary:after,
    .steps .step-secondary > .step-icon {
        --step-bg: var(--color-secondary);
        --step-fg: var(--color-secondary-content);
    }
    .steps .step-accent + .step-accent:before,
    .steps .step-accent:after,
    .steps .step-accent > .step-icon {
        --step-bg: var(--color-accent);
        --step-fg: var(--color-accent-content);
    }
    .steps .step-info + .step-info:before,
    .steps .step-info:after,
    .steps .step-info > .step-icon {
        --step-bg: var(--color-info);
        --step-fg: var(--color-info-content);
    }
    .steps .step-success + .step-success:before,
    .steps .step-success:after,
    .steps .step-success > .step-icon {
        --step-bg: var(--color-success);
        --step-fg: var(--color-success-content);
    }
    .steps .step-warning + .step-warning:before,
    .steps .step-warning:after,
    .steps .step-warning > .step-icon {
        --step-bg: var(--color-warning);
        --step-fg: var(--color-warning-content);
    }
    .steps .step-error + .step-error:before,
    .steps .step-error:after,
    .steps .step-error > .step-icon {
        --step-bg: var(--color-error);
        --step-fg: var(--color-error-content);
    }
    .range {
        appearance: none;
        webkit-appearance: none;
        --range-thumb: var(--color-base-100);
        --range-thumb-size: calc(var(--size-selector, 0.25rem) * 6);
        --range-progress: currentColor;
        --range-fill: 1;
        --range-p: 0.25rem;
        --range-bg: currentColor;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .range {
            --range-bg: color-mix(in oklab, currentColor 10%, #0000);
        }
    }
    .range {
        cursor: pointer;
        vertical-align: middle;
        --radius-selector-max: calc(
            var(--radius-selector) + var(--radius-selector) + var(--radius-selector)
        );
        border-radius: calc(
            var(--radius-selector) + min(var(--range-p), var(--radius-selector-max))
        );
        width: clamp(3rem, 20rem, 100%);
        height: var(--range-thumb-size);
        background-color: #0000;
        border: none;
        overflow: hidden;
    }
    [dir="rtl"] .range {
        --range-dir: -1;
    }
    .range:focus {
        outline: none;
    }
    .range:focus-visible {
        outline-offset: 2px;
        outline: 2px solid;
    }
    .range::-webkit-slider-runnable-track {
        background-color: var(--range-bg);
        border-radius: var(--radius-selector);
        width: 100%;
        height: calc(var(--range-thumb-size) * 0.5);
    }
    @media (forced-colors: active) {
        .range::-webkit-slider-runnable-track {
            border: 1px solid;
        }
        .range::-moz-range-track {
            border: 1px solid;
        }
    }
    .range::-webkit-slider-thumb {
        box-sizing: border-box;
        border-radius: calc(
            var(--radius-selector) + min(var(--range-p), var(--radius-selector-max))
        );
        height: var(--range-thumb-size);
        width: var(--range-thumb-size);
        border: var(--range-p) solid;
        appearance: none;
        webkit-appearance: none;
        color: var(--range-progress);
        box-shadow:
            0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset,
            0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset,
            0 1px currentColor,
            0 0 0 2rem var(--range-thumb) inset,
            calc(
                    (var(--range-dir, 1) * -100rem) -
                        (var(--range-dir, 1) * var(--range-thumb-size) / 2)
                )
                0 0 calc(100rem * var(--range-fill));
        background-color: currentColor;
        position: relative;
        top: 50%;
        transform: translateY(-50%);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .range::-webkit-slider-thumb {
            box-shadow:
                0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset,
                0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset,
                0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000),
                0 0 0 2rem var(--range-thumb) inset,
                calc(
                        (var(--range-dir, 1) * -100rem) -
                            (var(--range-dir, 1) * var(--range-thumb-size) / 2)
                    )
                    0 0 calc(100rem * var(--range-fill));
        }
    }
    .range::-moz-range-track {
        background-color: var(--range-bg);
        border-radius: var(--radius-selector);
        width: 100%;
        height: calc(var(--range-thumb-size) * 0.5);
    }
    .range::-moz-range-thumb {
        box-sizing: border-box;
        border-radius: calc(
            var(--radius-selector) + min(var(--range-p), var(--radius-selector-max))
        );
        height: var(--range-thumb-size);
        width: var(--range-thumb-size);
        border: var(--range-p) solid;
        color: var(--range-progress);
        box-shadow:
            0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset,
            0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset,
            0 1px currentColor,
            0 0 0 2rem var(--range-thumb) inset,
            calc(
                    (var(--range-dir, 1) * -100rem) -
                        (var(--range-dir, 1) * var(--range-thumb-size) / 2)
                )
                0 0 calc(100rem * var(--range-fill));
        background-color: currentColor;
        position: relative;
        top: 50%;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .range::-moz-range-thumb {
            box-shadow:
                0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset,
                0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset,
                0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000),
                0 0 0 2rem var(--range-thumb) inset,
                calc(
                        (var(--range-dir, 1) * -100rem) -
                            (var(--range-dir, 1) * var(--range-thumb-size) / 2)
                    )
                    0 0 calc(100rem * var(--range-fill));
        }
    }
    .range:disabled {
        cursor: not-allowed;
        opacity: 0.3;
    }
    .tabs-border .tab {
        --tab-border-color: #0000 #0000 var(--tab-border-color) #0000;
        border-radius: var(--radius-field);
        position: relative;
    }
    .tabs-border .tab:before {
        --tw-content: "";
        content: var(--tw-content);
        background-color: var(--tab-border-color);
        border-radius: var(--radius-field);
        width: 80%;
        height: 3px;
        transition: background-color 0.2s;
        position: absolute;
        bottom: 0;
        left: 10%;
    }
    :is(
        .tabs-border
            .tab:is(
                .tab-active,
                [aria-selected="true"],
                [aria-current="true"],
                [aria-current="page"]
            ):not(.tab-disabled, [disabled]),
        .tabs-border .tab:is(input:checked),
        .tabs-border .tab:is(label:has(:checked))
    ):before {
        --tab-border-color: currentColor;
        border-top: 3px solid;
    }
    .chat-bubble {
        border-radius: var(--radius-field);
        background-color: var(--color-base-300);
        width: fit-content;
        color: var(--color-base-content);
        grid-row-end: 3;
        min-width: 2.5rem;
        max-width: 90%;
        min-height: 2rem;
        padding-block: 0.5rem;
        padding-inline: 1rem;
        display: block;
        position: relative;
    }
    .chat-bubble:before {
        background-color: inherit;
        content: "";
        width: 0.75rem;
        height: 0.75rem;
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
        -webkit-mask-image: var(--mask-chat);
        mask-image: var(--mask-chat);
        position: absolute;
        bottom: 0;
        -webkit-mask-position: 0 -1px;
        mask-position: 0 -1px;
        -webkit-mask-size: 13px;
        mask-size: 13px;
    }
    .select {
        border: var(--border) solid #0000;
        appearance: none;
        background-color: var(--color-base-100);
        vertical-align: middle;
        width: clamp(3rem, 20rem, 100%);
        height: var(--size);
        touch-action: manipulation;
        text-overflow: ellipsis;
        box-shadow:
            0 1px var(--input-color) inset,
            0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
        background-image:
            linear-gradient(45deg, #0000 50%, currentColor 50%),
            linear-gradient(135deg, currentColor 50%, #0000 50%);
        background-position:
            calc(100% - 20px) calc(1px + 50%),
            calc(100% - 16.1px) calc(1px + 50%);
        background-repeat: no-repeat;
        background-size:
            4px 4px,
            4px 4px;
        border-start-start-radius: var(--join-ss, var(--radius-field));
        border-start-end-radius: var(--join-se, var(--radius-field));
        border-end-end-radius: var(--join-ee, var(--radius-field));
        border-end-start-radius: var(--join-es, var(--radius-field));
        flex-shrink: 1;
        align-items: center;
        gap: 0.375rem;
        padding-inline: 0.75rem 1.75rem;
        font-size: 0.875rem;
        display: inline-flex;
        position: relative;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .select {
            box-shadow:
                0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset,
                0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
        }
    }
    .select {
        border-color: var(--input-color);
        --input-color: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .select {
            --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);
        }
    }
    .select {
        --size: calc(var(--size-field, 0.25rem) * 10);
    }
    [dir="rtl"] .select {
        background-position:
            12px calc(1px + 50%),
            16px calc(1px + 50%);
    }
    .select select {
        appearance: none;
        width: calc(100% + 2.75rem);
        height: calc(100% - calc(var(--border) * 2));
        background: inherit;
        border-radius: inherit;
        border-style: none;
        align-items: center;
        margin-inline: -0.75rem -1.75rem;
        padding-inline: 0.75rem 1.75rem;
    }
    .select select:focus,
    .select select:focus-within {
        --tw-outline-style: none;
        outline-style: none;
    }
    @media (forced-colors: active) {
        .select select:focus,
        .select select:focus-within {
            outline-offset: 2px;
            outline: 2px solid #0000;
        }
    }
    .select select:not(:last-child) {
        background-image: none;
        margin-inline-end: -1.375rem;
    }
    .select:focus,
    .select:focus-within {
        --input-color: var(--color-base-content);
        box-shadow: 0 1px var(--input-color);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .select:focus,
        .select:focus-within {
            box-shadow: 0 1px
                color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000);
        }
    }
    .select:focus,
    .select:focus-within {
        outline: 2px solid var(--input-color);
        outline-offset: 2px;
        isolation: isolate;
        z-index: 1;
    }
    .select:has(> select[disabled]),
    .select:is(:disabled, [disabled]),
    fieldset:disabled .select {
        cursor: not-allowed;
        border-color: var(--color-base-200);
        background-color: var(--color-base-200);
        color: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .select:has(> select[disabled]),
        .select:is(:disabled, [disabled]),
        fieldset:disabled .select {
            color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
        }
    }
    :is(
        .select:has(> select[disabled]),
        .select:is(:disabled, [disabled]),
        fieldset:disabled .select
    )::placeholder {
        color: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        :is(
            .select:has(> select[disabled]),
            .select:is(:disabled, [disabled]),
            fieldset:disabled .select
        )::placeholder {
            color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
        }
    }
    .select:has(> select[disabled]) > select[disabled] {
        cursor: not-allowed;
    }
    @supports (appearance: base-select) {
        .select,
        .select select {
            appearance: base-select;
        }
        :is(.select, .select select)::picker(select) {
            appearance: base-select;
        }
    }
    :is(.select, .select select)::picker(select) {
        color: inherit;
        border: var(--border) solid var(--color-base-200);
        border-radius: var(--radius-box);
        background-color: inherit;
        max-height: min(24rem, 70dvh);
        box-shadow: 0 2px calc(var(--depth) * 3px) -2px #0003;
        box-shadow:
            0 20px 25px -5px rgb(0 0 0 / calc(var(--depth) * 0.1)),
            0 8px 10px -6px rgb(0 0 0 / calc(var(--depth) * 0.1));
        margin-block: 0.5rem;
        padding: 0.5rem;
    }
    :is(.select, .select select)::picker-icon {
        display: none;
    }
    :is(.select, .select select) optgroup {
        padding-top: 0.5em;
    }
    :is(.select, .select select) optgroup option:first-child {
        margin-top: 0.5em;
    }
    :is(.select, .select select) option {
        border-radius: var(--radius-field);
        padding-block: 0.375rem;
        padding-inline: 0.75rem;
        transition-property: color, background-color;
        transition-duration: 0.2s;
        transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    }
    :is(.select, .select select) option:not(:disabled):hover,
    :is(.select, .select select) option:not(:disabled):focus-visible {
        cursor: pointer;
        background-color: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        :is(.select, .select select) option:not(:disabled):hover,
        :is(.select, .select select) option:not(:disabled):focus-visible {
            background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
        }
    }
    :is(.select, .select select) option:not(:disabled):hover,
    :is(.select, .select select) option:not(:disabled):focus-visible {
        --tw-outline-style: none;
        outline-style: none;
    }
    @media (forced-colors: active) {
        :is(.select, .select select) option:not(:disabled):hover,
        :is(.select, .select select) option:not(:disabled):focus-visible {
            outline-offset: 2px;
            outline: 2px solid #0000;
        }
    }
    :is(.select, .select select) option:not(:disabled):active {
        background-color: var(--color-neutral);
        color: var(--color-neutral-content);
        box-shadow: 0 2px calc(var(--depth) * 3px) -2px var(--color-neutral);
    }
    .timeline {
        display: flex;
        position: relative;
    }
    .timeline > li {
        grid-template-rows: var(--timeline-row-start, minmax(0, 1fr)) auto var(
                --timeline-row-end,
                minmax(0, 1fr)
            );
        grid-template-columns: var(--timeline-col-start, minmax(0, 1fr)) auto var(
                --timeline-col-end,
                minmax(0, 1fr)
            );
        flex-shrink: 0;
        align-items: center;
        display: grid;
        position: relative;
    }
    .timeline > li > hr {
        border: none;
        width: 100%;
    }
    .timeline > li > hr:first-child {
        grid-row-start: 2;
        grid-column-start: 1;
    }
    .timeline > li > hr:last-child {
        grid-area: 2/3 / auto/none;
    }
    @media print {
        .timeline > li > hr {
            border: 0.1px solid var(--color-base-300);
        }
    }
    .timeline :where(hr) {
        background-color: var(--color-base-300);
        height: 0.25rem;
    }
    .timeline:has(.timeline-middle hr):first-child {
        border-start-start-radius: 0;
        border-start-end-radius: var(--radius-selector);
        border-end-end-radius: var(--radius-selector);
        border-end-start-radius: 0;
    }
    .timeline:has(.timeline-middle hr):last-child,
    .timeline:not(:has(.timeline-middle)) :first-child hr:last-child {
        border-start-start-radius: var(--radius-selector);
        border-start-end-radius: 0;
        border-end-end-radius: 0;
        border-end-start-radius: var(--radius-selector);
    }
    .timeline:not(:has(.timeline-middle)) :last-child hr:first-child {
        border-start-start-radius: 0;
        border-start-end-radius: var(--radius-selector);
        border-end-end-radius: var(--radius-selector);
        border-end-start-radius: 0;
    }
    .card {
        border-radius: var(--radius-box);
        outline-offset: 2px;
        outline: 0 solid #0000;
        flex-direction: column;
        transition: outline 0.2s ease-in-out;
        display: flex;
        position: relative;
    }
    .card:focus {
        --tw-outline-style: none;
        outline-style: none;
    }
    @media (forced-colors: active) {
        .card:focus {
            outline-offset: 2px;
            outline: 2px solid #0000;
        }
    }
    .card:focus-visible {
        outline-color: currentColor;
    }
    .card :where(figure:first-child) {
        border-start-start-radius: inherit;
        border-start-end-radius: inherit;
        border-end-end-radius: unset;
        border-end-start-radius: unset;
        overflow: hidden;
    }
    .card :where(figure:last-child) {
        border-start-start-radius: unset;
        border-start-end-radius: unset;
        border-end-end-radius: inherit;
        border-end-start-radius: inherit;
        overflow: hidden;
    }
    .card:where(.card-border) {
        border: var(--border) solid var(--color-base-200);
    }
    .card:where(.card-dash) {
        border: var(--border) dashed var(--color-base-200);
    }
    .card.image-full {
        display: grid;
    }
    .card.image-full > * {
        grid-row-start: 1;
        grid-column-start: 1;
    }
    .card.image-full > .card-body {
        color: var(--color-neutral-content);
        position: relative;
    }
    .card.image-full :where(figure) {
        border-radius: inherit;
        overflow: hidden;
    }
    .card.image-full > figure img {
        object-fit: cover;
        filter: brightness(28%);
        height: 100%;
    }
    .card figure {
        justify-content: center;
        align-items: center;
        display: flex;
    }
    .card:has(> input:is(input[type="checkbox"], input[type="radio"])) {
        cursor: pointer;
        -webkit-user-select: none;
        user-select: none;
    }
    .card:has(> :checked) {
        outline: 2px solid;
    }
    .swap {
        cursor: pointer;
        vertical-align: middle;
        webkit-user-select: none;
        -webkit-user-select: none;
        user-select: none;
        place-content: center;
        display: inline-grid;
        position: relative;
    }
    .swap input {
        appearance: none;
        border: none;
    }
    .swap > * {
        grid-row-start: 1;
        grid-column-start: 1;
    }
    @media (prefers-reduced-motion: no-preference) {
        .swap > * {
            transition-property: transform, rotate, opacity;
            transition-duration: 0.2s;
            transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
        }
    }
    .swap .swap-on,
    .swap .swap-indeterminate,
    .swap input:indeterminate ~ .swap-on,
    .swap input:is(:checked, :indeterminate) ~ .swap-off {
        opacity: 0;
    }
    .swap input:checked ~ .swap-on,
    .swap input:indeterminate ~ .swap-indeterminate {
        opacity: 1;
        backface-visibility: visible;
    }
    .collapse-title {
        grid-row-start: 1;
        grid-column-start: 1;
        width: 100%;
        min-height: 1lh;
        padding: 1rem;
        padding-inline-end: 3rem;
        transition: background-color 0.2s ease-out;
        position: relative;
    }
    .menu-horizontal {
        flex-direction: row;
        display: inline-flex;
    }
    .menu-horizontal > li:not(.menu-title) > details > ul {
        margin-inline-start: 0;
        margin-top: 1rem;
        padding-block: 0.5rem;
        padding-inline-end: 0.5rem;
        position: absolute;
    }
    .menu-horizontal > li > details > ul:before {
        content: none;
    }
    :where(.menu-horizontal > li:not(.menu-title) > details > ul) {
        border-radius: var(--radius-box);
        background-color: var(--color-base-100);
        box-shadow:
            0 1px 3px #0000001a,
            0 1px 2px -1px #0000001a;
    }
    .avatar {
        vertical-align: middle;
        display: inline-flex;
        position: relative;
    }
    .avatar > div {
        aspect-ratio: 1;
        display: block;
        overflow: hidden;
    }
    .avatar img {
        object-fit: cover;
        width: 100%;
        height: 100%;
    }
    .checkbox {
        border: var(--border) solid var(--input-color, var(--color-base-content));
    }
    @supports (color: color-mix(in lab, red, red)) {
        .checkbox {
            border: var(--border) solid
                var(--input-color, color-mix(in oklab, var(--color-base-content) 20%, #0000));
        }
    }
    .checkbox {
        cursor: pointer;
        appearance: none;
        border-radius: var(--radius-selector);
        vertical-align: middle;
        color: var(--color-base-content);
        box-shadow:
            0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset,
            0 0 #0000 inset,
            0 0 #0000;
        --size: calc(var(--size-selector, 0.25rem) * 6);
        width: var(--size);
        height: var(--size);
        background-size: auto, calc(var(--noise) * 100%);
        background-image: none, var(--fx-noise);
        flex-shrink: 0;
        padding: 0.25rem;
        transition:
            background-color 0.2s,
            box-shadow 0.2s;
        display: inline-block;
        position: relative;
    }
    .checkbox:before {
        --tw-content: "";
        content: var(--tw-content);
        opacity: 0;
        clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 80%, 70% 80%, 70% 100%);
        width: 100%;
        height: 100%;
        box-shadow: 0 3px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
        background-color: currentColor;
        font-size: 1rem;
        line-height: 0.75;
        transition:
            clip-path 0.3s 0.1s,
            opacity 0.1s 0.1s,
            rotate 0.3s 0.1s,
            translate 0.3s 0.1s;
        display: block;
        rotate: 45deg;
    }
    .checkbox:focus-visible {
        outline: 2px solid var(--input-color, currentColor);
        outline-offset: 2px;
    }
    .checkbox:checked,
    .checkbox[aria-checked="true"] {
        background-color: var(--input-color, #0000);
        box-shadow:
            0 0 #0000 inset,
            0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset,
            0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1));
    }
    :is(.checkbox:checked, .checkbox[aria-checked="true"]):before {
        clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 0%, 70% 0%, 70% 100%);
        opacity: 1;
    }
    @media (forced-colors: active) {
        :is(.checkbox:checked, .checkbox[aria-checked="true"]):before {
            --tw-content: "✔︎";
            clip-path: none;
            background-color: #0000;
            rotate: none;
        }
    }
    @media print {
        :is(.checkbox:checked, .checkbox[aria-checked="true"]):before {
            --tw-content: "✔︎";
            clip-path: none;
            background-color: #0000;
            rotate: none;
        }
    }
    .checkbox:indeterminate {
        background-color: var(--input-color, var(--color-base-content));
    }
    @supports (color: color-mix(in lab, red, red)) {
        .checkbox:indeterminate {
            background-color: var(
                --input-color,
                color-mix(in oklab, var(--color-base-content) 20%, #0000)
            );
        }
    }
    .checkbox:indeterminate:before {
        opacity: 1;
        clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 80%, 80% 80%, 80% 100%);
        translate: 0 -35%;
        rotate: none;
    }
    .checkbox:disabled {
        cursor: not-allowed;
        opacity: 0.2;
    }
    .radio {
        cursor: pointer;
        appearance: none;
        vertical-align: middle;
        border: var(--border) solid var(--input-color, currentColor);
        border-radius: 3.40282e38px;
        flex-shrink: 0;
        padding: 0.25rem;
        display: inline-block;
        position: relative;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .radio {
            border: var(--border) solid
                var(--input-color, color-mix(in srgb, currentColor 20%, #0000));
        }
    }
    .radio {
        box-shadow: 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset;
        --size: calc(var(--size-selector, 0.25rem) * 6);
        width: var(--size);
        height: var(--size);
        color: var(--input-color, currentColor);
    }
    .radio:before {
        --tw-content: "";
        content: var(--tw-content);
        background-size: auto, calc(var(--noise) * 100%);
        background-image: none, var(--fx-noise);
        border-radius: 3.40282e38px;
        width: 100%;
        height: 100%;
        display: block;
    }
    .radio:focus-visible {
        outline: 2px solid;
    }
    .radio:checked,
    .radio[aria-checked="true"] {
        background-color: var(--color-base-100);
        border-color: currentColor;
    }
    @media (prefers-reduced-motion: no-preference) {
        .radio:checked,
        .radio[aria-checked="true"] {
            animation: 0.2s ease-out radio;
        }
    }
    :is(.radio:checked, .radio[aria-checked="true"]):before {
        box-shadow:
            0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset,
            0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset,
            0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1));
        background-color: currentColor;
    }
    @media (forced-colors: active) {
        :is(.radio:checked, .radio[aria-checked="true"]):before {
            outline-style: var(--tw-outline-style);
            outline-offset: -1px;
            outline-width: 1px;
        }
    }
    @media print {
        :is(.radio:checked, .radio[aria-checked="true"]):before {
            outline-offset: -1rem;
            outline: 0.25rem solid;
        }
    }
    .radio:disabled {
        cursor: not-allowed;
        opacity: 0.2;
    }
    .rating {
        vertical-align: middle;
        display: inline-flex;
        position: relative;
    }
    .rating input {
        appearance: none;
        border: none;
    }
    .rating :where(*) {
        background-color: var(--color-base-content);
        opacity: 0.2;
        border-radius: 0;
        width: 1.5rem;
        height: 1.5rem;
    }
    @media (prefers-reduced-motion: no-preference) {
        .rating :where(*) {
            animation: 0.25s ease-out rating;
        }
    }
    .rating :where(*):is(input) {
        cursor: pointer;
    }
    .rating .rating-hidden {
        background-color: #0000;
        width: 0.5rem;
    }
    .rating input[type="radio"]:checked {
        background-image: none;
    }
    .rating :checked,
    .rating [aria-checked="true"],
    .rating [aria-current="true"],
    .rating :has(~ :checked, ~ [aria-checked="true"], ~ [aria-current="true"]) {
        opacity: 1;
    }
    .rating :focus-visible {
        scale: 1.1;
    }
    @media (prefers-reduced-motion: no-preference) {
        .rating :focus-visible {
            transition: scale 0.2s ease-out;
        }
    }
    .rating :active:focus {
        animation: none;
        scale: 1.1;
    }
    .rating.rating-xs :where(:not(.rating-hidden)) {
        width: 1rem;
        height: 1rem;
    }
    .rating.rating-sm :where(:not(.rating-hidden)) {
        width: 1.25rem;
        height: 1.25rem;
    }
    .rating.rating-md :where(:not(.rating-hidden)) {
        width: 1.5rem;
        height: 1.5rem;
    }
    .rating.rating-lg :where(:not(.rating-hidden)) {
        width: 1.75rem;
        height: 1.75rem;
    }
    .rating.rating-xl :where(:not(.rating-hidden)) {
        width: 2rem;
        height: 2rem;
    }
    .drawer {
        grid-auto-columns: max-content auto;
        width: 100%;
        display: grid;
        position: relative;
    }
    .stats {
        border-radius: var(--radius-box);
        grid-auto-flow: column;
        display: inline-grid;
        position: relative;
        overflow-x: auto;
    }
    .progress {
        appearance: none;
        border-radius: var(--radius-box);
        background-color: currentColor;
        width: 100%;
        height: 0.5rem;
        position: relative;
        overflow: hidden;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .progress {
            background-color: color-mix(in oklab, currentColor 20%, transparent);
        }
    }
    .progress {
        color: var(--color-base-content);
    }
    .progress:indeterminate {
        background-image: repeating-linear-gradient(90deg, currentColor -1% 10%, #0000 10% 90%);
        background-position-x: 15%;
        background-size: 200%;
    }
    @media (prefers-reduced-motion: no-preference) {
        .progress:indeterminate {
            animation: 5s ease-in-out infinite progress;
        }
    }
    @supports ((-moz-appearance: none)) {
        .progress:indeterminate::-moz-progress-bar {
            background-color: #0000;
        }
        @media (prefers-reduced-motion: no-preference) {
            .progress:indeterminate::-moz-progress-bar {
                background-image: repeating-linear-gradient(
                    90deg,
                    currentColor -1% 10%,
                    #0000 10% 90%
                );
                background-position-x: 15%;
                background-size: 200%;
                animation: 5s ease-in-out infinite progress;
            }
        }
        .progress::-moz-progress-bar {
            border-radius: var(--radius-box);
            background-color: currentColor;
        }
    }
    @supports ((-webkit-appearance: none)) {
        .progress::-webkit-progress-bar {
            border-radius: var(--radius-box);
            background-color: #0000;
        }
        .progress::-webkit-progress-value {
            border-radius: var(--radius-box);
            background-color: currentColor;
        }
    }
    .absolute {
        position: absolute;
    }
    .fixed {
        position: fixed;
    }
    .relative {
        position: relative;
    }
    .static {
        position: static;
    }
    .sticky {
        position: sticky;
    }
    .-inset-1\.5 {
        inset: calc(var(--spacing) * -1.5);
    }
    .inset-0 {
        inset: calc(var(--spacing) * 0);
    }
    .inset-3 {
        inset: calc(var(--spacing) * 3);
    }
    .-inset-x-16 {
        inset-inline: calc(var(--spacing) * -16);
    }
    .inset-x-0 {
        inset-inline: calc(var(--spacing) * 0);
    }
    .inset-x-1 {
        inset-inline: calc(var(--spacing) * 1);
    }
    .inset-x-2 {
        inset-inline: calc(var(--spacing) * 2);
    }
    .chat-end {
        grid-template-columns: 1fr auto;
        place-items: end;
    }
    .chat-end .chat-header,
    .chat-end .chat-footer {
        grid-column-start: 1;
    }
    .chat-end .chat-image {
        grid-column-start: 2;
    }
    .chat-end .chat-bubble {
        border-end-end-radius: 0;
        grid-column-start: 1;
    }
    .chat-end .chat-bubble:before {
        inset-inline-start: 100%;
        transform: rotateY(180deg);
    }
    [dir="rtl"] :is(.chat-end .chat-bubble):before {
        transform: rotateY(0);
    }
    .chat-start {
        grid-template-columns: auto 1fr;
        place-items: start;
    }
    .chat-start .chat-header,
    .chat-start .chat-footer {
        grid-column-start: 2;
    }
    .chat-start .chat-image {
        grid-column-start: 1;
    }
    .chat-start .chat-bubble {
        border-end-start-radius: 0;
        grid-column-start: 2;
    }
    .chat-start .chat-bubble:before {
        inset-inline-start: -0.75rem;
        transform: rotateY(0);
    }
    [dir="rtl"] :is(.chat-start .chat-bubble):before {
        transform: rotateY(180deg);
    }
    .-start-1 {
        inset-inline-start: calc(var(--spacing) * -1);
    }
    .-start-16 {
        inset-inline-start: calc(var(--spacing) * -16);
    }
    .-start-50 {
        inset-inline-start: calc(var(--spacing) * -50);
    }
    .start-0 {
        inset-inline-start: calc(var(--spacing) * 0);
    }
    .start-1\/2 {
        inset-inline-start: 50%;
    }
    .start-2 {
        inset-inline-start: calc(var(--spacing) * 2);
    }
    .start-2\.5 {
        inset-inline-start: calc(var(--spacing) * 2.5);
    }
    .start-8 {
        inset-inline-start: calc(var(--spacing) * 8);
    }
    .start-10 {
        inset-inline-start: calc(var(--spacing) * 10);
    }
    .start-16 {
        inset-inline-start: calc(var(--spacing) * 16);
    }
    .dropdown-center {
        --anchor-h: center;
    }
    .dropdown-center :where(.dropdown-content) {
        inset-inline-end: 50%;
        translate: 50%;
    }
    [dir="rtl"] :is(.dropdown-center :where(.dropdown-content)) {
        translate: -50%;
    }
    .dropdown-center.dropdown-left {
        --anchor-h: left;
        --anchor-v: center;
    }
    .dropdown-center.dropdown-left .dropdown-content {
        top: auto;
        bottom: 50%;
        translate: 0 50%;
    }
    .dropdown-center.dropdown-right {
        --anchor-h: right;
        --anchor-v: center;
    }
    .dropdown-center.dropdown-right .dropdown-content {
        top: auto;
        bottom: 50%;
        translate: 0 50%;
    }
    .dropdown-end {
        --anchor-h: span-left;
    }
    .dropdown-end :where(.dropdown-content) {
        inset-inline-end: 0;
        translate: 0;
    }
    [dir="rtl"] :is(.dropdown-end :where(.dropdown-content)) {
        translate: 0;
    }
    .dropdown-end.dropdown-left {
        --anchor-h: left;
        --anchor-v: span-top;
    }
    .dropdown-end.dropdown-left .dropdown-content {
        top: auto;
        bottom: 0;
    }
    .dropdown-end.dropdown-right {
        --anchor-h: right;
        --anchor-v: span-top;
    }
    .dropdown-end.dropdown-right .dropdown-content {
        top: auto;
        bottom: 0;
    }
    .dropdown-start {
        --anchor-h: span-right;
    }
    .dropdown-start :where(.dropdown-content) {
        inset-inline-end: auto;
        translate: 0;
    }
    [dir="rtl"] :is(.dropdown-start :where(.dropdown-content)) {
        translate: 0;
    }
    .dropdown-start.dropdown-left {
        --anchor-h: left;
        --anchor-v: span-bottom;
    }
    .dropdown-start.dropdown-left .dropdown-content {
        top: 0;
        bottom: auto;
    }
    .dropdown-start.dropdown-right {
        --anchor-h: right;
        --anchor-v: span-bottom;
    }
    .dropdown-start.dropdown-right .dropdown-content {
        top: 0;
        bottom: auto;
    }
    .-end-2 {
        inset-inline-end: calc(var(--spacing) * -2);
    }
    .-end-3 {
        inset-inline-end: calc(var(--spacing) * -3);
    }
    .-end-12 {
        inset-inline-end: calc(var(--spacing) * -12);
    }
    .-end-16 {
        inset-inline-end: calc(var(--spacing) * -16);
    }
    .end-0 {
        inset-inline-end: calc(var(--spacing) * 0);
    }
    .end-0\.5 {
        inset-inline-end: calc(var(--spacing) * 0.5);
    }
    .end-1 {
        inset-inline-end: calc(var(--spacing) * 1);
    }
    .end-2 {
        inset-inline-end: calc(var(--spacing) * 2);
    }
    .end-3 {
        inset-inline-end: calc(var(--spacing) * 3);
    }
    .end-4 {
        inset-inline-end: calc(var(--spacing) * 4);
    }
    .end-8 {
        inset-inline-end: calc(var(--spacing) * 8);
    }
    .end-16 {
        inset-inline-end: calc(var(--spacing) * 16);
    }
    .dropdown-bottom {
        --anchor-v: bottom;
    }
    .dropdown-bottom .dropdown-content {
        transform-origin: top;
        top: 100%;
        bottom: auto;
    }
    .dropdown-top {
        --anchor-v: top;
    }
    .dropdown-top .dropdown-content {
        transform-origin: bottom;
        top: auto;
        bottom: 100%;
    }
    .-top-1\.5 {
        top: calc(var(--spacing) * -1.5);
    }
    .-top-2 {
        top: calc(var(--spacing) * -2);
    }
    .-top-3 {
        top: calc(var(--spacing) * -3);
    }
    .-top-7 {
        top: calc(var(--spacing) * -7);
    }
    .-top-50 {
        top: calc(var(--spacing) * -50);
    }
    .top-0 {
        top: calc(var(--spacing) * 0);
    }
    .top-0\.5 {
        top: calc(var(--spacing) * 0.5);
    }
    .top-1 {
        top: calc(var(--spacing) * 1);
    }
    .top-1\/2 {
        top: 50%;
    }
    .top-2 {
        top: calc(var(--spacing) * 2);
    }
    .top-3 {
        top: calc(var(--spacing) * 3);
    }
    .top-3\.5 {
        top: calc(var(--spacing) * 3.5);
    }
    .top-4 {
        top: calc(var(--spacing) * 4);
    }
    .top-8 {
        top: calc(var(--spacing) * 8);
    }
    .top-60 {
        top: calc(var(--spacing) * 60);
    }
    .top-160 {
        top: calc(var(--spacing) * 160);
    }
    .right-0 {
        right: calc(var(--spacing) * 0);
    }
    .right-5 {
        right: calc(var(--spacing) * 5);
    }
    .right-\[20\%\] {
        right: 20%;
    }
    .-bottom-6 {
        bottom: calc(var(--spacing) * -6);
    }
    .-bottom-8 {
        bottom: calc(var(--spacing) * -8);
    }
    .-bottom-12 {
        bottom: calc(var(--spacing) * -12);
    }
    .-bottom-40 {
        bottom: calc(var(--spacing) * -40);
    }
    .bottom-0 {
        bottom: calc(var(--spacing) * 0);
    }
    .bottom-2 {
        bottom: calc(var(--spacing) * 2);
    }
    .bottom-8 {
        bottom: calc(var(--spacing) * 8);
    }
    .bottom-\[15\%\] {
        bottom: 15%;
    }
    .left-0 {
        left: calc(var(--spacing) * 0);
    }
    .left-5 {
        left: calc(var(--spacing) * 5);
    }
    .textarea {
        border: var(--border) solid #0000;
        appearance: none;
        border-radius: var(--radius-field);
        background-color: var(--color-base-100);
        vertical-align: middle;
        touch-action: manipulation;
        border-color: var(--input-color);
        width: clamp(3rem, 20rem, 100%);
        min-height: 5rem;
        box-shadow:
            0 1px var(--input-color) inset,
            0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
        flex-shrink: 1;
        padding-block: 0.5rem;
        padding-inline: 0.75rem;
        font-size: 0.875rem;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .textarea {
            box-shadow:
                0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset,
                0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
        }
    }
    .textarea {
        --input-color: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .textarea {
            --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);
        }
    }
    .textarea textarea {
        appearance: none;
        background-color: #0000;
        border: none;
    }
    .textarea textarea:focus,
    .textarea textarea:focus-within {
        --tw-outline-style: none;
        outline-style: none;
    }
    @media (forced-colors: active) {
        .textarea textarea:focus,
        .textarea textarea:focus-within {
            outline-offset: 2px;
            outline: 2px solid #0000;
        }
    }
    .textarea:focus,
    .textarea:focus-within {
        --input-color: var(--color-base-content);
        box-shadow: 0 1px var(--input-color);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .textarea:focus,
        .textarea:focus-within {
            box-shadow: 0 1px
                color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000);
        }
    }
    .textarea:focus,
    .textarea:focus-within {
        outline: 2px solid var(--input-color);
        outline-offset: 2px;
        isolation: isolate;
    }
    .textarea:has(> textarea[disabled]),
    .textarea:is(:disabled, [disabled]) {
        cursor: not-allowed;
        border-color: var(--color-base-200);
        background-color: var(--color-base-200);
        color: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .textarea:has(> textarea[disabled]),
        .textarea:is(:disabled, [disabled]) {
            color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
        }
    }
    :is(.textarea:has(> textarea[disabled]), .textarea:is(:disabled, [disabled]))::placeholder {
        color: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        :is(.textarea:has(> textarea[disabled]), .textarea:is(:disabled, [disabled]))::placeholder {
            color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
        }
    }
    .textarea:has(> textarea[disabled]),
    .textarea:is(:disabled, [disabled]) {
        box-shadow: none;
    }
    .textarea:has(> textarea[disabled]) > textarea[disabled] {
        cursor: not-allowed;
    }
    .btn-active {
        --btn-bg: var(--btn-color, var(--color-base-200));
    }
    @supports (color: color-mix(in lab, red, red)) {
        .btn-active {
            --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
        }
    }
    .btn-active {
        --btn-shadow: 0 0 0 0 oklch(0% 0 0/0), 0 0 0 0 oklch(0% 0 0/0);
        isolation: isolate;
    }
    .isolate {
        isolation: isolate;
    }
    .modal-backdrop {
        color: #0000;
        z-index: -1;
        grid-row-start: 1;
        grid-column-start: 1;
        place-self: stretch stretch;
        display: grid;
    }
    .modal-backdrop button {
        cursor: pointer;
    }
    .-z-1 {
        z-index: -1;
    }
    .z-0 {
        z-index: 0;
    }
    .z-1 {
        z-index: 1;
    }
    .z-10 {
        z-index: 10;
    }
    .z-\[-1\] {
        z-index: -1;
    }
    .z-\[2\] {
        z-index: 2;
    }
    .z-\[50\] {
        z-index: 50;
    }
    .z-\[60\] {
        z-index: 60;
    }
    .col-span-1 {
        grid-column: span 1 / span 1;
    }
    .col-span-2 {
        grid-column: span 2 / span 2;
    }
    .col-span-3 {
        grid-column: span 3 / span 3;
    }
    .col-span-12 {
        grid-column: span 12 / span 12;
    }
    .col-span-full {
        grid-column: 1/-1;
    }
    .timeline-end {
        grid-area: 3/1/4/4;
        place-self: flex-start center;
        margin: 0.25rem;
    }
    .timeline-vertical {
        flex-direction: column;
    }
    .timeline-vertical > li {
        --timeline-row-start: minmax(0, 1fr);
        --timeline-row-end: minmax(0, 1fr);
        justify-items: center;
    }
    .timeline-vertical > li > hr {
        width: 0.25rem;
        height: 100%;
    }
    .timeline-vertical > li > hr:first-child {
        grid-row-start: 1;
        grid-column-start: 2;
    }
    .timeline-vertical > li > hr:last-child {
        grid-area: 3/2 / none;
    }
    .timeline-vertical .timeline-start {
        grid-area: 1/1/4/2;
        place-self: center flex-end;
    }
    .timeline-vertical .timeline-end {
        grid-area: 1/3/4/4;
        place-self: center flex-start;
    }
    .timeline-vertical:has(.timeline-middle) > li > hr:first-child {
        border-top-left-radius: 0;
        border-top-right-radius: 0;
        border-bottom-right-radius: var(--radius-selector);
        border-bottom-left-radius: var(--radius-selector);
    }
    .timeline-vertical:has(.timeline-middle) > li > hr:last-child,
    .timeline-vertical:not(:has(.timeline-middle)) :first-child > hr:last-child {
        border-top-left-radius: var(--radius-selector);
        border-top-right-radius: var(--radius-selector);
        border-bottom-right-radius: 0;
        border-bottom-left-radius: 0;
    }
    .timeline-vertical:not(:has(.timeline-middle)) :last-child > hr:first-child {
        border-top-left-radius: 0;
        border-top-right-radius: 0;
        border-bottom-right-radius: var(--radius-selector);
        border-bottom-left-radius: var(--radius-selector);
    }
    .timeline-vertical.timeline-snap-icon > li {
        --timeline-col-start: minmax(0, 1fr);
        --timeline-row-start: 0.5rem;
    }
    .modal-box {
        background-color: var(--color-base-100);
        border-top-left-radius: var(--modal-tl, var(--radius-box));
        border-top-right-radius: var(--modal-tr, var(--radius-box));
        border-bottom-left-radius: var(--modal-bl, var(--radius-box));
        border-bottom-right-radius: var(--modal-br, var(--radius-box));
        opacity: 0;
        overscroll-behavior: contain;
        grid-row-start: 1;
        grid-column-start: 1;
        width: 91.6667%;
        max-width: 32rem;
        max-height: 100vh;
        padding: 1.5rem;
        transition:
            translate 0.3s ease-out,
            scale 0.3s ease-out,
            opacity 0.2s ease-out 50ms,
            box-shadow 0.3s ease-out;
        overflow-y: auto;
        scale: 95%;
        box-shadow: 0 25px 50px -12px #00000040;
    }
    .drawer-content {
        grid-row-start: 1;
        grid-column-start: 2;
        min-width: 0;
    }
    .timeline-middle {
        grid-row-start: 2;
        grid-column-start: 2;
    }
    .drawer-end {
        grid-auto-columns: auto max-content;
    }
    .drawer-end > .drawer-toggle ~ .drawer-content {
        grid-column-start: 1;
    }
    .drawer-end > .drawer-toggle ~ .drawer-side {
        grid-column-start: 2;
        justify-items: end;
    }
    .drawer-end > .drawer-toggle ~ .drawer-side > :not(.drawer-overlay) {
        translate: 100%;
    }
    [dir="rtl"] :is(.drawer-end > .drawer-toggle ~ .drawer-side > :not(.drawer-overlay)) {
        translate: -100%;
    }
    .drawer-end > .drawer-toggle:checked ~ .drawer-side > :not(.drawer-overlay) {
        translate: 0%;
    }
    .chat-image {
        grid-row: span 2 / span 2;
        align-self: flex-end;
    }
    .chat-footer {
        grid-row-start: 3;
        gap: 0.25rem;
        font-size: 0.6875rem;
        display: flex;
    }
    .float-end {
        float: inline-end;
    }
    .container {
        width: 100%;
    }
    @media (min-width: 40rem) {
        .container {
            max-width: 40rem;
        }
    }
    @media (min-width: 48rem) {
        .container {
            max-width: 48rem;
        }
    }
    @media (min-width: 64rem) {
        .container {
            max-width: 64rem;
        }
    }
    @media (min-width: 80rem) {
        .container {
            max-width: 80rem;
        }
    }
    @media (min-width: 96rem) {
        .container {
            max-width: 96rem;
        }
    }
    .-m-1 {
        margin: calc(var(--spacing) * -1);
    }
    .m-0 {
        margin: calc(var(--spacing) * 0);
    }
    .m-1\.5 {
        margin: calc(var(--spacing) * 1.5);
    }
    .m-2\.5 {
        margin: calc(var(--spacing) * 2.5);
    }
    .m-4 {
        margin: calc(var(--spacing) * 4);
    }
    .m-auto {
        margin: auto;
    }
    .filter {
        flex-wrap: wrap;
        display: flex;
    }
    .filter input[type="radio"] {
        width: auto;
    }
    .filter input {
        opacity: 1;
        transition:
            margin 0.1s,
            opacity 0.3s,
            padding 0.3s,
            border-width 0.1s;
        overflow: hidden;
        scale: 1;
    }
    .filter input:not(:last-child) {
        margin-inline-end: 0.25rem;
    }
    .filter input.filter-reset {
        aspect-ratio: 1;
    }
    .filter input.filter-reset:after {
        content: "×";
    }
    .filter:not(:has(input:checked:not(.filter-reset))) .filter-reset,
    .filter:not(:has(input:checked:not(.filter-reset))) input[type="reset"],
    .filter:has(input:checked:not(.filter-reset))
        input:not(:checked, .filter-reset, input[type="reset"]) {
        opacity: 0;
        border-width: 0;
        width: 0;
        margin-inline: 0;
        padding-inline: 0;
        scale: 0;
    }
    .container {
        margin-inline: auto;
        padding-inline: 1rem;
    }
    @media (min-width: 48rem) {
        .container {
            padding-inline: 2rem;
        }
    }
    @media (min-width: 64rem) {
        .container {
            padding-inline: 3rem;
        }
    }
    @media (min-width: 80rem) {
        .container {
            padding-inline: 4rem;
        }
    }
    @media (min-width: 96rem) {
        .container {
            padding-inline: 6rem;
        }
    }
    .-mx-2 {
        margin-inline: calc(var(--spacing) * -2);
    }
    .-mx-4 {
        margin-inline: calc(var(--spacing) * -4);
    }
    .mx-0\.5 {
        margin-inline: calc(var(--spacing) * 0.5);
    }
    .mx-1 {
        margin-inline: calc(var(--spacing) * 1);
    }
    .mx-2 {
        margin-inline: calc(var(--spacing) * 2);
    }
    .mx-2\.5 {
        margin-inline: calc(var(--spacing) * 2.5);
    }
    .mx-3 {
        margin-inline: calc(var(--spacing) * 3);
    }
    .mx-4 {
        margin-inline: calc(var(--spacing) * 4);
    }
    .mx-5 {
        margin-inline: calc(var(--spacing) * 5);
    }
    .input-sm {
        --size: calc(var(--size-field, 0.25rem) * 8);
        font-size: 0.75rem;
    }
    .input-sm[type="number"]::-webkit-inner-spin-button {
        margin-block: -0.5rem;
        margin-inline-end: -0.75rem;
    }
    .my-0\.5 {
        margin-block: calc(var(--spacing) * 0.5);
    }
    .my-1 {
        margin-block: calc(var(--spacing) * 1);
    }
    .my-2 {
        margin-block: calc(var(--spacing) * 2);
    }
    .my-2\.5 {
        margin-block: calc(var(--spacing) * 2.5);
    }
    .label {
        white-space: nowrap;
        color: currentColor;
        align-items: center;
        gap: 0.375rem;
        display: inline-flex;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .label {
            color: color-mix(in oklab, currentColor 60%, transparent);
        }
    }
    .label:has(input) {
        cursor: pointer;
    }
    .label:is(.input > *, .select > *) {
        white-space: nowrap;
        height: calc(100% - 0.5rem);
        font-size: inherit;
        align-items: center;
        padding-inline: 0.75rem;
        display: flex;
    }
    .label:is(.input > *, .select > *):first-child {
        border-inline-end: var(--border) solid currentColor;
        margin-inline: -0.75rem 0.75rem;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .label:is(.input > *, .select > *):first-child {
            border-inline-end: var(--border) solid color-mix(in oklab, currentColor 10%, #0000);
        }
    }
    .label:is(.input > *, .select > *):last-child {
        border-inline-start: var(--border) solid currentColor;
        margin-inline: 0.75rem -0.75rem;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .label:is(.input > *, .select > *):last-child {
            border-inline-start: var(--border) solid color-mix(in oklab, currentColor 10%, #0000);
        }
    }
    .join-item:where(:not(:first-child, :disabled, [disabled], .btn-disabled)) {
        margin-block-start: 0;
        margin-inline-start: calc(var(--border, 1px) * -1);
    }
    .join-item:where(:is(:disabled, [disabled], .btn-disabled)) {
        border-width: var(--border, 1px) 0 var(--border, 1px) var(--border, 1px);
    }
    .-ms-2 {
        margin-inline-start: calc(var(--spacing) * -2);
    }
    .-ms-\[100\%\] {
        margin-inline-start: -100%;
    }
    .ms-0 {
        margin-inline-start: calc(var(--spacing) * 0);
    }
    .ms-1 {
        margin-inline-start: calc(var(--spacing) * 1);
    }
    .ms-1\.5 {
        margin-inline-start: calc(var(--spacing) * 1.5);
    }
    .ms-2 {
        margin-inline-start: calc(var(--spacing) * 2);
    }
    .ms-5\.5 {
        margin-inline-start: calc(var(--spacing) * 5.5);
    }
    .ms-6\.5 {
        margin-inline-start: calc(var(--spacing) * 6.5);
    }
    .ms-12 {
        margin-inline-start: calc(var(--spacing) * 12);
    }
    .ms-auto {
        margin-inline-start: auto;
    }
    .me-0\.5 {
        margin-inline-end: calc(var(--spacing) * 0.5);
    }
    .me-1 {
        margin-inline-end: calc(var(--spacing) * 1);
    }
    .me-2 {
        margin-inline-end: calc(var(--spacing) * 2);
    }
    .me-2\.5 {
        margin-inline-end: calc(var(--spacing) * 2.5);
    }
    .me-3 {
        margin-inline-end: calc(var(--spacing) * 3);
    }
    .me-4 {
        margin-inline-end: calc(var(--spacing) * 4);
    }
    .me-5 {
        margin-inline-end: calc(var(--spacing) * 5);
    }
    .modal-action {
        justify-content: flex-end;
        gap: 0.5rem;
        margin-top: 1.5rem;
        display: flex;
    }
    .-mt-1 {
        margin-top: calc(var(--spacing) * -1);
    }
    .-mt-1\.5 {
        margin-top: calc(var(--spacing) * -1.5);
    }
    .-mt-2 {
        margin-top: calc(var(--spacing) * -2);
    }
    .-mt-5 {
        margin-top: calc(var(--spacing) * -5);
    }
    .-mt-12 {
        margin-top: calc(var(--spacing) * -12);
    }
    .-mt-25 {
        margin-top: calc(var(--spacing) * -25);
    }
    .mt-0 {
        margin-top: calc(var(--spacing) * 0);
    }
    .mt-0\.5 {
        margin-top: calc(var(--spacing) * 0.5);
    }
    .mt-1 {
        margin-top: calc(var(--spacing) * 1);
    }
    .mt-1\.5 {
        margin-top: calc(var(--spacing) * 1.5);
    }
    .mt-2 {
        margin-top: calc(var(--spacing) * 2);
    }
    .mt-2\.5 {
        margin-top: calc(var(--spacing) * 2.5);
    }
    .mt-3 {
        margin-top: calc(var(--spacing) * 3);
    }
    .mt-3\.5 {
        margin-top: calc(var(--spacing) * 3.5);
    }
    .mt-4 {
        margin-top: calc(var(--spacing) * 4);
    }
    .mt-5 {
        margin-top: calc(var(--spacing) * 5);
    }
    .mt-6 {
        margin-top: calc(var(--spacing) * 6);
    }
    .mt-8 {
        margin-top: calc(var(--spacing) * 8);
    }
    .mt-10 {
        margin-top: calc(var(--spacing) * 10);
    }
    .mt-12 {
        margin-top: calc(var(--spacing) * 12);
    }
    .mt-16 {
        margin-top: calc(var(--spacing) * 16);
    }
    .mt-24 {
        margin-top: calc(var(--spacing) * 24);
    }
    .mt-auto {
        margin-top: auto;
    }
    .mt-px {
        margin-top: 1px;
    }
    .breadcrumbs {
        max-width: 100%;
        padding-block: 0.5rem;
        overflow-x: auto;
    }
    .breadcrumbs > menu,
    .breadcrumbs > ul,
    .breadcrumbs > ol {
        white-space: nowrap;
        align-items: center;
        min-height: min-content;
        display: flex;
    }
    :is(.breadcrumbs > menu, .breadcrumbs > ul, .breadcrumbs > ol) > li {
        align-items: center;
        display: flex;
    }
    :is(.breadcrumbs > menu, .breadcrumbs > ul, .breadcrumbs > ol) > li > * {
        cursor: pointer;
        align-items: center;
        gap: 0.5rem;
        display: flex;
    }
    @media (hover: hover) {
        :is(.breadcrumbs > menu, .breadcrumbs > ul, .breadcrumbs > ol) > li > :hover {
            text-decoration-line: underline;
        }
    }
    :is(.breadcrumbs > menu, .breadcrumbs > ul, .breadcrumbs > ol) > li > :focus {
        --tw-outline-style: none;
        outline-style: none;
    }
    @media (forced-colors: active) {
        :is(.breadcrumbs > menu, .breadcrumbs > ul, .breadcrumbs > ol) > li > :focus {
            outline-offset: 2px;
            outline: 2px solid #0000;
        }
    }
    :is(.breadcrumbs > menu, .breadcrumbs > ul, .breadcrumbs > ol) > li > :focus-visible {
        outline-offset: 2px;
        outline: 2px solid;
    }
    :is(.breadcrumbs > menu, .breadcrumbs > ul, .breadcrumbs > ol) > li + :before {
        content: "";
        opacity: 0.4;
        background-color: #0000;
        border-top: 1px solid;
        border-right: 1px solid;
        width: 0.375rem;
        height: 0.375rem;
        margin-left: 0.5rem;
        margin-right: 0.75rem;
        display: block;
        rotate: 45deg;
    }
    [dir="rtl"] :is(:is(.breadcrumbs > menu, .breadcrumbs > ul, .breadcrumbs > ol) > li) + :before {
        rotate: -135deg;
    }
    .mr-1 {
        margin-right: calc(var(--spacing) * 1);
    }
    .fieldset-legend {
        color: var(--color-base-content);
        justify-content: space-between;
        align-items: center;
        gap: 0.5rem;
        margin-bottom: -0.25rem;
        padding-block: 0.5rem;
        font-weight: 600;
        display: flex;
    }
    .-mb-px {
        margin-bottom: -1px;
    }
    .mb-0\.5 {
        margin-bottom: calc(var(--spacing) * 0.5);
    }
    .mb-1 {
        margin-bottom: calc(var(--spacing) * 1);
    }
    .mb-2 {
        margin-bottom: calc(var(--spacing) * 2);
    }
    .mb-3 {
        margin-bottom: calc(var(--spacing) * 3);
    }
    .mb-8 {
        margin-bottom: calc(var(--spacing) * 8);
    }
    .mb-10 {
        margin-bottom: calc(var(--spacing) * 10);
    }
    .ml-1 {
        margin-left: calc(var(--spacing) * 1);
    }
    .status {
        aspect-ratio: 1;
        border-radius: var(--radius-selector);
        background-color: var(--color-base-content);
        width: 0.5rem;
        height: 0.5rem;
        display: inline-block;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .status {
            background-color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
        }
    }
    .status {
        vertical-align: middle;
        color: #0000004d;
        background-position: 50%;
        background-repeat: no-repeat;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .status {
            color: #0000004d;
        }
        @supports (color: color-mix(in lab, red, red)) {
            .status {
                color: color-mix(in oklab, var(--color-black) 30%, transparent);
            }
        }
    }
    .status {
        background-image: radial-gradient(
            circle at 35% 30%,
            oklch(1 0 0 / calc(var(--depth) * 0.5)),
            #0000
        );
        box-shadow: 0 2px 3px -1px;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .status {
            box-shadow: 0 2px 3px -1px
                color-mix(in oklab, currentColor calc(var(--depth) * 100%), #0000);
        }
    }
    .badge {
        border-radius: var(--radius-selector);
        vertical-align: middle;
        color: var(--badge-fg);
        border: var(--border) solid var(--badge-color, var(--color-base-200));
        width: fit-content;
        padding-inline: calc(0.25rem * 3 - var(--border));
        background-size: auto, calc(var(--noise) * 100%);
        background-image: none, var(--fx-noise);
        background-color: var(--badge-bg);
        --badge-bg: var(--badge-color, var(--color-base-100));
        --badge-fg: var(--color-base-content);
        --size: calc(var(--size-selector, 0.25rem) * 6);
        height: var(--size);
        justify-content: center;
        align-items: center;
        gap: 0.5rem;
        font-size: 0.875rem;
        display: inline-flex;
    }
    .iconify {
        width: 1em;
        height: 1em;
        -webkit-mask-image: var(--svg);
        mask-image: var(--svg);
        background-color: currentColor;
        display: inline-block;
        -webkit-mask-size: 100% 100%;
        mask-size: 100% 100%;
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
    }
    .kbd {
        border-radius: var(--radius-field);
        background-color: var(--color-base-200);
        vertical-align: middle;
        border: var(--border) solid var(--color-base-content);
        justify-content: center;
        align-items: center;
        padding-left: 0.5em;
        padding-right: 0.5em;
        display: inline-flex;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .kbd {
            border: var(--border) solid color-mix(in srgb, var(--color-base-content) 20%, #0000);
        }
    }
    .kbd {
        border-bottom: calc(var(--border) + 1px) solid var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .kbd {
            border-bottom: calc(var(--border) + 1px) solid
                color-mix(in srgb, var(--color-base-content) 20%, #0000);
        }
    }
    .kbd {
        --size: calc(var(--size-selector, 0.25rem) * 6);
        height: var(--size);
        min-width: var(--size);
        font-size: 0.875rem;
    }
    .tabs {
        --tabs-height: auto;
        --tabs-direction: row;
        --tab-height: calc(var(--size-field, 0.25rem) * 10);
        height: var(--tabs-height);
        flex-wrap: wrap;
        flex-direction: var(--tabs-direction);
        display: flex;
    }
    .footer {
        grid-auto-flow: row;
        place-items: start;
        gap: 2.5rem 1rem;
        width: 100%;
        font-size: 0.875rem;
        line-height: 1.25rem;
        display: grid;
    }
    .footer > * {
        place-items: start;
        gap: 0.5rem;
        display: grid;
    }
    .footer.footer-center {
        text-align: center;
        grid-auto-flow: column dense;
        place-items: center;
    }
    .footer.footer-center > * {
        place-items: center;
    }
    .card-body {
        padding: var(--card-p, 1.5rem);
        font-size: var(--card-fs, 0.875rem);
        flex-direction: column;
        flex: auto;
        gap: 0.5rem;
        display: flex;
    }
    .card-body :where(p) {
        flex-grow: 1;
    }
    .fieldset-label {
        color: var(--color-base-content);
        align-items: center;
        gap: 0.375rem;
        display: flex;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .fieldset-label {
            color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
        }
    }
    .fieldset-label:has(input) {
        cursor: pointer;
    }
    .carousel {
        scroll-snap-type: x mandatory;
        scrollbar-width: none;
        display: inline-flex;
        overflow-x: scroll;
    }
    @media (prefers-reduced-motion: no-preference) {
        .carousel {
            scroll-behavior: smooth;
        }
    }
    .carousel::-webkit-scrollbar {
        display: none;
    }
    .alert {
        border-radius: var(--radius-box);
        color: var(--color-base-content);
        background-color: var(--alert-color, var(--color-base-200));
        text-align: start;
        border: var(--border) solid var(--color-base-200);
        background-size: auto, calc(var(--noise) * 100%);
        background-image: none, var(--fx-noise);
        box-shadow:
            0 3px 0 -2px oklch(100% 0 0 / calc(var(--depth) * 0.08)) inset,
            0 1px #000,
            0 4px 3px -2px oklch(0% 0 0 / calc(var(--depth) * 0.08));
        grid-template-columns: auto;
        grid-auto-flow: column;
        justify-content: start;
        place-items: center start;
        gap: 1rem;
        padding-block: 0.75rem;
        padding-inline: 1rem;
        font-size: 0.875rem;
        line-height: 1.25rem;
        display: grid;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .alert {
            box-shadow:
                0 3px 0 -2px oklch(100% 0 0 / calc(var(--depth) * 0.08)) inset,
                0 1px
                    color-mix(
                        in oklab,
                        color-mix(in oklab, #000 20%, var(--alert-color, var(--color-base-200)))
                            calc(var(--depth) * 20%),
                        #0000
                    ),
                0 4px 3px -2px oklch(0% 0 0 / calc(var(--depth) * 0.08));
        }
    }
    .alert:has(:nth-child(2)) {
        grid-template-columns: auto minmax(auto, 1fr);
    }
    .alert.alert-outline {
        color: var(--alert-color);
        box-shadow: none;
        background-color: #0000;
        background-image: none;
    }
    .alert.alert-dash {
        color: var(--alert-color);
        box-shadow: none;
        background-color: #0000;
        background-image: none;
        border-style: dashed;
    }
    .alert.alert-soft {
        color: var(--alert-color, var(--color-base-content));
        background: var(--alert-color, var(--color-base-content));
    }
    @supports (color: color-mix(in lab, red, red)) {
        .alert.alert-soft {
            background: color-mix(
                in oklab,
                var(--alert-color, var(--color-base-content)) 8%,
                var(--color-base-100)
            );
        }
    }
    .alert.alert-soft {
        border-color: var(--alert-color, var(--color-base-content));
    }
    @supports (color: color-mix(in lab, red, red)) {
        .alert.alert-soft {
            border-color: color-mix(
                in oklab,
                var(--alert-color, var(--color-base-content)) 10%,
                var(--color-base-100)
            );
        }
    }
    .alert.alert-soft {
        box-shadow: none;
        background-image: none;
    }
    .fieldset {
        grid-template-columns: 1fr;
        grid-auto-rows: max-content;
        gap: 0.375rem;
        padding-block: 0.25rem;
        font-size: 0.75rem;
        display: grid;
    }
    .card-actions {
        flex-wrap: wrap;
        align-items: flex-start;
        gap: 0.5rem;
        display: flex;
    }
    .avatar-placeholder > div {
        justify-content: center;
        align-items: center;
        display: flex;
    }
    .card-title {
        font-size: var(--cardtitle-fs, 1.125rem);
        align-items: center;
        gap: 0.5rem;
        font-weight: 600;
        display: flex;
    }
    .join {
        --join-ss: 0;
        --join-se: 0;
        --join-es: 0;
        --join-ee: 0;
        align-items: stretch;
        display: inline-flex;
    }
    .join :where(.join-item) {
        border-start-start-radius: var(--join-ss, 0);
        border-start-end-radius: var(--join-se, 0);
        border-end-end-radius: var(--join-ee, 0);
        border-end-start-radius: var(--join-es, 0);
    }
    .join :where(.join-item) * {
        --join-ss: var(--radius-field);
        --join-se: var(--radius-field);
        --join-es: var(--radius-field);
        --join-ee: var(--radius-field);
    }
    .join > .join-item:where(:first-child),
    .join :first-child:not(:last-child) :where(.join-item) {
        --join-ss: var(--radius-field);
        --join-se: 0;
        --join-es: var(--radius-field);
        --join-ee: 0;
    }
    .join > .join-item:where(:last-child),
    .join :last-child:not(:first-child) :where(.join-item) {
        --join-ss: 0;
        --join-se: var(--radius-field);
        --join-es: 0;
        --join-ee: var(--radius-field);
    }
    .join > .join-item:where(:only-child),
    .join :only-child :where(.join-item) {
        --join-ss: var(--radius-field);
        --join-se: var(--radius-field);
        --join-es: var(--radius-field);
        --join-ee: var(--radius-field);
    }
    .chat {
        --mask-chat: url("data:image/svg+xml,%3csvg width='13' height='13' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M0 11.5004C0 13.0004 2 13.0004 2 13.0004H12H13V0.00036329L12.5 0C12.5 0 11.977 2.09572 11.8581 2.50033C11.6075 3.35237 10.9149 4.22374 9 5.50036C6 7.50036 0 10.0004 0 11.5004Z'/%3e%3c/svg%3e");
        column-gap: 0.75rem;
        padding-block: 0.25rem;
        display: grid;
    }
    .avatar-group {
        display: flex;
        overflow: hidden;
    }
    .avatar-group :where(.avatar) {
        border: 4px solid var(--color-base-100);
        border-radius: 3.40282e38px;
        overflow: hidden;
    }
    .line-clamp-1 {
        -webkit-line-clamp: 1;
        -webkit-box-orient: vertical;
        display: -webkit-box;
        overflow: hidden;
    }
    .line-clamp-2 {
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        display: -webkit-box;
        overflow: hidden;
    }
    .line-clamp-3 {
        -webkit-line-clamp: 3;
        -webkit-box-orient: vertical;
        display: -webkit-box;
        overflow: hidden;
    }
    .mask {
        vertical-align: middle;
        display: inline-block;
        -webkit-mask-position: 50%;
        mask-position: 50%;
        -webkit-mask-size: contain;
        mask-size: contain;
        -webkit-mask-repeat: no-repeat;
        mask-repeat: no-repeat;
    }
    .block {
        display: block;
    }
    .contents {
        display: contents;
    }
    .flex {
        display: flex;
    }
    .grid {
        display: grid;
    }
    .hidden {
        display: none;
    }
    .inline {
        display: inline;
    }
    .inline-block {
        display: inline-block;
    }
    .inline-flex {
        display: inline-flex;
    }
    .inline-grid {
        display: inline-grid;
    }
    .table {
        display: table;
    }
    .aspect-square {
        aspect-ratio: 1;
    }
    .btn-circle {
        width: var(--size);
        height: var(--size);
        border-radius: 3.40282e38px;
        padding-inline: 0;
    }
    .btn-square {
        width: var(--size);
        height: var(--size);
        padding-inline: 0;
    }
    .size-1 {
        width: calc(var(--spacing) * 1);
        height: calc(var(--spacing) * 1);
    }
    .size-1\.5 {
        width: calc(var(--spacing) * 1.5);
        height: calc(var(--spacing) * 1.5);
    }
    .size-2 {
        width: calc(var(--spacing) * 2);
        height: calc(var(--spacing) * 2);
    }
    .size-2\.5 {
        width: calc(var(--spacing) * 2.5);
        height: calc(var(--spacing) * 2.5);
    }
    .size-3 {
        width: calc(var(--spacing) * 3);
        height: calc(var(--spacing) * 3);
    }
    .size-3\.5 {
        width: calc(var(--spacing) * 3.5);
        height: calc(var(--spacing) * 3.5);
    }
    .size-4 {
        width: calc(var(--spacing) * 4);
        height: calc(var(--spacing) * 4);
    }
    .size-4\.5 {
        width: calc(var(--spacing) * 4.5);
        height: calc(var(--spacing) * 4.5);
    }
    .size-5 {
        width: calc(var(--spacing) * 5);
        height: calc(var(--spacing) * 5);
    }
    .size-5\.5 {
        width: calc(var(--spacing) * 5.5);
        height: calc(var(--spacing) * 5.5);
    }
    .size-6 {
        width: calc(var(--spacing) * 6);
        height: calc(var(--spacing) * 6);
    }
    .size-7 {
        width: calc(var(--spacing) * 7);
        height: calc(var(--spacing) * 7);
    }
    .size-7\.5 {
        width: calc(var(--spacing) * 7.5);
        height: calc(var(--spacing) * 7.5);
    }
    .size-8 {
        width: calc(var(--spacing) * 8);
        height: calc(var(--spacing) * 8);
    }
    .size-9 {
        width: calc(var(--spacing) * 9);
        height: calc(var(--spacing) * 9);
    }
    .size-10 {
        width: calc(var(--spacing) * 10);
        height: calc(var(--spacing) * 10);
    }
    .size-11 {
        width: calc(var(--spacing) * 11);
        height: calc(var(--spacing) * 11);
    }
    .size-12 {
        width: calc(var(--spacing) * 12);
        height: calc(var(--spacing) * 12);
    }
    .size-14 {
        width: calc(var(--spacing) * 14);
        height: calc(var(--spacing) * 14);
    }
    .size-16 {
        width: calc(var(--spacing) * 16);
        height: calc(var(--spacing) * 16);
    }
    .size-20 {
        width: calc(var(--spacing) * 20);
        height: calc(var(--spacing) * 20);
    }
    .size-24 {
        width: calc(var(--spacing) * 24);
        height: calc(var(--spacing) * 24);
    }
    .size-28 {
        width: calc(var(--spacing) * 28);
        height: calc(var(--spacing) * 28);
    }
    .size-32 {
        width: calc(var(--spacing) * 32);
        height: calc(var(--spacing) * 32);
    }
    .size-36 {
        width: calc(var(--spacing) * 36);
        height: calc(var(--spacing) * 36);
    }
    .size-44 {
        width: calc(var(--spacing) * 44);
        height: calc(var(--spacing) * 44);
    }
    .size-60 {
        width: calc(var(--spacing) * 60);
        height: calc(var(--spacing) * 60);
    }
    .size-\[350px\] {
        width: 350px;
        height: 350px;
    }
    .size-\[450px\] {
        width: 450px;
        height: 450px;
    }
    .size-full {
        width: 100%;
        height: 100%;
    }
    .status-sm {
        width: 0.25rem;
        height: 0.25rem;
    }
    .h-0\.5 {
        height: calc(var(--spacing) * 0.5);
    }
    .h-1 {
        height: calc(var(--spacing) * 1);
    }
    .h-1\.5 {
        height: calc(var(--spacing) * 1.5);
    }
    .h-2 {
        height: calc(var(--spacing) * 2);
    }
    .h-2\.5 {
        height: calc(var(--spacing) * 2.5);
    }
    .h-3 {
        height: calc(var(--spacing) * 3);
    }
    .h-4 {
        height: calc(var(--spacing) * 4);
    }
    .h-4\.5 {
        height: calc(var(--spacing) * 4.5);
    }
    .h-5 {
        height: calc(var(--spacing) * 5);
    }
    .h-5\.5 {
        height: calc(var(--spacing) * 5.5);
    }
    .h-6 {
        height: calc(var(--spacing) * 6);
    }
    .h-6\.5 {
        height: calc(var(--spacing) * 6.5);
    }
    .h-7 {
        height: calc(var(--spacing) * 7);
    }
    .h-8 {
        height: calc(var(--spacing) * 8);
    }
    .h-9 {
        height: calc(var(--spacing) * 9);
    }
    .h-10 {
        height: calc(var(--spacing) * 10);
    }
    .h-12 {
        height: calc(var(--spacing) * 12);
    }
    .h-15 {
        height: calc(var(--spacing) * 15);
    }
    .h-16 {
        height: calc(var(--spacing) * 16);
    }
    .h-20 {
        height: calc(var(--spacing) * 20);
    }
    .h-22 {
        height: calc(var(--spacing) * 22);
    }
    .h-24 {
        height: calc(var(--spacing) * 24);
    }
    .h-28 {
        height: calc(var(--spacing) * 28);
    }
    .h-30 {
        height: calc(var(--spacing) * 30);
    }
    .h-32 {
        height: calc(var(--spacing) * 32);
    }
    .h-36 {
        height: calc(var(--spacing) * 36);
    }
    .h-38 {
        height: calc(var(--spacing) * 38);
    }
    .h-40 {
        height: calc(var(--spacing) * 40);
    }
    .h-44 {
        height: calc(var(--spacing) * 44);
    }
    .h-60 {
        height: calc(var(--spacing) * 60);
    }
    .h-62 {
        height: calc(var(--spacing) * 62);
    }
    .h-64 {
        height: calc(var(--spacing) * 64);
    }
    .h-69 {
        height: calc(var(--spacing) * 69);
    }
    .h-80 {
        height: calc(var(--spacing) * 80);
    }
    .h-100 {
        height: calc(var(--spacing) * 100);
    }
    .h-103 {
        height: calc(var(--spacing) * 103);
    }
    .h-112 {
        height: calc(var(--spacing) * 112);
    }
    .h-160 {
        height: calc(var(--spacing) * 160);
    }
    .h-\[195px\] {
        height: 195px;
    }
    .h-\[1600px\] {
        height: 1600px;
    }
    .h-\[calc\(100vh_-_220px\)\] {
        height: calc(100vh - 220px);
    }
    .h-\[calc\(100vh_-_306px\)\] {
        height: calc(100vh - 306px);
    }
    .h-\[calc\(100vh_-_320px\)\] {
        height: calc(100vh - 320px);
    }
    .h-fit {
        height: fit-content;
    }
    .h-full {
        height: 100%;
    }
    .h-px {
        height: 1px;
    }
    .h-screen {
        height: 100vh;
    }
    .max-h-0 {
        max-height: calc(var(--spacing) * 0);
    }
    .min-h-0 {
        min-height: calc(var(--spacing) * 0);
    }
    .min-h-4 {
        min-height: calc(var(--spacing) * 4);
    }
    .min-h-10 {
        min-height: calc(var(--spacing) * 10);
    }
    .min-h-12 {
        min-height: calc(var(--spacing) * 12);
    }
    .min-h-16 {
        min-height: calc(var(--spacing) * 16);
    }
    .min-h-\[85vh\] {
        min-height: 85vh;
    }
    .min-h-full {
        min-height: 100%;
    }
    .btn-wide {
        width: 100%;
        max-width: 16rem;
    }
    .btn-block {
        width: 100%;
    }
    .loading-sm {
        width: calc(var(--size-selector, 0.25rem) * 5);
    }
    .w-1 {
        width: calc(var(--spacing) * 1);
    }
    .w-1\/2 {
        width: 50%;
    }
    .w-2 {
        width: calc(var(--spacing) * 2);
    }
    .w-3 {
        width: calc(var(--spacing) * 3);
    }
    .w-3\/4 {
        width: 75%;
    }
    .w-3\/5 {
        width: 60%;
    }
    .w-4 {
        width: calc(var(--spacing) * 4);
    }
    .w-4\/5 {
        width: 80%;
    }
    .w-5 {
        width: calc(var(--spacing) * 5);
    }
    .w-6 {
        width: calc(var(--spacing) * 6);
    }
    .w-7 {
        width: calc(var(--spacing) * 7);
    }
    .w-8 {
        width: calc(var(--spacing) * 8);
    }
    .w-9 {
        width: calc(var(--spacing) * 9);
    }
    .w-10 {
        width: calc(var(--spacing) * 10);
    }
    .w-12 {
        width: calc(var(--spacing) * 12);
    }
    .w-14 {
        width: calc(var(--spacing) * 14);
    }
    .w-15 {
        width: calc(var(--spacing) * 15);
    }
    .w-16 {
        width: calc(var(--spacing) * 16);
    }
    .w-18 {
        width: calc(var(--spacing) * 18);
    }
    .w-20 {
        width: calc(var(--spacing) * 20);
    }
    .w-24 {
        width: calc(var(--spacing) * 24);
    }
    .w-28 {
        width: calc(var(--spacing) * 28);
    }
    .w-30 {
        width: calc(var(--spacing) * 30);
    }
    .w-32 {
        width: calc(var(--spacing) * 32);
    }
    .w-36 {
        width: calc(var(--spacing) * 36);
    }
    .w-40 {
        width: calc(var(--spacing) * 40);
    }
    .w-44 {
        width: calc(var(--spacing) * 44);
    }
    .w-48 {
        width: calc(var(--spacing) * 48);
    }
    .w-52 {
        width: calc(var(--spacing) * 52);
    }
    .w-54 {
        width: calc(var(--spacing) * 54);
    }
    .w-56 {
        width: calc(var(--spacing) * 56);
    }
    .w-60 {
        width: calc(var(--spacing) * 60);
    }
    .w-64 {
        width: calc(var(--spacing) * 64);
    }
    .w-68 {
        width: calc(var(--spacing) * 68);
    }
    .w-72 {
        width: calc(var(--spacing) * 72);
    }
    .w-80 {
        width: calc(var(--spacing) * 80);
    }
    .w-84 {
        width: calc(var(--spacing) * 84);
    }
    .w-\[3px\] {
        width: 3px;
    }
    .w-\[30\%\] {
        width: 30%;
    }
    .w-\[45\%\] {
        width: 45%;
    }
    .w-\[50\%\] {
        width: 50%;
    }
    .w-\[52\%\] {
        width: 52%;
    }
    .w-\[67\%\] {
        width: 67%;
    }
    .w-\[75\%\] {
        width: 75%;
    }
    .w-\[78\%\] {
        width: 78%;
    }
    .w-\[80\%\] {
        width: 80%;
    }
    .w-fit {
        width: fit-content;
    }
    .w-full {
        width: 100%;
    }
    .w-px {
        width: 1px;
    }
    .w-xs {
        width: var(--container-xs);
    }
    .max-w-2xl {
        max-width: var(--container-2xl);
    }
    .max-w-4xl {
        max-width: var(--container-4xl);
    }
    .max-w-8 {
        max-width: calc(var(--spacing) * 8);
    }
    .max-w-10 {
        max-width: calc(var(--spacing) * 10);
    }
    .max-w-32 {
        max-width: calc(var(--spacing) * 32);
    }
    .max-w-48 {
        max-width: calc(var(--spacing) * 48);
    }
    .max-w-56 {
        max-width: calc(var(--spacing) * 56);
    }
    .max-w-80 {
        max-width: calc(var(--spacing) * 80);
    }
    .max-w-88 {
        max-width: calc(var(--spacing) * 88);
    }
    .max-w-\[600px\] {
        max-width: 600px;
    }
    .max-w-\[750px\] {
        max-width: 750px;
    }
    .max-w-\[1000px\] {
        max-width: 1000px;
    }
    .max-w-full {
        max-width: 100%;
    }
    .max-w-lg {
        max-width: var(--container-lg);
    }
    .max-w-md {
        max-width: var(--container-md);
    }
    .min-w-0 {
        min-width: calc(var(--spacing) * 0);
    }
    .min-w-4 {
        min-width: calc(var(--spacing) * 4);
    }
    .min-w-12 {
        min-width: calc(var(--spacing) * 12);
    }
    .min-w-24 {
        min-width: calc(var(--spacing) * 24);
    }
    .min-w-48 {
        min-width: calc(var(--spacing) * 48);
    }
    .min-w-64 {
        min-width: calc(var(--spacing) * 64);
    }
    .flex-none {
        flex: none;
    }
    .grow {
        flex-grow: 1;
    }
    .origin-left {
        transform-origin: 0;
    }
    .origin-right {
        transform-origin: 100%;
    }
    .-translate-1\/2 {
        --tw-translate-x: -50%;
        --tw-translate-y: -50%;
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }
    .-translate-x-1 {
        --tw-translate-x: calc(var(--spacing) * -1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }
    .-translate-x-1\/2 {
        --tw-translate-x: -50%;
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }
    .-translate-x-2 {
        --tw-translate-x: calc(var(--spacing) * -2);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }
    .translate-x-2 {
        --tw-translate-x: calc(var(--spacing) * 2);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }
    .-translate-y-1\/2 {
        --tw-translate-y: -50%;
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }
    .-translate-y-4 {
        --tw-translate-y: calc(var(--spacing) * -4);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }
    .translate-y-1\/2 {
        --tw-translate-y: 50%;
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }
    .translate-y-4 {
        --tw-translate-y: calc(var(--spacing) * 4);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }
    .scale-0 {
        --tw-scale-x: 0%;
        --tw-scale-y: 0%;
        --tw-scale-z: 0%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
    }
    .scale-50 {
        --tw-scale-x: 50%;
        --tw-scale-y: 50%;
        --tw-scale-z: 50%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
    }
    .scale-75 {
        --tw-scale-x: 75%;
        --tw-scale-y: 75%;
        --tw-scale-z: 75%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
    }
    .scale-80 {
        --tw-scale-x: 80%;
        --tw-scale-y: 80%;
        --tw-scale-z: 80%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
    }
    .scale-90 {
        --tw-scale-x: 90%;
        --tw-scale-y: 90%;
        --tw-scale-z: 90%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
    }
    .scale-100 {
        --tw-scale-x: 100%;
        --tw-scale-y: 100%;
        --tw-scale-z: 100%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
    }
    .scale-x-0 {
        --tw-scale-x: 0%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
    }
    .-rotate-25 {
        rotate: -25deg;
    }
    .-rotate-45 {
        rotate: -45deg;
    }
    .-rotate-90 {
        rotate: -90deg;
    }
    .rotate-45 {
        rotate: 45deg;
    }
    .rotate-180 {
        rotate: 180deg;
    }
    .rotate-\[135deg\] {
        rotate: 135deg;
    }
    .transform {
        transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,)
            var(--tw-skew-y,);
    }
    .skeleton {
        border-radius: var(--radius-box);
        background-color: var(--color-base-300);
    }
    @media (prefers-reduced-motion: reduce) {
        .skeleton {
            transition-duration: 15s;
        }
    }
    .skeleton {
        will-change: background-position;
        background-image: linear-gradient(
            105deg,
            #0000 0% 40%,
            var(--color-base-100) 50%,
            #0000 60% 100%
        );
        background-position-x: -50%;
        background-repeat: no-repeat;
        background-size: 200%;
    }
    @media (prefers-reduced-motion: no-preference) {
        .skeleton {
            animation: 1.8s ease-in-out infinite skeleton;
        }
    }
    .motion-preset-seesaw {
        --motion-loop-rotate: 6deg;
        --motion-rotate-loop-animation: motion-rotate-loop-mirror
            calc(
                var(--motion-rotate-duration, var(--motion-duration)) *
                    var(
                        --motion-rotate-perceptual-duration-multiplier,
                        var(--motion-perceptual-duration-multiplier)
                    )
            )
            var(--motion-rotate-timing, var(--motion-timing))
            var(--motion-rotate-delay, var(--motion-delay)) both
            var(--motion-rotate-loop-count, var(--motion-loop-count));
        --motion-rotate-timing: var(--motion-spring-bounciest);
        --motion-rotate-perceptual-duration-multiplier: 5.285;
        animation:
            var(--motion-scale-in-animation), var(--motion-translate-in-animation),
            var(--motion-rotate-in-animation), var(--motion-filter-in-animation),
            var(--motion-opacity-in-animation), var(--motion-background-color-in-animation),
            var(--motion-text-color-in-animation), var(--motion-scale-loop-animation),
            var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation),
            var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation),
            var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    }
    .animate-bounce-slow {
        animation: var(--animate-bounce-slow);
    }
    .animate-ping {
        animation: var(--animate-ping);
    }
    .animate-spin {
        animation: var(--animate-spin);
    }
    .link {
        cursor: pointer;
        text-decoration-line: underline;
    }
    .link:focus {
        --tw-outline-style: none;
        outline-style: none;
    }
    @media (forced-colors: active) {
        .link:focus {
            outline-offset: 2px;
            outline: 2px solid #0000;
        }
    }
    .link:focus-visible {
        outline-offset: 2px;
        outline: 2px solid;
    }
    .cursor-grab {
        cursor: grab;
    }
    .cursor-pointer {
        cursor: pointer;
    }
    .resize-none {
        resize: none;
    }
    .grid-flow-col {
        grid-auto-flow: column;
    }
    .grid-cols-1 {
        grid-template-columns: repeat(1, minmax(0, 1fr));
    }
    .grid-cols-2 {
        grid-template-columns: repeat(2, minmax(0, 1fr));
    }
    .grid-cols-3 {
        grid-template-columns: repeat(3, minmax(0, 1fr));
    }
    .grid-cols-4 {
        grid-template-columns: repeat(4, minmax(0, 1fr));
    }
    .grid-cols-5 {
        grid-template-columns: repeat(5, minmax(0, 1fr));
    }
    .grid-cols-6 {
        grid-template-columns: repeat(6, minmax(0, 1fr));
    }
    .grid-cols-7 {
        grid-template-columns: repeat(7, minmax(0, 1fr));
    }
    .grid-cols-12 {
        grid-template-columns: repeat(12, minmax(0, 1fr));
    }
    .grid-rows-4 {
        grid-template-rows: repeat(4, minmax(0, 1fr));
    }
    .flex-col {
        flex-direction: column;
    }
    .flex-col-reverse {
        flex-direction: column-reverse;
    }
    .flex-row {
        flex-direction: row;
    }
    .flex-row-reverse {
        flex-direction: row-reverse;
    }
    .flex-wrap {
        flex-wrap: wrap;
    }
    .place-items-center {
        place-items: center;
    }
    .items-center {
        align-items: center;
    }
    .items-end {
        align-items: flex-end;
    }
    .items-start {
        align-items: flex-start;
    }
    .items-stretch {
        align-items: stretch;
    }
    .justify-around {
        justify-content: space-around;
    }
    .justify-between {
        justify-content: space-between;
    }
    .justify-center {
        justify-content: center;
    }
    .justify-end {
        justify-content: flex-end;
    }
    .justify-start {
        justify-content: flex-start;
    }
    .gap-0 {
        gap: calc(var(--spacing) * 0);
    }
    .gap-0\.5 {
        gap: calc(var(--spacing) * 0.5);
    }
    .gap-1 {
        gap: calc(var(--spacing) * 1);
    }
    .gap-1\.5 {
        gap: calc(var(--spacing) * 1.5);
    }
    .gap-2 {
        gap: calc(var(--spacing) * 2);
    }
    .gap-2\.5 {
        gap: calc(var(--spacing) * 2.5);
    }
    .gap-3 {
        gap: calc(var(--spacing) * 3);
    }
    .gap-4 {
        gap: calc(var(--spacing) * 4);
    }
    .gap-5 {
        gap: calc(var(--spacing) * 5);
    }
    .gap-6 {
        gap: calc(var(--spacing) * 6);
    }
    .gap-8 {
        gap: calc(var(--spacing) * 8);
    }
    .gap-12 {
        gap: calc(var(--spacing) * 12);
    }
    .gap-\[3px\] {
        gap: 3px;
    }
    :where(.-space-y-0\.5 > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * -0.5) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * -0.5) * calc(1 - var(--tw-space-y-reverse)));
    }
    :where(.-space-y-1\.5 > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * -1.5) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * -1.5) * calc(1 - var(--tw-space-y-reverse)));
    }
    :where(.space-y-0 > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 0) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-y-reverse)));
    }
    :where(.space-y-0\.5 > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 0.5) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 0.5) * calc(1 - var(--tw-space-y-reverse)));
    }
    :where(.space-y-1 > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));
    }
    :where(.space-y-1\.5 > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 1.5) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 1.5) * calc(1 - var(--tw-space-y-reverse)));
    }
    :where(.space-y-2 > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
    }
    :where(.space-y-2\.5 > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 2.5) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 2.5) * calc(1 - var(--tw-space-y-reverse)));
    }
    :where(.space-y-3 > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse)));
    }
    :where(.space-y-3\.5 > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 3.5) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 3.5) * calc(1 - var(--tw-space-y-reverse)));
    }
    :where(.space-y-5 > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 5) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 5) * calc(1 - var(--tw-space-y-reverse)));
    }
    :where(.space-y-6 > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
    }
    :where(.space-y-8 > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));
    }
    .gap-x-4 {
        column-gap: calc(var(--spacing) * 4);
    }
    :where(.-space-x-3\.5 > :not(:last-child)) {
        --tw-space-x-reverse: 0;
        margin-inline-start: calc(calc(var(--spacing) * -3.5) * var(--tw-space-x-reverse));
        margin-inline-end: calc(calc(var(--spacing) * -3.5) * calc(1 - var(--tw-space-x-reverse)));
    }
    :where(.-space-x-5 > :not(:last-child)) {
        --tw-space-x-reverse: 0;
        margin-inline-start: calc(calc(var(--spacing) * -5) * var(--tw-space-x-reverse));
        margin-inline-end: calc(calc(var(--spacing) * -5) * calc(1 - var(--tw-space-x-reverse)));
    }
    :where(.space-x-1 > :not(:last-child)) {
        --tw-space-x-reverse: 0;
        margin-inline-start: calc(calc(var(--spacing) * 1) * var(--tw-space-x-reverse));
        margin-inline-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-x-reverse)));
    }
    :where(.space-x-2 > :not(:last-child)) {
        --tw-space-x-reverse: 0;
        margin-inline-start: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
        margin-inline-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
    }
    :where(.space-x-3 > :not(:last-child)) {
        --tw-space-x-reverse: 0;
        margin-inline-start: calc(calc(var(--spacing) * 3) * var(--tw-space-x-reverse));
        margin-inline-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-x-reverse)));
    }
    :where(.divide-y > :not(:last-child)) {
        --tw-divide-y-reverse: 0;
        border-bottom-style: var(--tw-border-style);
        border-top-style: var(--tw-border-style);
        border-top-width: calc(1px * var(--tw-divide-y-reverse));
        border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
    }
    :where(.divide-dashed > :not(:last-child)) {
        --tw-border-style: dashed;
        border-style: dashed;
    }
    :where(.divide-base-200 > :not(:last-child)) {
        border-color: var(--color-base-200);
    }
    :where(.divide-base-300 > :not(:last-child)) {
        border-color: var(--color-base-300);
    }
    .truncate {
        text-overflow: ellipsis;
        white-space: nowrap;
        overflow: hidden;
    }
    .overflow-auto {
        overflow: auto;
    }
    .overflow-hidden {
        overflow: hidden;
    }
    .overflow-x-auto {
        overflow-x: auto;
    }
    .tabs-box {
        background-color: var(--color-base-200);
        --tabs-box-radius: calc(var(--radius-field) + var(--radius-field) + var(--radius-field));
        border-radius: calc(var(--radius-field) + min(0.25rem, var(--tabs-box-radius)));
        box-shadow:
            0 -0.5px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset,
            0 0.5px oklch(0% 0 0 / calc(var(--depth) * 0.05)) inset;
        padding: 0.25rem;
    }
    .tabs-box .tab {
        border-radius: var(--radius-field);
        border-style: none;
    }
    .tabs-box .tab:focus-visible,
    .tabs-box .tab:is(label:has(:checked:focus-visible)) {
        outline-offset: 2px;
    }
    .tabs-box
        > :is(
            .tab-active,
            [aria-selected="true"],
            [aria-current="true"],
            [aria-current="page"]
        ):not(.tab-disabled, [disabled]),
    .tabs-box > :is(input:checked),
    .tabs-box > :is(label:has(:checked)) {
        background-color: var(--tab-bg, var(--color-base-100));
        box-shadow:
            0 1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset,
            0 1px 1px -1px var(--color-neutral),
            0 1px 6px -4px var(--color-neutral);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .tabs-box
            > :is(
                .tab-active,
                [aria-selected="true"],
                [aria-current="true"],
                [aria-current="page"]
            ):not(.tab-disabled, [disabled]),
        .tabs-box > :is(input:checked),
        .tabs-box > :is(label:has(:checked)) {
            box-shadow:
                0 1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset,
                0 1px 1px -1px
                    color-mix(in oklab, var(--color-neutral) calc(var(--depth) * 50%), #0000),
                0 1px 6px -4px
                    color-mix(in oklab, var(--color-neutral) calc(var(--depth) * 100%), #0000);
        }
    }
    @media (forced-colors: active) {
        .tabs-box
            > :is(
                .tab-active,
                [aria-selected="true"],
                [aria-current="true"],
                [aria-current="page"]
            ):not(.tab-disabled, [disabled]),
        .tabs-box > :is(input:checked),
        .tabs-box > :is(label:has(:checked)) {
            border: 1px solid;
        }
    }
    .menu-sm :where(li:not(.menu-title) > :not(ul, details, .menu-title)),
    .menu-sm :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
        border-radius: var(--radius-field);
        padding-block: 0.25rem;
        padding-inline: 0.625rem;
        font-size: 0.75rem;
    }
    .menu-sm .menu-title {
        padding-block: 0.5rem;
        padding-inline: 0.75rem;
    }
    .rounded-\[calc\(var\(--radius-box\)\+1px\)\] {
        border-radius: calc(var(--radius-box) + 1px);
    }
    .rounded-\[inherit\] {
        border-radius: inherit;
    }
    .rounded-box {
        border-radius: var(--radius-box);
    }
    .rounded-full {
        border-radius: 3.40282e38px;
    }
    .rounded-lg {
        border-radius: var(--radius-lg);
    }
    .rounded-md {
        border-radius: var(--radius-md);
    }
    .rounded-none {
        border-radius: 0;
    }
    .rounded-sm {
        border-radius: var(--radius-sm);
    }
    .rounded-xl {
        border-radius: var(--radius-xl);
    }
    .rounded-xs {
        border-radius: var(--radius-xs);
    }
    .rounded-s-xs {
        border-start-start-radius: var(--radius-xs);
        border-end-start-radius: var(--radius-xs);
    }
    .rounded-e-xl {
        border-start-end-radius: var(--radius-xl);
        border-end-end-radius: var(--radius-xl);
    }
    .rounded-t-box {
        border-top-left-radius: var(--radius-box);
        border-top-right-radius: var(--radius-box);
    }
    .border {
        border-style: var(--tw-border-style);
        border-width: 1px;
    }
    .border-0 {
        border-style: var(--tw-border-style);
        border-width: 0;
    }
    .border-2 {
        border-style: var(--tw-border-style);
        border-width: 2px;
    }
    .border-s {
        border-inline-start-style: var(--tw-border-style);
        border-inline-start-width: 1px;
    }
    .border-e {
        border-inline-end-style: var(--tw-border-style);
        border-inline-end-width: 1px;
    }
    .border-t {
        border-top-style: var(--tw-border-style);
        border-top-width: 1px;
    }
    .border-t-0 {
        border-top-style: var(--tw-border-style);
        border-top-width: 0;
    }
    .border-b {
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 1px;
    }
    .badge-dash {
        color: var(--badge-color);
        --badge-bg: #0000;
        background-image: none;
        border-style: dashed;
        border-color: currentColor;
    }
    .border-dashed {
        --tw-border-style: dashed;
        border-style: dashed;
    }
    .border-none {
        --tw-border-style: none;
        border-style: none;
    }
    .badge-ghost {
        border-color: var(--color-base-200);
        background-color: var(--color-base-200);
        color: var(--color-base-content);
        background-image: none;
    }
    .badge-soft {
        color: var(--badge-color, var(--color-base-content));
        background-color: var(--badge-color, var(--color-base-content));
    }
    @supports (color: color-mix(in lab, red, red)) {
        .badge-soft {
            background-color: color-mix(
                in oklab,
                var(--badge-color, var(--color-base-content)) 8%,
                var(--color-base-100)
            );
        }
    }
    .badge-soft {
        border-color: var(--badge-color, var(--color-base-content));
    }
    @supports (color: color-mix(in lab, red, red)) {
        .badge-soft {
            border-color: color-mix(
                in oklab,
                var(--badge-color, var(--color-base-content)) 10%,
                var(--color-base-100)
            );
        }
    }
    .badge-soft {
        background-image: none;
    }
    .input-ghost {
        box-shadow: none;
        background-color: #0000;
        border-color: #0000;
    }
    .input-ghost:focus,
    .input-ghost:focus-within {
        background-color: var(--color-base-100);
        color: var(--color-base-content);
        box-shadow: none;
        border-color: #0000;
    }
    .alert-info {
        border-color: var(--color-info);
        color: var(--color-info-content);
        --alert-color: var(--color-info);
    }
    .\!border-primary\/20 {
        border-color: var(--color-primary) !important;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .\!border-primary\/20 {
            border-color: color-mix(in oklab, var(--color-primary) 20%, transparent) !important;
        }
    }
    .\!border-transparent {
        border-color: #0000 !important;
    }
    .border-base-100\/20 {
        border-color: var(--color-base-100);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .border-base-100\/20 {
            border-color: color-mix(in oklab, var(--color-base-100) 20%, transparent);
        }
    }
    .border-base-200 {
        border-color: var(--color-base-200);
    }
    .border-base-300,
    .border-base-300\/80 {
        border-color: var(--color-base-300);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .border-base-300\/80 {
            border-color: color-mix(in oklab, var(--color-base-300) 80%, transparent);
        }
    }
    .border-base-content\/5 {
        border-color: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .border-base-content\/5 {
            border-color: color-mix(in oklab, var(--color-base-content) 5%, transparent);
        }
    }
    .border-base-content\/20 {
        border-color: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .border-base-content\/20 {
            border-color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
        }
    }
    .border-base-content\/30 {
        border-color: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .border-base-content\/30 {
            border-color: color-mix(in oklab, var(--color-base-content) 30%, transparent);
        }
    }
    .border-error\/50 {
        border-color: var(--color-error);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .border-error\/50 {
            border-color: color-mix(in oklab, var(--color-error) 50%, transparent);
        }
    }
    .border-indigo-500\/10 {
        border-color: #625fff1a;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .border-indigo-500\/10 {
            border-color: color-mix(in oklab, var(--color-indigo-500) 10%, transparent);
        }
    }
    .border-orange-500\/10 {
        border-color: #fe6e001a;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .border-orange-500\/10 {
            border-color: color-mix(in oklab, var(--color-orange-500) 10%, transparent);
        }
    }
    .border-primary-content\/10 {
        border-color: var(--color-primary-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .border-primary-content\/10 {
            border-color: color-mix(in oklab, var(--color-primary-content) 10%, transparent);
        }
    }
    .border-primary\/10 {
        border-color: var(--color-primary);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .border-primary\/10 {
            border-color: color-mix(in oklab, var(--color-primary) 10%, transparent);
        }
    }
    .border-primary\/15 {
        border-color: var(--color-primary);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .border-primary\/15 {
            border-color: color-mix(in oklab, var(--color-primary) 15%, transparent);
        }
    }
    .border-primary\/20 {
        border-color: var(--color-primary);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .border-primary\/20 {
            border-color: color-mix(in oklab, var(--color-primary) 20%, transparent);
        }
    }
    .border-purple-500\/10 {
        border-color: #ac4bff1a;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .border-purple-500\/10 {
            border-color: color-mix(in oklab, var(--color-purple-500) 10%, transparent);
        }
    }
    .border-success\/20 {
        border-color: var(--color-success);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .border-success\/20 {
            border-color: color-mix(in oklab, var(--color-success) 20%, transparent);
        }
    }
    .border-teal-500\/5 {
        border-color: #00baa70d;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .border-teal-500\/5 {
            border-color: color-mix(in oklab, var(--color-teal-500) 5%, transparent);
        }
    }
    .border-transparent {
        border-color: #0000;
    }
    .border-white\/20 {
        border-color: #fff3;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .border-white\/20 {
            border-color: color-mix(in oklab, var(--color-white) 20%, transparent);
        }
    }
    .border-white\/25 {
        border-color: #ffffff40;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .border-white\/25 {
            border-color: color-mix(in oklab, var(--color-white) 25%, transparent);
        }
    }
    .border-white\/60 {
        border-color: #fff9;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .border-white\/60 {
            border-color: color-mix(in oklab, var(--color-white) 60%, transparent);
        }
    }
    .status-error {
        background-color: var(--color-error);
        color: var(--color-error);
    }
    .status-info {
        background-color: var(--color-info);
        color: var(--color-info);
    }
    .status-primary {
        background-color: var(--color-primary);
        color: var(--color-primary);
    }
    .status-secondary {
        background-color: var(--color-secondary);
        color: var(--color-secondary);
    }
    .status-success {
        background-color: var(--color-success);
        color: var(--color-success);
    }
    .status-warning {
        background-color: var(--color-warning);
        color: var(--color-warning);
    }
    .\!bg-primary-content\/15 {
        background-color: var(--color-primary-content) !important;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .\!bg-primary-content\/15 {
            background-color: color-mix(
                in oklab,
                var(--color-primary-content) 15%,
                transparent
            ) !important;
        }
    }
    .\!bg-primary\/10 {
        background-color: var(--color-primary) !important;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .\!bg-primary\/10 {
            background-color: color-mix(in oklab, var(--color-primary) 10%, transparent) !important;
        }
    }
    .bg-\[\#FFE9D1\] {
        background-color: #ffe9d1;
    }
    .bg-accent {
        background-color: var(--color-accent);
    }
    .bg-base-100,
    .bg-base-100\/30 {
        background-color: var(--color-base-100);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-base-100\/30 {
            background-color: color-mix(in oklab, var(--color-base-100) 30%, transparent);
        }
    }
    .bg-base-100\/80 {
        background-color: var(--color-base-100);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-base-100\/80 {
            background-color: color-mix(in oklab, var(--color-base-100) 80%, transparent);
        }
    }
    .bg-base-200,
    .bg-base-200\/5 {
        background-color: var(--color-base-200);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-base-200\/5 {
            background-color: color-mix(in oklab, var(--color-base-200) 5%, transparent);
        }
    }
    .bg-base-200\/20 {
        background-color: var(--color-base-200);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-base-200\/20 {
            background-color: color-mix(in oklab, var(--color-base-200) 20%, transparent);
        }
    }
    .bg-base-200\/30 {
        background-color: var(--color-base-200);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-base-200\/30 {
            background-color: color-mix(in oklab, var(--color-base-200) 30%, transparent);
        }
    }
    .bg-base-200\/40 {
        background-color: var(--color-base-200);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-base-200\/40 {
            background-color: color-mix(in oklab, var(--color-base-200) 40%, transparent);
        }
    }
    .bg-base-200\/50 {
        background-color: var(--color-base-200);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-base-200\/50 {
            background-color: color-mix(in oklab, var(--color-base-200) 50%, transparent);
        }
    }
    .bg-base-200\/60 {
        background-color: var(--color-base-200);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-base-200\/60 {
            background-color: color-mix(in oklab, var(--color-base-200) 60%, transparent);
        }
    }
    .bg-base-200\/80 {
        background-color: var(--color-base-200);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-base-200\/80 {
            background-color: color-mix(in oklab, var(--color-base-200) 80%, transparent);
        }
    }
    .bg-base-300 {
        background-color: var(--color-base-300);
    }
    .bg-base-content\/2 {
        background-color: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-base-content\/2 {
            background-color: color-mix(in oklab, var(--color-base-content) 2%, transparent);
        }
    }
    .bg-base-content\/3 {
        background-color: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-base-content\/3 {
            background-color: color-mix(in oklab, var(--color-base-content) 3%, transparent);
        }
    }
    .bg-base-content\/5 {
        background-color: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-base-content\/5 {
            background-color: color-mix(in oklab, var(--color-base-content) 5%, transparent);
        }
    }
    .bg-base-content\/10 {
        background-color: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-base-content\/10 {
            background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
        }
    }
    .bg-base-content\/15 {
        background-color: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-base-content\/15 {
            background-color: color-mix(in oklab, var(--color-base-content) 15%, transparent);
        }
    }
    .bg-base-content\/20 {
        background-color: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-base-content\/20 {
            background-color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
        }
    }
    .bg-base-content\/25 {
        background-color: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-base-content\/25 {
            background-color: color-mix(in oklab, var(--color-base-content) 25%, transparent);
        }
    }
    .bg-base-content\/30 {
        background-color: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-base-content\/30 {
            background-color: color-mix(in oklab, var(--color-base-content) 30%, transparent);
        }
    }
    .bg-base-content\/35 {
        background-color: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-base-content\/35 {
            background-color: color-mix(in oklab, var(--color-base-content) 35%, transparent);
        }
    }
    .bg-base-content\/60 {
        background-color: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-base-content\/60 {
            background-color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
        }
    }
    .bg-black\/60 {
        background-color: #0009;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-black\/60 {
            background-color: color-mix(in oklab, var(--color-black) 60%, transparent);
        }
    }
    .bg-blue-400 {
        background-color: var(--color-blue-400);
    }
    .bg-blue-500\/5 {
        background-color: #3080ff0d;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-blue-500\/5 {
            background-color: color-mix(in oklab, var(--color-blue-500) 5%, transparent);
        }
    }
    .bg-blue-500\/50 {
        background-color: #3080ff80;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-blue-500\/50 {
            background-color: color-mix(in oklab, var(--color-blue-500) 50%, transparent);
        }
    }
    .bg-blue-500\/60 {
        background-color: #3080ff99;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-blue-500\/60 {
            background-color: color-mix(in oklab, var(--color-blue-500) 60%, transparent);
        }
    }
    .bg-cyan-400 {
        background-color: var(--color-cyan-400);
    }
    .bg-cyan-600\/5 {
        background-color: #0092b50d;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-cyan-600\/5 {
            background-color: color-mix(in oklab, var(--color-cyan-600) 5%, transparent);
        }
    }
    .bg-error,
    .bg-error\/5 {
        background-color: var(--color-error);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-error\/5 {
            background-color: color-mix(in oklab, var(--color-error) 5%, transparent);
        }
    }
    .bg-error\/10 {
        background-color: var(--color-error);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-error\/10 {
            background-color: color-mix(in oklab, var(--color-error) 10%, transparent);
        }
    }
    .bg-error\/30 {
        background-color: var(--color-error);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-error\/30 {
            background-color: color-mix(in oklab, var(--color-error) 30%, transparent);
        }
    }
    .bg-fuchsia-500\/5 {
        background-color: #e12afb0d;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-fuchsia-500\/5 {
            background-color: color-mix(in oklab, var(--color-fuchsia-500) 5%, transparent);
        }
    }
    .bg-green-400 {
        background-color: var(--color-green-400);
    }
    .bg-indigo-500\/5 {
        background-color: #625fff0d;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-indigo-500\/5 {
            background-color: color-mix(in oklab, var(--color-indigo-500) 5%, transparent);
        }
    }
    .bg-info\/5 {
        background-color: var(--color-info);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-info\/5 {
            background-color: color-mix(in oklab, var(--color-info) 5%, transparent);
        }
    }
    .bg-info\/30 {
        background-color: var(--color-info);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-info\/30 {
            background-color: color-mix(in oklab, var(--color-info) 30%, transparent);
        }
    }
    .bg-lime-400 {
        background-color: var(--color-lime-400);
    }
    .bg-neutral {
        background-color: var(--color-neutral);
    }
    .bg-orange-400 {
        background-color: var(--color-orange-400);
    }
    .bg-orange-500\/5 {
        background-color: #fe6e000d;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-orange-500\/5 {
            background-color: color-mix(in oklab, var(--color-orange-500) 5%, transparent);
        }
    }
    .bg-primary {
        background-color: var(--color-primary);
    }
    .bg-primary-content\/10 {
        background-color: var(--color-primary-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-primary-content\/10 {
            background-color: color-mix(in oklab, var(--color-primary-content) 10%, transparent);
        }
    }
    .bg-primary-content\/15 {
        background-color: var(--color-primary-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-primary-content\/15 {
            background-color: color-mix(in oklab, var(--color-primary-content) 15%, transparent);
        }
    }
    .bg-primary\/2 {
        background-color: var(--color-primary);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-primary\/2 {
            background-color: color-mix(in oklab, var(--color-primary) 2%, transparent);
        }
    }
    .bg-primary\/5 {
        background-color: var(--color-primary);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-primary\/5 {
            background-color: color-mix(in oklab, var(--color-primary) 5%, transparent);
        }
    }
    .bg-primary\/10 {
        background-color: var(--color-primary);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-primary\/10 {
            background-color: color-mix(in oklab, var(--color-primary) 10%, transparent);
        }
    }
    .bg-primary\/20 {
        background-color: var(--color-primary);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-primary\/20 {
            background-color: color-mix(in oklab, var(--color-primary) 20%, transparent);
        }
    }
    .bg-primary\/30 {
        background-color: var(--color-primary);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-primary\/30 {
            background-color: color-mix(in oklab, var(--color-primary) 30%, transparent);
        }
    }
    .bg-primary\/40 {
        background-color: var(--color-primary);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-primary\/40 {
            background-color: color-mix(in oklab, var(--color-primary) 40%, transparent);
        }
    }
    .bg-primary\/60 {
        background-color: var(--color-primary);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-primary\/60 {
            background-color: color-mix(in oklab, var(--color-primary) 60%, transparent);
        }
    }
    .bg-primary\/80 {
        background-color: var(--color-primary);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-primary\/80 {
            background-color: color-mix(in oklab, var(--color-primary) 80%, transparent);
        }
    }
    .bg-purple-400 {
        background-color: var(--color-purple-400);
    }
    .bg-purple-500\/5 {
        background-color: #ac4bff0d;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-purple-500\/5 {
            background-color: color-mix(in oklab, var(--color-purple-500) 5%, transparent);
        }
    }
    .bg-purple-500\/50 {
        background-color: #ac4bff80;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-purple-500\/50 {
            background-color: color-mix(in oklab, var(--color-purple-500) 50%, transparent);
        }
    }
    .bg-purple-500\/60 {
        background-color: #ac4bff99;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-purple-500\/60 {
            background-color: color-mix(in oklab, var(--color-purple-500) 60%, transparent);
        }
    }
    .bg-red-400 {
        background-color: var(--color-red-400);
    }
    .bg-secondary,
    .bg-secondary\/2 {
        background-color: var(--color-secondary);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-secondary\/2 {
            background-color: color-mix(in oklab, var(--color-secondary) 2%, transparent);
        }
    }
    .bg-secondary\/5 {
        background-color: var(--color-secondary);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-secondary\/5 {
            background-color: color-mix(in oklab, var(--color-secondary) 5%, transparent);
        }
    }
    .bg-secondary\/10 {
        background-color: var(--color-secondary);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-secondary\/10 {
            background-color: color-mix(in oklab, var(--color-secondary) 10%, transparent);
        }
    }
    .bg-secondary\/20 {
        background-color: var(--color-secondary);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-secondary\/20 {
            background-color: color-mix(in oklab, var(--color-secondary) 20%, transparent);
        }
    }
    .bg-secondary\/30 {
        background-color: var(--color-secondary);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-secondary\/30 {
            background-color: color-mix(in oklab, var(--color-secondary) 30%, transparent);
        }
    }
    .bg-secondary\/80 {
        background-color: var(--color-secondary);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-secondary\/80 {
            background-color: color-mix(in oklab, var(--color-secondary) 80%, transparent);
        }
    }
    .bg-success,
    .bg-success\/5 {
        background-color: var(--color-success);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-success\/5 {
            background-color: color-mix(in oklab, var(--color-success) 5%, transparent);
        }
    }
    .bg-success\/10 {
        background-color: var(--color-success);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-success\/10 {
            background-color: color-mix(in oklab, var(--color-success) 10%, transparent);
        }
    }
    .bg-success\/30 {
        background-color: var(--color-success);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-success\/30 {
            background-color: color-mix(in oklab, var(--color-success) 30%, transparent);
        }
    }
    .bg-teal-500\/5 {
        background-color: #00baa70d;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-teal-500\/5 {
            background-color: color-mix(in oklab, var(--color-teal-500) 5%, transparent);
        }
    }
    .bg-transparent {
        background-color: #0000;
    }
    .bg-violet-500\/5 {
        background-color: #8d54ff0d;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-violet-500\/5 {
            background-color: color-mix(in oklab, var(--color-violet-500) 5%, transparent);
        }
    }
    .bg-warning,
    .bg-warning\/5 {
        background-color: var(--color-warning);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-warning\/5 {
            background-color: color-mix(in oklab, var(--color-warning) 5%, transparent);
        }
    }
    .bg-warning\/20 {
        background-color: var(--color-warning);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-warning\/20 {
            background-color: color-mix(in oklab, var(--color-warning) 20%, transparent);
        }
    }
    .bg-warning\/30 {
        background-color: var(--color-warning);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-warning\/30 {
            background-color: color-mix(in oklab, var(--color-warning) 30%, transparent);
        }
    }
    .bg-white {
        background-color: var(--color-white);
    }
    .bg-white\/30 {
        background-color: #ffffff4d;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-white\/30 {
            background-color: color-mix(in oklab, var(--color-white) 30%, transparent);
        }
    }
    .bg-white\/40 {
        background-color: #fff6;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-white\/40 {
            background-color: color-mix(in oklab, var(--color-white) 40%, transparent);
        }
    }
    .bg-white\/60 {
        background-color: #fff9;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-white\/60 {
            background-color: color-mix(in oklab, var(--color-white) 60%, transparent);
        }
    }
    .bg-yellow-400 {
        background-color: var(--color-yellow-400);
    }
    .bg-linear-to-b {
        --tw-gradient-position: to bottom;
    }
    @supports (background-image: linear-gradient(in lab, red, red)) {
        .bg-linear-to-b {
            --tw-gradient-position: to bottom in oklab;
        }
    }
    .bg-linear-to-b {
        background-image: linear-gradient(var(--tw-gradient-stops));
    }
    .bg-linear-to-bl {
        --tw-gradient-position: to bottom left;
    }
    @supports (background-image: linear-gradient(in lab, red, red)) {
        .bg-linear-to-bl {
            --tw-gradient-position: to bottom left in oklab;
        }
    }
    .bg-linear-to-bl {
        background-image: linear-gradient(var(--tw-gradient-stops));
    }
    .bg-linear-to-br {
        --tw-gradient-position: to bottom right;
    }
    @supports (background-image: linear-gradient(in lab, red, red)) {
        .bg-linear-to-br {
            --tw-gradient-position: to bottom right in oklab;
        }
    }
    .bg-linear-to-br {
        background-image: linear-gradient(var(--tw-gradient-stops));
    }
    .bg-linear-to-l {
        --tw-gradient-position: to left;
    }
    @supports (background-image: linear-gradient(in lab, red, red)) {
        .bg-linear-to-l {
            --tw-gradient-position: to left in oklab;
        }
    }
    .bg-linear-to-l {
        background-image: linear-gradient(var(--tw-gradient-stops));
    }
    .bg-linear-to-r {
        --tw-gradient-position: to right;
    }
    @supports (background-image: linear-gradient(in lab, red, red)) {
        .bg-linear-to-r {
            --tw-gradient-position: to right in oklab;
        }
    }
    .bg-linear-to-r {
        background-image: linear-gradient(var(--tw-gradient-stops));
    }
    .bg-linear-to-t {
        --tw-gradient-position: to top;
    }
    @supports (background-image: linear-gradient(in lab, red, red)) {
        .bg-linear-to-t {
            --tw-gradient-position: to top in oklab;
        }
    }
    .bg-linear-to-t {
        background-image: linear-gradient(var(--tw-gradient-stops));
    }
    .bg-linear-to-tl {
        --tw-gradient-position: to top left;
    }
    @supports (background-image: linear-gradient(in lab, red, red)) {
        .bg-linear-to-tl {
            --tw-gradient-position: to top left in oklab;
        }
    }
    .bg-linear-to-tl {
        background-image: linear-gradient(var(--tw-gradient-stops));
    }
    .bg-linear-to-tr {
        --tw-gradient-position: to top right;
    }
    @supports (background-image: linear-gradient(in lab, red, red)) {
        .bg-linear-to-tr {
            --tw-gradient-position: to top right in oklab;
        }
    }
    .bg-linear-to-tr {
        background-image: linear-gradient(var(--tw-gradient-stops));
    }
    .bg-gradient-to-b {
        --tw-gradient-position: to bottom in oklab;
        background-image: linear-gradient(var(--tw-gradient-stops));
    }
    .bg-gradient-to-r {
        --tw-gradient-position: to right in oklab;
        background-image: linear-gradient(var(--tw-gradient-stops));
    }
    .bg-gradient-to-tr {
        --tw-gradient-position: to top right in oklab;
        background-image: linear-gradient(var(--tw-gradient-stops));
    }
    .bg-\[url\(\'\/images\/landing\/testimonial-background\.svg\'\)\] {
        background-image: url(../images/landing/testimonial-background.svg);
    }
    .bg-\[url\(\/images\/apps\/ecommerce\/products\/9\.jpg\)\] {
        background-image: url(../images/apps/ecommerce/products/9.jpg);
    }
    .bg-\[url\(\/images\/landing\/hero-bg-gradient\.png\)\] {
        background-image: url(../images/landing/hero-bg-gradient.png);
    }
    .bg-\[url\(\/images\/landing\/showcase-bg-element\.png\)\] {
        background-image: url(../images/landing/showcase-bg-element.png);
    }
    .bg-\[url\(\/images\/landing\/showcase-bg-gradient\.png\)\] {
        background-image: url(../images/landing/showcase-bg-gradient.png);
    }
    .from-\(--root-bg\) {
        --tw-gradient-from: var(--root-bg);
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .from-base-100 {
        --tw-gradient-from: var(--color-base-100);
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .from-base-100\/60 {
        --tw-gradient-from: var(--color-base-100);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .from-base-100\/60 {
            --tw-gradient-from: color-mix(in oklab, var(--color-base-100) 60%, transparent);
        }
    }
    .from-base-100\/60 {
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .from-base-200 {
        --tw-gradient-from: var(--color-base-200);
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .from-base-content {
        --tw-gradient-from: var(--color-base-content);
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .from-black {
        --tw-gradient-from: var(--color-black);
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .from-blue-600\/80 {
        --tw-gradient-from: #155dfccc;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .from-blue-600\/80 {
            --tw-gradient-from: color-mix(in oklab, var(--color-blue-600) 80%, transparent);
        }
    }
    .from-blue-600\/80 {
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .from-cyan-600 {
        --tw-gradient-from: var(--color-cyan-600);
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .from-error {
        --tw-gradient-from: var(--color-error);
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .from-green-500\/80 {
        --tw-gradient-from: #00c758cc;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .from-green-500\/80 {
            --tw-gradient-from: color-mix(in oklab, var(--color-green-500) 80%, transparent);
        }
    }
    .from-green-500\/80 {
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .from-green-600 {
        --tw-gradient-from: var(--color-green-600);
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .from-orange-500\/80 {
        --tw-gradient-from: #fe6e00cc;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .from-orange-500\/80 {
            --tw-gradient-from: color-mix(in oklab, var(--color-orange-500) 80%, transparent);
        }
    }
    .from-orange-500\/80 {
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .from-primary {
        --tw-gradient-from: var(--color-primary);
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .from-primary\/3 {
        --tw-gradient-from: var(--color-primary);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .from-primary\/3 {
            --tw-gradient-from: color-mix(in oklab, var(--color-primary) 3%, transparent);
        }
    }
    .from-primary\/3 {
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .from-primary\/5 {
        --tw-gradient-from: var(--color-primary);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .from-primary\/5 {
            --tw-gradient-from: color-mix(in oklab, var(--color-primary) 5%, transparent);
        }
    }
    .from-primary\/5 {
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .from-primary\/80 {
        --tw-gradient-from: var(--color-primary);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .from-primary\/80 {
            --tw-gradient-from: color-mix(in oklab, var(--color-primary) 80%, transparent);
        }
    }
    .from-primary\/80 {
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .from-purple-500 {
        --tw-gradient-from: var(--color-purple-500);
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .from-purple-500\/80 {
        --tw-gradient-from: #ac4bffcc;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .from-purple-500\/80 {
            --tw-gradient-from: color-mix(in oklab, var(--color-purple-500) 80%, transparent);
        }
    }
    .from-purple-500\/80 {
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .from-red-500\/80 {
        --tw-gradient-from: #fb2c36cc;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .from-red-500\/80 {
            --tw-gradient-from: color-mix(in oklab, var(--color-red-500) 80%, transparent);
        }
    }
    .from-red-500\/80 {
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .from-secondary {
        --tw-gradient-from: var(--color-secondary);
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .from-secondary\/80 {
        --tw-gradient-from: var(--color-secondary);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .from-secondary\/80 {
            --tw-gradient-from: color-mix(in oklab, var(--color-secondary) 80%, transparent);
        }
    }
    .from-secondary\/80 {
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .from-success {
        --tw-gradient-from: var(--color-success);
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .from-success\/80 {
        --tw-gradient-from: var(--color-success);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .from-success\/80 {
            --tw-gradient-from: color-mix(in oklab, var(--color-success) 80%, transparent);
        }
    }
    .from-success\/80 {
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .from-teal-500\/80 {
        --tw-gradient-from: #00baa7cc;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .from-teal-500\/80 {
            --tw-gradient-from: color-mix(in oklab, var(--color-teal-500) 80%, transparent);
        }
    }
    .from-teal-500\/80 {
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .from-transparent {
        --tw-gradient-from: transparent;
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .from-warning {
        --tw-gradient-from: var(--color-warning);
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .from-yellow-600\/80 {
        --tw-gradient-from: #cd8900cc;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .from-yellow-600\/80 {
            --tw-gradient-from: color-mix(in oklab, var(--color-yellow-600) 80%, transparent);
        }
    }
    .from-yellow-600\/80 {
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .from-40\% {
        --tw-gradient-from-position: 40%;
    }
    .from-\[50\%\] {
        --tw-gradient-from-position: 50%;
    }
    .via-base-200\/80 {
        --tw-gradient-via: var(--color-base-200);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .via-base-200\/80 {
            --tw-gradient-via: color-mix(in oklab, var(--color-base-200) 80%, transparent);
        }
    }
    .via-base-200\/80 {
        --tw-gradient-via-stops:
            var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-via) var(--tw-gradient-via-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position);
        --tw-gradient-stops: var(--tw-gradient-via-stops);
    }
    .via-black\/20 {
        --tw-gradient-via: #0003;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .via-black\/20 {
            --tw-gradient-via: color-mix(in oklab, var(--color-black) 20%, transparent);
        }
    }
    .via-black\/20 {
        --tw-gradient-via-stops:
            var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-via) var(--tw-gradient-via-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position);
        --tw-gradient-stops: var(--tw-gradient-via-stops);
    }
    .via-blue-500 {
        --tw-gradient-via: var(--color-blue-500);
        --tw-gradient-via-stops:
            var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-via) var(--tw-gradient-via-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position);
        --tw-gradient-stops: var(--tw-gradient-via-stops);
    }
    .via-emerald-500 {
        --tw-gradient-via: var(--color-emerald-500);
        --tw-gradient-via-stops:
            var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-via) var(--tw-gradient-via-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position);
        --tw-gradient-stops: var(--tw-gradient-via-stops);
    }
    .via-\[80\%\] {
        --tw-gradient-via-position: 80%;
    }
    .to-base-100 {
        --tw-gradient-to: var(--color-base-100);
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .to-base-200\/20 {
        --tw-gradient-to: var(--color-base-200);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .to-base-200\/20 {
            --tw-gradient-to: color-mix(in oklab, var(--color-base-200) 20%, transparent);
        }
    }
    .to-base-200\/20 {
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .to-base-200\/60 {
        --tw-gradient-to: var(--color-base-200);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .to-base-200\/60 {
            --tw-gradient-to: color-mix(in oklab, var(--color-base-200) 60%, transparent);
        }
    }
    .to-base-200\/60 {
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .to-base-content\/15 {
        --tw-gradient-to: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .to-base-content\/15 {
            --tw-gradient-to: color-mix(in oklab, var(--color-base-content) 15%, transparent);
        }
    }
    .to-base-content\/15 {
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .to-base-content\/75 {
        --tw-gradient-to: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .to-base-content\/75 {
            --tw-gradient-to: color-mix(in oklab, var(--color-base-content) 75%, transparent);
        }
    }
    .to-base-content\/75 {
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .to-black\/80 {
        --tw-gradient-to: #000c;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .to-black\/80 {
            --tw-gradient-to: color-mix(in oklab, var(--color-black) 80%, transparent);
        }
    }
    .to-black\/80 {
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .to-blue-600\/50 {
        --tw-gradient-to: #155dfc80;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .to-blue-600\/50 {
            --tw-gradient-to: color-mix(in oklab, var(--color-blue-600) 50%, transparent);
        }
    }
    .to-blue-600\/50 {
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .to-cyan-600 {
        --tw-gradient-to: var(--color-cyan-600);
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .to-error\/80 {
        --tw-gradient-to: var(--color-error);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .to-error\/80 {
            --tw-gradient-to: color-mix(in oklab, var(--color-error) 80%, transparent);
        }
    }
    .to-error\/80 {
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .to-green-500\/50 {
        --tw-gradient-to: #00c75880;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .to-green-500\/50 {
            --tw-gradient-to: color-mix(in oklab, var(--color-green-500) 50%, transparent);
        }
    }
    .to-green-500\/50 {
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .to-indigo-500 {
        --tw-gradient-to: var(--color-indigo-500);
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .to-orange-500\/60 {
        --tw-gradient-to: #fe6e0099;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .to-orange-500\/60 {
            --tw-gradient-to: color-mix(in oklab, var(--color-orange-500) 60%, transparent);
        }
    }
    .to-orange-500\/60 {
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .to-primary {
        --tw-gradient-to: var(--color-primary);
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .to-primary\/60 {
        --tw-gradient-to: var(--color-primary);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .to-primary\/60 {
            --tw-gradient-to: color-mix(in oklab, var(--color-primary) 60%, transparent);
        }
    }
    .to-primary\/60 {
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .to-primary\/75 {
        --tw-gradient-to: var(--color-primary);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .to-primary\/75 {
            --tw-gradient-to: color-mix(in oklab, var(--color-primary) 75%, transparent);
        }
    }
    .to-primary\/75 {
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .to-primary\/80 {
        --tw-gradient-to: var(--color-primary);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .to-primary\/80 {
            --tw-gradient-to: color-mix(in oklab, var(--color-primary) 80%, transparent);
        }
    }
    .to-primary\/80 {
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .to-primary\/85 {
        --tw-gradient-to: var(--color-primary);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .to-primary\/85 {
            --tw-gradient-to: color-mix(in oklab, var(--color-primary) 85%, transparent);
        }
    }
    .to-primary\/85 {
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .to-purple-400\/60 {
        --tw-gradient-to: #c07eff99;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .to-purple-400\/60 {
            --tw-gradient-to: color-mix(in oklab, var(--color-purple-400) 60%, transparent);
        }
    }
    .to-purple-400\/60 {
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .to-red-400\/60 {
        --tw-gradient-to: #ff656899;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .to-red-400\/60 {
            --tw-gradient-to: color-mix(in oklab, var(--color-red-400) 60%, transparent);
        }
    }
    .to-red-400\/60 {
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .to-secondary {
        --tw-gradient-to: var(--color-secondary);
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .to-secondary\/5 {
        --tw-gradient-to: var(--color-secondary);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .to-secondary\/5 {
            --tw-gradient-to: color-mix(in oklab, var(--color-secondary) 5%, transparent);
        }
    }
    .to-secondary\/5 {
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .to-secondary\/60 {
        --tw-gradient-to: var(--color-secondary);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .to-secondary\/60 {
            --tw-gradient-to: color-mix(in oklab, var(--color-secondary) 60%, transparent);
        }
    }
    .to-secondary\/60 {
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .to-secondary\/80 {
        --tw-gradient-to: var(--color-secondary);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .to-secondary\/80 {
            --tw-gradient-to: color-mix(in oklab, var(--color-secondary) 80%, transparent);
        }
    }
    .to-secondary\/80 {
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .to-success\/60 {
        --tw-gradient-to: var(--color-success);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .to-success\/60 {
            --tw-gradient-to: color-mix(in oklab, var(--color-success) 60%, transparent);
        }
    }
    .to-success\/60 {
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .to-success\/80 {
        --tw-gradient-to: var(--color-success);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .to-success\/80 {
            --tw-gradient-to: color-mix(in oklab, var(--color-success) 80%, transparent);
        }
    }
    .to-success\/80 {
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .to-teal-400\/60 {
        --tw-gradient-to: #00d3bd99;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .to-teal-400\/60 {
            --tw-gradient-to: color-mix(in oklab, var(--color-teal-400) 60%, transparent);
        }
    }
    .to-teal-400\/60 {
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .to-teal-500 {
        --tw-gradient-to: var(--color-teal-500);
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .to-transparent {
        --tw-gradient-to: transparent;
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .to-warning\/80 {
        --tw-gradient-to: var(--color-warning);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .to-warning\/80 {
            --tw-gradient-to: color-mix(in oklab, var(--color-warning) 80%, transparent);
        }
    }
    .to-warning\/80 {
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .to-yellow-500\/60 {
        --tw-gradient-to: #edb20099;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .to-yellow-500\/60 {
            --tw-gradient-to: color-mix(in oklab, var(--color-yellow-500) 60%, transparent);
        }
    }
    .to-yellow-500\/60 {
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .to-\[20\%\] {
        --tw-gradient-to-position: 20%;
    }
    .to-\[80\%\] {
        --tw-gradient-to-position: 80%;
    }
    .loading-bars {
        -webkit-mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Crect x='1' y='1' width='6' height='22'%3E%3Canimate attributeName='y' values='1;5;1' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite'/%3E%3Canimate attributeName='height' values='22;14;22' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite'/%3E%3Canimate attributeName='opacity' values='1;0.2;1' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite'/%3E%3C/rect%3E%3Crect x='9' y='1' width='6' height='22'%3E%3Canimate attributeName='y' values='1;5;1' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite' begin='-0.65s'/%3E%3Canimate attributeName='height' values='22;14;22' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite' begin='-0.65s'/%3E%3Canimate attributeName='opacity' values='1;0.2;1' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite' begin='-0.65s'/%3E%3C/rect%3E%3Crect x='17' y='1' width='6' height='22'%3E%3Canimate attributeName='y' values='1;5;1' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite' begin='-0.5s'/%3E%3Canimate attributeName='height' values='22;14;22' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite' begin='-0.5s'/%3E%3Canimate attributeName='opacity' values='1;0.2;1' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite' begin='-0.5s'/%3E%3C/rect%3E%3C/svg%3E");
        mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Crect x='1' y='1' width='6' height='22'%3E%3Canimate attributeName='y' values='1;5;1' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite'/%3E%3Canimate attributeName='height' values='22;14;22' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite'/%3E%3Canimate attributeName='opacity' values='1;0.2;1' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite'/%3E%3C/rect%3E%3Crect x='9' y='1' width='6' height='22'%3E%3Canimate attributeName='y' values='1;5;1' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite' begin='-0.65s'/%3E%3Canimate attributeName='height' values='22;14;22' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite' begin='-0.65s'/%3E%3Canimate attributeName='opacity' values='1;0.2;1' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite' begin='-0.65s'/%3E%3C/rect%3E%3Crect x='17' y='1' width='6' height='22'%3E%3Canimate attributeName='y' values='1;5;1' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite' begin='-0.5s'/%3E%3Canimate attributeName='height' values='22;14;22' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite' begin='-0.5s'/%3E%3Canimate attributeName='opacity' values='1;0.2;1' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite' begin='-0.5s'/%3E%3C/rect%3E%3C/svg%3E");
    }
    .loading-dots {
        -webkit-mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Ccircle cx='4' cy='12' r='3'%3E%3Canimate attributeName='cy' values='12;6;12;12' keyTimes='0;0.286;0.571;1' dur='1.05s' repeatCount='indefinite' keySplines='.33,0,.66,.33;.33,.66,.66,1'/%3E%3C/circle%3E%3Ccircle cx='12' cy='12' r='3'%3E%3Canimate attributeName='cy' values='12;6;12;12' keyTimes='0;0.286;0.571;1' dur='1.05s' repeatCount='indefinite' keySplines='.33,0,.66,.33;.33,.66,.66,1' begin='0.1s'/%3E%3C/circle%3E%3Ccircle cx='20' cy='12' r='3'%3E%3Canimate attributeName='cy' values='12;6;12;12' keyTimes='0;0.286;0.571;1' dur='1.05s' repeatCount='indefinite' keySplines='.33,0,.66,.33;.33,.66,.66,1' begin='0.2s'/%3E%3C/circle%3E%3C/svg%3E");
        mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Ccircle cx='4' cy='12' r='3'%3E%3Canimate attributeName='cy' values='12;6;12;12' keyTimes='0;0.286;0.571;1' dur='1.05s' repeatCount='indefinite' keySplines='.33,0,.66,.33;.33,.66,.66,1'/%3E%3C/circle%3E%3Ccircle cx='12' cy='12' r='3'%3E%3Canimate attributeName='cy' values='12;6;12;12' keyTimes='0;0.286;0.571;1' dur='1.05s' repeatCount='indefinite' keySplines='.33,0,.66,.33;.33,.66,.66,1' begin='0.1s'/%3E%3C/circle%3E%3Ccircle cx='20' cy='12' r='3'%3E%3Canimate attributeName='cy' values='12;6;12;12' keyTimes='0;0.286;0.571;1' dur='1.05s' repeatCount='indefinite' keySplines='.33,0,.66,.33;.33,.66,.66,1' begin='0.2s'/%3E%3C/circle%3E%3C/svg%3E");
    }
    .loading-infinity {
        -webkit-mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' style='shape-rendering:auto;' width='200px' height='200px' viewBox='0 0 100 100' preserveAspectRatio='xMidYMid'%3E%3Cpath fill='none' stroke='black' stroke-width='10' stroke-dasharray='205.271 51.318' d='M24.3 30C11.4 30 5 43.3 5 50s6.4 20 19.3 20c19.3 0 32.1-40 51.4-40C88.6 30 95 43.3 95 50s-6.4 20-19.3 20C56.4 70 43.6 30 24.3 30z' stroke-linecap='round' style='transform:scale(0.8);transform-origin:50px 50px'%3E%3Canimate attributeName='stroke-dashoffset' repeatCount='indefinite' dur='2s' keyTimes='0;1' values='0;256.589'/%3E%3C/path%3E%3C/svg%3E");
        mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' style='shape-rendering:auto;' width='200px' height='200px' viewBox='0 0 100 100' preserveAspectRatio='xMidYMid'%3E%3Cpath fill='none' stroke='black' stroke-width='10' stroke-dasharray='205.271 51.318' d='M24.3 30C11.4 30 5 43.3 5 50s6.4 20 19.3 20c19.3 0 32.1-40 51.4-40C88.6 30 95 43.3 95 50s-6.4 20-19.3 20C56.4 70 43.6 30 24.3 30z' stroke-linecap='round' style='transform:scale(0.8);transform-origin:50px 50px'%3E%3Canimate attributeName='stroke-dashoffset' repeatCount='indefinite' dur='2s' keyTimes='0;1' values='0;256.589'/%3E%3C/path%3E%3C/svg%3E");
    }
    .loading-ring {
        -webkit-mask-image: url("data:image/svg+xml,%3Csvg width='44' height='44' viewBox='0 0 44 44' xmlns='http://www.w3.org/2000/svg' stroke='white'%3E%3Cg fill='none' fill-rule='evenodd' stroke-width='2'%3E%3Ccircle cx='22' cy='22' r='1'%3E%3Canimate attributeName='r' begin='0s' dur='1.8s' values='1;20' calcMode='spline' keyTimes='0;1' keySplines='0.165,0.84,0.44,1' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-opacity' begin='0s' dur='1.8s' values='1;0' calcMode='spline' keyTimes='0;1' keySplines='0.3,0.61,0.355,1' repeatCount='indefinite'/%3E%3C/circle%3E%3Ccircle cx='22' cy='22' r='1'%3E%3Canimate attributeName='r' begin='-0.9s' dur='1.8s' values='1;20' calcMode='spline' keyTimes='0;1' keySplines='0.165,0.84,0.44,1' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-opacity' begin='-0.9s' dur='1.8s' values='1;0' calcMode='spline' keyTimes='0;1' keySplines='0.3,0.61,0.355,1' repeatCount='indefinite'/%3E%3C/circle%3E%3C/g%3E%3C/svg%3E");
        mask-image: url("data:image/svg+xml,%3Csvg width='44' height='44' viewBox='0 0 44 44' xmlns='http://www.w3.org/2000/svg' stroke='white'%3E%3Cg fill='none' fill-rule='evenodd' stroke-width='2'%3E%3Ccircle cx='22' cy='22' r='1'%3E%3Canimate attributeName='r' begin='0s' dur='1.8s' values='1;20' calcMode='spline' keyTimes='0;1' keySplines='0.165,0.84,0.44,1' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-opacity' begin='0s' dur='1.8s' values='1;0' calcMode='spline' keyTimes='0;1' keySplines='0.3,0.61,0.355,1' repeatCount='indefinite'/%3E%3C/circle%3E%3Ccircle cx='22' cy='22' r='1'%3E%3Canimate attributeName='r' begin='-0.9s' dur='1.8s' values='1;20' calcMode='spline' keyTimes='0;1' keySplines='0.165,0.84,0.44,1' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-opacity' begin='-0.9s' dur='1.8s' values='1;0' calcMode='spline' keyTimes='0;1' keySplines='0.3,0.61,0.355,1' repeatCount='indefinite'/%3E%3C/circle%3E%3C/g%3E%3C/svg%3E");
    }
    .mask-diamond {
        -webkit-mask-image: url("data:image/svg+xml,%3csvg width='200' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m100 0 100 100-100 100L0 100z' fill-rule='evenodd'/%3e%3c/svg%3e");
        mask-image: url("data:image/svg+xml,%3csvg width='200' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m100 0 100 100-100 100L0 100z' fill-rule='evenodd'/%3e%3c/svg%3e");
    }
    .mask-heart {
        -webkit-mask-image: url("data:image/svg+xml,%3csvg width='200' height='185' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M100 184.606a15.384 15.384 0 0 1-8.653-2.678C53.565 156.28 37.205 138.695 28.182 127.7 8.952 104.264-.254 80.202.005 54.146.308 24.287 24.264 0 53.406 0c21.192 0 35.869 11.937 44.416 21.879a2.884 2.884 0 0 0 4.356 0C110.725 11.927 125.402 0 146.594 0c29.142 0 53.098 24.287 53.4 54.151.26 26.061-8.956 50.122-28.176 73.554-9.023 10.994-25.383 28.58-63.165 54.228a15.384 15.384 0 0 1-8.653 2.673Z' fill='black' fill-rule='nonzero'/%3e%3c/svg%3e");
        mask-image: url("data:image/svg+xml,%3csvg width='200' height='185' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M100 184.606a15.384 15.384 0 0 1-8.653-2.678C53.565 156.28 37.205 138.695 28.182 127.7 8.952 104.264-.254 80.202.005 54.146.308 24.287 24.264 0 53.406 0c21.192 0 35.869 11.937 44.416 21.879a2.884 2.884 0 0 0 4.356 0C110.725 11.927 125.402 0 146.594 0c29.142 0 53.098 24.287 53.4 54.151.26 26.061-8.956 50.122-28.176 73.554-9.023 10.994-25.383 28.58-63.165 54.228a15.384 15.384 0 0 1-8.653 2.673Z' fill='black' fill-rule='nonzero'/%3e%3c/svg%3e");
    }
    .mask-hexagon-2 {
        -webkit-mask-image: url("data:image/svg+xml,%3csvg width='200' height='182' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M64.786 181.4c-9.196 0-20.063-6.687-25.079-14.21L3.762 105.33c-5.016-8.36-5.016-20.9 0-29.259l35.945-61.86C44.723 5.851 55.59 0 64.786 0h71.055c9.196 0 20.063 6.688 25.079 14.211l35.945 61.86c4.18 8.36 4.18 20.899 0 29.258l-35.945 61.86c-4.18 8.36-15.883 14.211-25.079 14.211H64.786Z' fill='black' fill-rule='nonzero'/%3e%3c/svg%3e");
        mask-image: url("data:image/svg+xml,%3csvg width='200' height='182' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M64.786 181.4c-9.196 0-20.063-6.687-25.079-14.21L3.762 105.33c-5.016-8.36-5.016-20.9 0-29.259l35.945-61.86C44.723 5.851 55.59 0 64.786 0h71.055c9.196 0 20.063 6.688 25.079 14.211l35.945 61.86c4.18 8.36 4.18 20.899 0 29.258l-35.945 61.86c-4.18 8.36-15.883 14.211-25.079 14.211H64.786Z' fill='black' fill-rule='nonzero'/%3e%3c/svg%3e");
    }
    .mask-pentagon {
        -webkit-mask-image: url("data:image/svg+xml,%3csvg width='192' height='181' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m96 0 95.106 69.098-36.327 111.804H37.22L.894 69.098z' fill-rule='evenodd'/%3e%3c/svg%3e");
        mask-image: url("data:image/svg+xml,%3csvg width='192' height='181' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m96 0 95.106 69.098-36.327 111.804H37.22L.894 69.098z' fill-rule='evenodd'/%3e%3c/svg%3e");
    }
    .mask-squircle {
        -webkit-mask-image: url("data:image/svg+xml,%3csvg width='200' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M100 0C20 0 0 20 0 100s20 100 100 100 100-20 100-100S180 0 100 0Z'/%3e%3c/svg%3e");
        mask-image: url("data:image/svg+xml,%3csvg width='200' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M100 0C20 0 0 20 0 100s20 100 100 100 100-20 100-100S180 0 100 0Z'/%3e%3c/svg%3e");
    }
    .mask-star-2 {
        -webkit-mask-image: url("data:image/svg+xml,%3csvg width='192' height='180' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m96 153.044-58.779 26.243 7.02-63.513L.894 68.481l63.117-13.01L96 0l31.989 55.472 63.117 13.01-43.347 47.292 7.02 63.513z' fill-rule='evenodd'/%3e%3c/svg%3e");
        mask-image: url("data:image/svg+xml,%3csvg width='192' height='180' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m96 153.044-58.779 26.243 7.02-63.513L.894 68.481l63.117-13.01L96 0l31.989 55.472 63.117 13.01-43.347 47.292 7.02 63.513z' fill-rule='evenodd'/%3e%3c/svg%3e");
    }
    .\[background-size\:200\%_60\%\] {
        background-size: 200% 60%;
    }
    .bg-cover {
        background-size: cover;
    }
    .bg-clip-text {
        -webkit-background-clip: text;
        background-clip: text;
    }
    .bg-center {
        background-position: 50%;
    }
    .bg-no-repeat {
        background-repeat: no-repeat;
    }
    .fill-base-content\/15 {
        fill: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .fill-base-content\/15 {
            fill: color-mix(in oklab, var(--color-base-content) 15%, transparent);
        }
    }
    .fill-base-content\/20 {
        fill: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .fill-base-content\/20 {
            fill: color-mix(in oklab, var(--color-base-content) 20%, transparent);
        }
    }
    .fill-base-content\/30 {
        fill: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .fill-base-content\/30 {
            fill: color-mix(in oklab, var(--color-base-content) 30%, transparent);
        }
    }
    .fill-base-content\/35 {
        fill: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .fill-base-content\/35 {
            fill: color-mix(in oklab, var(--color-base-content) 35%, transparent);
        }
    }
    .fill-base-content\/45 {
        fill: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .fill-base-content\/45 {
            fill: color-mix(in oklab, var(--color-base-content) 45%, transparent);
        }
    }
    .fill-base-content\/50 {
        fill: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .fill-base-content\/50 {
            fill: color-mix(in oklab, var(--color-base-content) 50%, transparent);
        }
    }
    .fill-base-content\/55 {
        fill: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .fill-base-content\/55 {
            fill: color-mix(in oklab, var(--color-base-content) 55%, transparent);
        }
    }
    .fill-base-content\/60 {
        fill: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .fill-base-content\/60 {
            fill: color-mix(in oklab, var(--color-base-content) 60%, transparent);
        }
    }
    .stroke-base-100\/60 {
        stroke: var(--color-base-100);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .stroke-base-100\/60 {
            stroke: color-mix(in oklab, var(--color-base-100) 60%, transparent);
        }
    }
    .stroke-base-content\/20 {
        stroke: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .stroke-base-content\/20 {
            stroke: color-mix(in oklab, var(--color-base-content) 20%, transparent);
        }
    }
    .stroke-base-content\/30 {
        stroke: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .stroke-base-content\/30 {
            stroke: color-mix(in oklab, var(--color-base-content) 30%, transparent);
        }
    }
    .stroke-base-content\/40 {
        stroke: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .stroke-base-content\/40 {
            stroke: color-mix(in oklab, var(--color-base-content) 40%, transparent);
        }
    }
    .object-cover {
        object-fit: cover;
    }
    .checkbox-sm {
        --size: calc(var(--size-selector, 0.25rem) * 5);
        padding: 0.1875rem;
    }
    .radio-sm {
        padding: 0.1875rem;
    }
    .radio-sm[type="radio"] {
        --size: calc(var(--size-selector, 0.25rem) * 5);
    }
    .\!p-0 {
        padding: calc(var(--spacing) * 0) !important;
    }
    .p-0 {
        padding: calc(var(--spacing) * 0);
    }
    .p-0\.5 {
        padding: calc(var(--spacing) * 0.5);
    }
    .p-1 {
        padding: calc(var(--spacing) * 1);
    }
    .p-1\.5 {
        padding: calc(var(--spacing) * 1.5);
    }
    .p-2 {
        padding: calc(var(--spacing) * 2);
    }
    .p-2\.5 {
        padding: calc(var(--spacing) * 2.5);
    }
    .p-3 {
        padding: calc(var(--spacing) * 3);
    }
    .p-4 {
        padding: calc(var(--spacing) * 4);
    }
    .p-5 {
        padding: calc(var(--spacing) * 5);
    }
    .p-6 {
        padding: calc(var(--spacing) * 6);
    }
    .p-8 {
        padding: calc(var(--spacing) * 8);
    }
    .p-10 {
        padding: calc(var(--spacing) * 10);
    }
    .p-28 {
        padding: calc(var(--spacing) * 28);
    }
    .p-px {
        padding: 1px;
    }
    .menu-title {
        color: var(--color-base-content);
        padding-block: 0.5rem;
        padding-inline: 0.75rem;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .menu-title {
            color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
        }
    }
    .menu-title {
        font-size: 0.875rem;
        font-weight: 600;
    }
    .select-sm {
        --size: calc(var(--size-field, 0.25rem) * 8);
        font-size: 0.75rem;
    }
    .select-sm option {
        padding-block: 0.25rem;
        padding-inline: 0.625rem;
    }
    .select-xs {
        --size: calc(var(--size-field, 0.25rem) * 6);
        font-size: 0.6875rem;
    }
    .select-xs option {
        padding-block: 0.25rem;
        padding-inline: 0.5rem;
    }
    .badge-sm {
        --size: calc(var(--size-selector, 0.25rem) * 5);
        padding-inline: calc(0.25rem * 2.5 - var(--border));
        font-size: 0.75rem;
    }
    .badge-xs {
        --size: calc(var(--size-selector, 0.25rem) * 4);
        padding-inline: calc(0.25rem * 2 - var(--border));
        font-size: 0.625rem;
    }
    .px-0 {
        padding-inline: calc(var(--spacing) * 0);
    }
    .px-0\.5 {
        padding-inline: calc(var(--spacing) * 0.5);
    }
    .px-1 {
        padding-inline: calc(var(--spacing) * 1);
    }
    .px-1\.5 {
        padding-inline: calc(var(--spacing) * 1.5);
    }
    .px-2 {
        padding-inline: calc(var(--spacing) * 2);
    }
    .px-2\.5 {
        padding-inline: calc(var(--spacing) * 2.5);
    }
    .px-3 {
        padding-inline: calc(var(--spacing) * 3);
    }
    .px-3\.5 {
        padding-inline: calc(var(--spacing) * 3.5);
    }
    .px-4 {
        padding-inline: calc(var(--spacing) * 4);
    }
    .px-5 {
        padding-inline: calc(var(--spacing) * 5);
    }
    .px-6 {
        padding-inline: calc(var(--spacing) * 6);
    }
    .px-7 {
        padding-inline: calc(var(--spacing) * 7);
    }
    .py-0 {
        padding-block: calc(var(--spacing) * 0);
    }
    .py-0\.5 {
        padding-block: calc(var(--spacing) * 0.5);
    }
    .py-1 {
        padding-block: calc(var(--spacing) * 1);
    }
    .py-1\.5 {
        padding-block: calc(var(--spacing) * 1.5);
    }
    .py-2 {
        padding-block: calc(var(--spacing) * 2);
    }
    .py-2\.5 {
        padding-block: calc(var(--spacing) * 2.5);
    }
    .py-3 {
        padding-block: calc(var(--spacing) * 3);
    }
    .py-4 {
        padding-block: calc(var(--spacing) * 4);
    }
    .py-5 {
        padding-block: calc(var(--spacing) * 5);
    }
    .py-6 {
        padding-block: calc(var(--spacing) * 6);
    }
    .py-8 {
        padding-block: calc(var(--spacing) * 8);
    }
    .py-28 {
        padding-block: calc(var(--spacing) * 28);
    }
    .ps-1 {
        padding-inline-start: calc(var(--spacing) * 1);
    }
    .ps-2\.5 {
        padding-inline-start: calc(var(--spacing) * 2.5);
    }
    .ps-3 {
        padding-inline-start: calc(var(--spacing) * 3);
    }
    .ps-4 {
        padding-inline-start: calc(var(--spacing) * 4);
    }
    .ps-5 {
        padding-inline-start: calc(var(--spacing) * 5);
    }
    .ps-10 {
        padding-inline-start: calc(var(--spacing) * 10);
    }
    .pe-2 {
        padding-inline-end: calc(var(--spacing) * 2);
    }
    .pe-2\.5 {
        padding-inline-end: calc(var(--spacing) * 2.5);
    }
    .pe-4 {
        padding-inline-end: calc(var(--spacing) * 4);
    }
    .pt-0 {
        padding-top: calc(var(--spacing) * 0);
    }
    .pt-0\.5 {
        padding-top: calc(var(--spacing) * 0.5);
    }
    .pt-1 {
        padding-top: calc(var(--spacing) * 1);
    }
    .pt-2 {
        padding-top: calc(var(--spacing) * 2);
    }
    .pt-3 {
        padding-top: calc(var(--spacing) * 3);
    }
    .pt-4 {
        padding-top: calc(var(--spacing) * 4);
    }
    .pt-5 {
        padding-top: calc(var(--spacing) * 5);
    }
    .pt-8 {
        padding-top: calc(var(--spacing) * 8);
    }
    .pt-12 {
        padding-top: calc(var(--spacing) * 12);
    }
    .pb-0 {
        padding-bottom: calc(var(--spacing) * 0);
    }
    .pb-1 {
        padding-bottom: calc(var(--spacing) * 1);
    }
    .pb-1\.5 {
        padding-bottom: calc(var(--spacing) * 1.5);
    }
    .pb-2 {
        padding-bottom: calc(var(--spacing) * 2);
    }
    .pb-3 {
        padding-bottom: calc(var(--spacing) * 3);
    }
    .pb-4 {
        padding-bottom: calc(var(--spacing) * 4);
    }
    .pb-12 {
        padding-bottom: calc(var(--spacing) * 12);
    }
    .pb-20 {
        padding-bottom: calc(var(--spacing) * 20);
    }
    .text-center {
        text-align: center;
    }
    .text-end {
        text-align: end;
    }
    .text-start {
        text-align: start;
    }
    .align-super {
        vertical-align: super;
    }
    .font-mono {
        font-family: var(--font-mono);
    }
    .font-sans {
        font-family: var(--font-sans);
    }
    .\!text-sm {
        font-size: var(--text-sm) !important;
        line-height: var(--tw-leading, var(--text-sm--line-height)) !important;
    }
    .text-2xl {
        font-size: var(--text-2xl);
        line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
    .text-2xl\/none {
        font-size: var(--text-2xl);
        line-height: 1;
    }
    .text-3xl {
        font-size: var(--text-3xl);
        line-height: var(--tw-leading, var(--text-3xl--line-height));
    }
    .text-4xl {
        font-size: var(--text-4xl);
        line-height: var(--tw-leading, var(--text-4xl--line-height));
    }
    .text-5xl {
        font-size: var(--text-5xl);
        line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
    .text-6xl {
        font-size: var(--text-6xl);
        line-height: var(--tw-leading, var(--text-6xl--line-height));
    }
    .text-\[11px\]\/none {
        font-size: 11px;
        line-height: 1;
    }
    .text-base {
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
    }
    .text-lg {
        font-size: var(--text-lg);
        line-height: var(--tw-leading, var(--text-lg--line-height));
    }
    .text-lg\/5\.5 {
        font-size: var(--text-lg);
        line-height: calc(var(--spacing) * 5.5);
    }
    .text-lg\/none {
        font-size: var(--text-lg);
        line-height: 1;
    }
    .text-sm {
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
    }
    .text-sm\/none {
        font-size: var(--text-sm);
        line-height: 1;
    }
    .text-xl {
        font-size: var(--text-xl);
        line-height: var(--tw-leading, var(--text-xl--line-height));
    }
    .text-xs {
        font-size: var(--text-xs);
        line-height: var(--tw-leading, var(--text-xs--line-height));
    }
    .text-xs\/none {
        font-size: var(--text-xs);
        line-height: 1;
    }
    .tabs-sm {
        --tab-height: calc(var(--size-field, 0.25rem) * 8);
    }
    .tabs-sm :where(.tab) {
        --tab-p: 0.5rem;
        --tab-radius-min: calc(0.5rem - var(--border));
        font-size: 0.875rem;
    }
    .tabs-xs {
        --tab-height: calc(var(--size-field, 0.25rem) * 6);
    }
    .tabs-xs :where(.tab) {
        --tab-p: 0.375rem;
        --tab-radius-min: calc(0.5rem - var(--border));
        font-size: 0.75rem;
    }
    .kbd-sm {
        --size: calc(var(--size-selector, 0.25rem) * 5);
        font-size: 0.75rem;
    }
    .text-\[9px\] {
        font-size: 9px;
    }
    .text-\[10px\] {
        font-size: 10px;
    }
    .text-\[11px\] {
        font-size: 11px;
    }
    .text-\[12px\] {
        font-size: 12px;
    }
    .text-\[15px\] {
        font-size: 15px;
    }
    .text-\[200px\] {
        font-size: 200px;
    }
    .leading-0 {
        --tw-leading: calc(var(--spacing) * 0);
        line-height: calc(var(--spacing) * 0);
    }
    .leading-5 {
        --tw-leading: calc(var(--spacing) * 5);
        line-height: calc(var(--spacing) * 5);
    }
    .leading-none {
        --tw-leading: 1;
        line-height: 1;
    }
    .leading-tight {
        --tw-leading: var(--leading-tight);
        line-height: var(--leading-tight);
    }
    .font-black {
        --tw-font-weight: var(--font-weight-black);
        font-weight: var(--font-weight-black);
    }
    .font-bold {
        --tw-font-weight: var(--font-weight-bold);
        font-weight: var(--font-weight-bold);
    }
    .font-extrabold {
        --tw-font-weight: var(--font-weight-extrabold);
        font-weight: var(--font-weight-extrabold);
    }
    .font-extralight {
        --tw-font-weight: var(--font-weight-extralight);
        font-weight: var(--font-weight-extralight);
    }
    .font-light {
        --tw-font-weight: var(--font-weight-light);
        font-weight: var(--font-weight-light);
    }
    .font-medium {
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium);
    }
    .font-normal {
        --tw-font-weight: var(--font-weight-normal);
        font-weight: var(--font-weight-normal);
    }
    .font-semibold {
        --tw-font-weight: var(--font-weight-semibold);
        font-weight: var(--font-weight-semibold);
    }
    .font-thin {
        --tw-font-weight: var(--font-weight-thin);
        font-weight: var(--font-weight-thin);
    }
    .tracking-\[0\.2px\] {
        --tw-tracking: 0.2px;
        letter-spacing: 0.2px;
    }
    .tracking-\[12px\] {
        --tw-tracking: 12px;
        letter-spacing: 12px;
    }
    .tracking-tight {
        --tw-tracking: var(--tracking-tight);
        letter-spacing: var(--tracking-tight);
    }
    .tracking-wide {
        --tw-tracking: var(--tracking-wide);
        letter-spacing: var(--tracking-wide);
    }
    .tracking-wider {
        --tw-tracking: var(--tracking-wider);
        letter-spacing: var(--tracking-wider);
    }
    .text-nowrap {
        text-wrap: nowrap;
    }
    .overflow-ellipsis,
    .text-ellipsis {
        text-overflow: ellipsis;
    }
    .whitespace-nowrap {
        white-space: nowrap;
    }
    .checkbox-error {
        color: var(--color-error-content);
        --input-color: var(--color-error);
    }
    .checkbox-primary {
        color: var(--color-primary-content);
        --input-color: var(--color-primary);
    }
    .link-primary {
        color: var(--color-primary);
    }
    @media (hover: hover) {
        .link-primary:hover {
            color: var(--color-primary);
        }
        @supports (color: color-mix(in lab, red, red)) {
            .link-primary:hover {
                color: color-mix(in oklab, var(--color-primary) 80%, #000);
            }
        }
    }
    .range-primary {
        color: var(--color-primary);
        --range-thumb: var(--color-primary-content);
    }
    .tooltip-error {
        --tt-bg: var(--color-error);
    }
    .tooltip-error > .tooltip-content,
    .tooltip-error[data-tip]:before {
        color: var(--color-error-content);
    }
    .\!text-black {
        color: var(--color-black) !important;
    }
    .\!text-primary-content {
        color: var(--color-primary-content) !important;
    }
    .progress-accent {
        color: var(--color-accent);
    }
    .progress-error {
        color: var(--color-error);
    }
    .progress-info {
        color: var(--color-info);
    }
    .progress-primary {
        color: var(--color-primary);
    }
    .progress-secondary {
        color: var(--color-secondary);
    }
    .progress-success {
        color: var(--color-success);
    }
    .progress-warning {
        color: var(--color-warning);
    }
    .text-base-content,
    .text-base-content\/5 {
        color: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .text-base-content\/5 {
            color: color-mix(in oklab, var(--color-base-content) 5%, transparent);
        }
    }
    .text-base-content\/25 {
        color: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .text-base-content\/25 {
            color: color-mix(in oklab, var(--color-base-content) 25%, transparent);
        }
    }
    .text-base-content\/40 {
        color: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .text-base-content\/40 {
            color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
        }
    }
    .text-base-content\/50 {
        color: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .text-base-content\/50 {
            color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
        }
    }
    .text-base-content\/60 {
        color: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .text-base-content\/60 {
            color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
        }
    }
    .text-base-content\/70 {
        color: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .text-base-content\/70 {
            color: color-mix(in oklab, var(--color-base-content) 70%, transparent);
        }
    }
    .text-base-content\/80 {
        color: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .text-base-content\/80 {
            color: color-mix(in oklab, var(--color-base-content) 80%, transparent);
        }
    }
    .text-base-content\/90 {
        color: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .text-base-content\/90 {
            color: color-mix(in oklab, var(--color-base-content) 90%, transparent);
        }
    }
    .text-black {
        color: var(--color-black);
    }
    .text-black\/40 {
        color: #0006;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .text-black\/40 {
            color: color-mix(in oklab, var(--color-black) 40%, transparent);
        }
    }
    .text-black\/80 {
        color: #000c;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .text-black\/80 {
            color: color-mix(in oklab, var(--color-black) 80%, transparent);
        }
    }
    .text-blue-500 {
        color: var(--color-blue-500);
    }
    .text-cyan-600 {
        color: var(--color-cyan-600);
    }
    .text-error {
        color: var(--color-error);
    }
    .text-error-content {
        color: var(--color-error-content);
    }
    .text-fuchsia-500 {
        color: var(--color-fuchsia-500);
    }
    .text-gray-500 {
        color: var(--color-gray-500);
    }
    .text-green-500 {
        color: var(--color-green-500);
    }
    .text-indigo-600 {
        color: var(--color-indigo-600);
    }
    .text-info {
        color: var(--color-info);
    }
    .text-neutral-content {
        color: var(--color-neutral-content);
    }
    .text-orange-400 {
        color: var(--color-orange-400);
    }
    .text-orange-500 {
        color: var(--color-orange-500);
    }
    .text-orange-600 {
        color: var(--color-orange-600);
    }
    .text-primary {
        color: var(--color-primary);
    }
    .text-primary-content,
    .text-primary-content\/70 {
        color: var(--color-primary-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .text-primary-content\/70 {
            color: color-mix(in oklab, var(--color-primary-content) 70%, transparent);
        }
    }
    .text-primary\/5 {
        color: var(--color-primary);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .text-primary\/5 {
            color: color-mix(in oklab, var(--color-primary) 5%, transparent);
        }
    }
    .text-primary\/60 {
        color: var(--color-primary);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .text-primary\/60 {
            color: color-mix(in oklab, var(--color-primary) 60%, transparent);
        }
    }
    .text-purple-500 {
        color: var(--color-purple-500);
    }
    .text-purple-600 {
        color: var(--color-purple-600);
    }
    .text-red-500 {
        color: var(--color-red-500);
    }
    .text-red-600 {
        color: var(--color-red-600);
    }
    .text-secondary {
        color: var(--color-secondary);
    }
    .text-secondary-content {
        color: var(--color-secondary-content);
    }
    .text-success {
        color: var(--color-success);
    }
    .text-success-content {
        color: var(--color-success-content);
    }
    .text-teal-500 {
        color: var(--color-teal-500);
    }
    .text-teal-600 {
        color: var(--color-teal-600);
    }
    .text-transparent {
        color: #0000;
    }
    .text-violet-500 {
        color: var(--color-violet-500);
    }
    .text-warning {
        color: var(--color-warning);
    }
    .text-warning-content {
        color: var(--color-warning-content);
    }
    .text-white {
        color: var(--color-white);
    }
    .text-yellow-500 {
        color: var(--color-yellow-500);
    }
    .text-yellow-600 {
        color: var(--color-yellow-600);
    }
    .capitalize {
        text-transform: capitalize;
    }
    .lowercase {
        text-transform: lowercase;
    }
    .uppercase {
        text-transform: uppercase;
    }
    .italic {
        font-style: italic;
    }
    .link-hover {
        text-decoration-line: none;
    }
    @media (hover: hover) {
        .link-hover:hover {
            text-decoration-line: underline;
        }
    }
    .line-through {
        text-decoration-line: line-through;
    }
    .underline {
        text-decoration-line: underline;
    }
    .opacity-0 {
        opacity: 0;
    }
    .opacity-8 {
        opacity: 0.08;
    }
    .opacity-20 {
        opacity: 0.2;
    }
    .opacity-30 {
        opacity: 0.3;
    }
    .opacity-40 {
        opacity: 0.4;
    }
    .opacity-50 {
        opacity: 0.5;
    }
    .opacity-60 {
        opacity: 0.6;
    }
    .opacity-70 {
        opacity: 0.7;
    }
    .opacity-75 {
        opacity: 0.75;
    }
    .opacity-80 {
        opacity: 0.8;
    }
    .opacity-100 {
        opacity: 1;
    }
    .bg-blend-color {
        background-blend-mode: color;
    }
    .bg-blend-color-burn {
        background-blend-mode: color-burn;
    }
    .bg-blend-color-dodge {
        background-blend-mode: color-dodge;
    }
    .bg-blend-darken {
        background-blend-mode: darken;
    }
    .bg-blend-difference {
        background-blend-mode: difference;
    }
    .bg-blend-exclusion {
        background-blend-mode: exclusion;
    }
    .bg-blend-hard-light {
        background-blend-mode: hard-light;
    }
    .bg-blend-hue {
        background-blend-mode: hue;
    }
    .bg-blend-lighten {
        background-blend-mode: lighten;
    }
    .bg-blend-luminosity {
        background-blend-mode: luminosity;
    }
    .bg-blend-multiply {
        background-blend-mode: multiply;
    }
    .bg-blend-overlay {
        background-blend-mode: overlay;
    }
    .bg-blend-saturation {
        background-blend-mode: saturation;
    }
    .bg-blend-screen {
        background-blend-mode: screen;
    }
    .bg-blend-soft-light {
        background-blend-mode: soft-light;
    }
    .shadow {
        --tw-shadow:
            0 1px 3px 0 var(--tw-shadow-color, #0000001a),
            0 1px 2px -1px var(--tw-shadow-color, #0000001a);
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow),
            var(--tw-ring-shadow), var(--tw-shadow);
    }
    .shadow-2xl {
        --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, #00000040);
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow),
            var(--tw-ring-shadow), var(--tw-shadow);
    }
    .shadow-2xs {
        --tw-shadow: 0 1px var(--tw-shadow-color, #0000000d);
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow),
            var(--tw-ring-shadow), var(--tw-shadow);
    }
    .shadow-\[0px_-10px_40px_0px\] {
        --tw-shadow: 0px -10px 40px 0px var(--tw-shadow-color, currentcolor);
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow),
            var(--tw-ring-shadow), var(--tw-shadow);
    }
    .shadow-inner {
        --tw-shadow: inset 0 2px 4px 0 var(--tw-shadow-color, #0000000d);
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow),
            var(--tw-ring-shadow), var(--tw-shadow);
    }
    .shadow-lg {
        --tw-shadow:
            0 10px 15px -3px var(--tw-shadow-color, #0000001a),
            0 4px 6px -4px var(--tw-shadow-color, #0000001a);
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow),
            var(--tw-ring-shadow), var(--tw-shadow);
    }
    .shadow-md {
        --tw-shadow:
            0 4px 6px -1px var(--tw-shadow-color, #0000001a),
            0 2px 4px -2px var(--tw-shadow-color, #0000001a);
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow),
            var(--tw-ring-shadow), var(--tw-shadow);
    }
    .shadow-none {
        --tw-shadow: 0 0 #0000;
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow),
            var(--tw-ring-shadow), var(--tw-shadow);
    }
    .shadow-sm {
        --tw-shadow:
            0 1px 3px 0 var(--tw-shadow-color, #0000001a),
            0 1px 2px -1px var(--tw-shadow-color, #0000001a);
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow),
            var(--tw-ring-shadow), var(--tw-shadow);
    }
    .shadow-xl {
        --tw-shadow:
            0 20px 25px -5px var(--tw-shadow-color, #0000001a),
            0 8px 10px -6px var(--tw-shadow-color, #0000001a);
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow),
            var(--tw-ring-shadow), var(--tw-shadow);
    }
    .shadow-xs {
        --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, #0000000d);
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow),
            var(--tw-ring-shadow), var(--tw-shadow);
    }
    .ring {
        --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width))
            var(--tw-ring-color, currentcolor);
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow),
            var(--tw-ring-shadow), var(--tw-shadow);
    }
    .inset-shadow-2xs {
        --tw-inset-shadow: inset 0 1px var(--tw-inset-shadow-color, #0000000d);
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow),
            var(--tw-ring-shadow), var(--tw-shadow);
    }
    .inset-shadow-none {
        --tw-inset-shadow: 0 0 #0000;
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow),
            var(--tw-ring-shadow), var(--tw-shadow);
    }
    .inset-shadow-sm {
        --tw-inset-shadow: inset 0 2px 4px var(--tw-inset-shadow-color, #0000000d);
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow),
            var(--tw-ring-shadow), var(--tw-shadow);
    }
    .inset-shadow-xs {
        --tw-inset-shadow: inset 0 1px 1px var(--tw-inset-shadow-color, #0000000d);
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow),
            var(--tw-ring-shadow), var(--tw-shadow);
    }
    .shadow-base-content\/4 {
        --tw-shadow-color: var(--color-base-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .shadow-base-content\/4 {
            --tw-shadow-color: color-mix(
                in oklab,
                color-mix(in oklab, var(--color-base-content) 4%, transparent)
                    var(--tw-shadow-alpha),
                transparent
            );
        }
    }
    .shadow-error {
        --tw-shadow-color: var(--color-error);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .shadow-error {
            --tw-shadow-color: color-mix(
                in oklab,
                var(--color-error) var(--tw-shadow-alpha),
                transparent
            );
        }
    }
    .shadow-error\/20 {
        --tw-shadow-color: var(--color-error);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .shadow-error\/20 {
            --tw-shadow-color: color-mix(
                in oklab,
                color-mix(in oklab, var(--color-error) 20%, transparent) var(--tw-shadow-alpha),
                transparent
            );
        }
    }
    .shadow-primary {
        --tw-shadow-color: var(--color-primary);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .shadow-primary {
            --tw-shadow-color: color-mix(
                in oklab,
                var(--color-primary) var(--tw-shadow-alpha),
                transparent
            );
        }
    }
    .shadow-primary-content\/20 {
        --tw-shadow-color: var(--color-primary-content);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .shadow-primary-content\/20 {
            --tw-shadow-color: color-mix(
                in oklab,
                color-mix(in oklab, var(--color-primary-content) 20%, transparent)
                    var(--tw-shadow-alpha),
                transparent
            );
        }
    }
    .shadow-primary\/10 {
        --tw-shadow-color: var(--color-primary);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .shadow-primary\/10 {
            --tw-shadow-color: color-mix(
                in oklab,
                color-mix(in oklab, var(--color-primary) 10%, transparent) var(--tw-shadow-alpha),
                transparent
            );
        }
    }
    .shadow-primary\/20 {
        --tw-shadow-color: var(--color-primary);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .shadow-primary\/20 {
            --tw-shadow-color: color-mix(
                in oklab,
                color-mix(in oklab, var(--color-primary) 20%, transparent) var(--tw-shadow-alpha),
                transparent
            );
        }
    }
    .shadow-secondary {
        --tw-shadow-color: var(--color-secondary);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .shadow-secondary {
            --tw-shadow-color: color-mix(
                in oklab,
                var(--color-secondary) var(--tw-shadow-alpha),
                transparent
            );
        }
    }
    .shadow-secondary\/20 {
        --tw-shadow-color: var(--color-secondary);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .shadow-secondary\/20 {
            --tw-shadow-color: color-mix(
                in oklab,
                color-mix(in oklab, var(--color-secondary) 20%, transparent) var(--tw-shadow-alpha),
                transparent
            );
        }
    }
    .shadow-success {
        --tw-shadow-color: var(--color-success);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .shadow-success {
            --tw-shadow-color: color-mix(
                in oklab,
                var(--color-success) var(--tw-shadow-alpha),
                transparent
            );
        }
    }
    .shadow-success\/20 {
        --tw-shadow-color: var(--color-success);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .shadow-success\/20 {
            --tw-shadow-color: color-mix(
                in oklab,
                color-mix(in oklab, var(--color-success) 20%, transparent) var(--tw-shadow-alpha),
                transparent
            );
        }
    }
    .ring-success {
        --tw-ring-color: var(--color-success);
    }
    .inset-shadow-error {
        --tw-inset-shadow-color: var(--color-error);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .inset-shadow-error {
            --tw-inset-shadow-color: color-mix(
                in oklab,
                var(--color-error) var(--tw-inset-shadow-alpha),
                transparent
            );
        }
    }
    .inset-shadow-error\/15 {
        --tw-inset-shadow-color: var(--color-error);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .inset-shadow-error\/15 {
            --tw-inset-shadow-color: color-mix(
                in oklab,
                color-mix(in oklab, var(--color-error) 15%, transparent)
                    var(--tw-inset-shadow-alpha),
                transparent
            );
        }
    }
    .inset-shadow-primary {
        --tw-inset-shadow-color: var(--color-primary);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .inset-shadow-primary {
            --tw-inset-shadow-color: color-mix(
                in oklab,
                var(--color-primary) var(--tw-inset-shadow-alpha),
                transparent
            );
        }
    }
    .inset-shadow-primary\/15 {
        --tw-inset-shadow-color: var(--color-primary);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .inset-shadow-primary\/15 {
            --tw-inset-shadow-color: color-mix(
                in oklab,
                color-mix(in oklab, var(--color-primary) 15%, transparent)
                    var(--tw-inset-shadow-alpha),
                transparent
            );
        }
    }
    .inset-shadow-secondary {
        --tw-inset-shadow-color: var(--color-secondary);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .inset-shadow-secondary {
            --tw-inset-shadow-color: color-mix(
                in oklab,
                var(--color-secondary) var(--tw-inset-shadow-alpha),
                transparent
            );
        }
    }
    .inset-shadow-secondary\/15 {
        --tw-inset-shadow-color: var(--color-secondary);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .inset-shadow-secondary\/15 {
            --tw-inset-shadow-color: color-mix(
                in oklab,
                color-mix(in oklab, var(--color-secondary) 15%, transparent)
                    var(--tw-inset-shadow-alpha),
                transparent
            );
        }
    }
    .inset-shadow-success {
        --tw-inset-shadow-color: var(--color-success);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .inset-shadow-success {
            --tw-inset-shadow-color: color-mix(
                in oklab,
                var(--color-success) var(--tw-inset-shadow-alpha),
                transparent
            );
        }
    }
    .inset-shadow-success\/15 {
        --tw-inset-shadow-color: var(--color-success);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .inset-shadow-success\/15 {
            --tw-inset-shadow-color: color-mix(
                in oklab,
                color-mix(in oklab, var(--color-success) 15%, transparent)
                    var(--tw-inset-shadow-alpha),
                transparent
            );
        }
    }
    .inset-shadow-white\/20 {
        --tw-inset-shadow-color: #fff3;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .inset-shadow-white\/20 {
            --tw-inset-shadow-color: color-mix(
                in oklab,
                color-mix(in oklab, var(--color-white) 20%, transparent)
                    var(--tw-inset-shadow-alpha),
                transparent
            );
        }
    }
    .btn-ghost:not(.btn-active, :hover, :active:focus, :focus-visible) {
        --btn-shadow: "";
        --btn-bg: #0000;
        --btn-border: #0000;
        --btn-noise: none;
    }
    .btn-ghost:not(.btn-active, :hover, :active:focus, :focus-visible):not(
            :disabled,
            [disabled],
            .btn-disabled
        ) {
        --btn-fg: currentColor;
        outline-color: currentColor;
    }
    @media (hover: none) {
        .btn-ghost:hover:not(
                .btn-active,
                :active,
                :focus-visible,
                :disabled,
                [disabled],
                .btn-disabled
            ) {
            --btn-shadow: "";
            --btn-bg: #0000;
            --btn-border: #0000;
            --btn-noise: none;
            --btn-fg: currentColor;
        }
    }
    .blur-\[160px\] {
        --tw-blur: blur(160px);
        filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,)
            var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,)
            var(--tw-drop-shadow,);
    }
    .blur-\[180px\] {
        --tw-blur: blur(180px);
        filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,)
            var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,)
            var(--tw-drop-shadow,);
    }
    .blur-md {
        --tw-blur: blur(var(--blur-md));
        filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,)
            var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,)
            var(--tw-drop-shadow,);
    }
    .blur-sm {
        --tw-blur: blur(var(--blur-sm));
        filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,)
            var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,)
            var(--tw-drop-shadow,);
    }
    .brightness-125 {
        --tw-brightness: brightness(125%);
        filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,)
            var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,)
            var(--tw-drop-shadow,);
    }
    .contrast-125 {
        --tw-contrast: contrast(125%);
        filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,)
            var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,)
            var(--tw-drop-shadow,);
    }
    .contrast-200 {
        --tw-contrast: contrast(200%);
        filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,)
            var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,)
            var(--tw-drop-shadow,);
    }
    .grayscale,
    .grayscale-100 {
        --tw-grayscale: grayscale(100%);
        filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,)
            var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,)
            var(--tw-drop-shadow,);
    }
    .hue-rotate-60 {
        --tw-hue-rotate: hue-rotate(60deg);
        filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,)
            var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,)
            var(--tw-drop-shadow,);
    }
    .invert {
        --tw-invert: invert(100%);
        filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,)
            var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,)
            var(--tw-drop-shadow,);
    }
    .saturate-200 {
        --tw-saturate: saturate(200%);
        filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,)
            var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,)
            var(--tw-drop-shadow,);
    }
    .sepia {
        --tw-sepia: sepia(100%);
        filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,)
            var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,)
            var(--tw-drop-shadow,);
    }
    .filter {
        filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,)
            var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,)
            var(--tw-drop-shadow,);
    }
    .backdrop-blur {
        --tw-backdrop-blur: blur(8px);
        -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
            var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
            var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
            var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
        backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
            var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
            var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
            var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    }
    .backdrop-blur-\[4px\] {
        --tw-backdrop-blur: blur(4px);
        -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
            var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
            var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
            var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
        backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
            var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
            var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
            var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    }
    .backdrop-blur-lg {
        --tw-backdrop-blur: blur(var(--blur-lg));
        -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
            var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
            var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
            var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
        backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
            var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
            var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
            var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    }
    .backdrop-blur-md {
        --tw-backdrop-blur: blur(var(--blur-md));
        -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
            var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
            var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
            var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
        backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
            var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
            var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
            var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    }
    .backdrop-blur-sm {
        --tw-backdrop-blur: blur(var(--blur-sm));
        -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
            var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
            var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
            var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
        backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
            var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
            var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
            var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    }
    .backdrop-blur-xs {
        --tw-backdrop-blur: blur(var(--blur-xs));
        -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
            var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
            var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
            var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
        backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
            var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
            var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
            var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    }
    .backdrop-brightness-125 {
        --tw-backdrop-brightness: brightness(125%);
        -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
            var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
            var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
            var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
        backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
            var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
            var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
            var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    }
    .backdrop-contrast-200 {
        --tw-backdrop-contrast: contrast(200%);
        -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
            var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
            var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
            var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
        backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
            var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
            var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
            var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    }
    .backdrop-grayscale {
        --tw-backdrop-grayscale: grayscale(100%);
        -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
            var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
            var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
            var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
        backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
            var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
            var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
            var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    }
    .backdrop-hue-rotate-90 {
        --tw-backdrop-hue-rotate: hue-rotate(90deg);
        -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
            var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
            var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
            var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
        backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
            var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
            var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
            var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    }
    .backdrop-invert {
        --tw-backdrop-invert: invert(100%);
        -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
            var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
            var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
            var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
        backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
            var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
            var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
            var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    }
    .backdrop-saturate-200 {
        --tw-backdrop-saturate: saturate(200%);
        -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
            var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
            var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
            var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
        backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
            var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
            var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
            var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    }
    .backdrop-sepia {
        --tw-backdrop-sepia: sepia(100%);
        -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
            var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
            var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
            var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
        backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
            var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
            var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
            var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    }
    .backdrop-filter {
        -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
            var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
            var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
            var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
        backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
            var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
            var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
            var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    }
    .transition-\[top\] {
        transition-property: top;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
    .transition-all {
        transition-property: all;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
    .transition-opacity {
        transition-property: opacity;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
    .delay-300 {
        transition-delay: 0.3s;
    }
    .duration-300 {
        --tw-duration: 0.3s;
        transition-duration: 0.3s;
    }
    .duration-500 {
        --tw-duration: 0.5s;
        transition-duration: 0.5s;
    }
    .duration-1000 {
        --tw-duration: 1s;
        transition-duration: 1s;
    }
    .ease-\[cubic-bezier\(0\.51\,-0\.69\,0\.3\,2\.01\)\] {
        --tw-ease: cubic-bezier(0.51, -0.69, 0.3, 2.01);
        transition-timing-function: cubic-bezier(0.51, -0.69, 0.3, 2.01);
    }
    .btn-outline:not(
        .btn-active,
        :hover,
        :active:focus,
        :focus-visible,
        :disabled,
        [disabled],
        .btn-disabled,
        :checked
    ) {
        --btn-shadow: "";
        --btn-bg: #0000;
        --btn-fg: var(--btn-color);
        --btn-border: var(--btn-color);
        --btn-noise: none;
    }
    @media (hover: none) {
        .btn-outline:hover:not(
                .btn-active,
                :active,
                :focus-visible,
                :disabled,
                [disabled],
                .btn-disabled,
                :checked
            ) {
            --btn-shadow: "";
            --btn-bg: #0000;
            --btn-fg: var(--btn-color);
            --btn-border: var(--btn-color);
            --btn-noise: none;
        }
    }
    .btn-soft:not(
        .btn-active,
        :hover,
        :active:focus,
        :focus-visible,
        :disabled,
        [disabled],
        .btn-disabled
    ) {
        --btn-shadow: "";
        --btn-fg: var(--btn-color, var(--color-base-content));
        --btn-bg: var(--btn-color, var(--color-base-content));
    }
    @supports (color: color-mix(in lab, red, red)) {
        .btn-soft:not(
            .btn-active,
            :hover,
            :active:focus,
            :focus-visible,
            :disabled,
            [disabled],
            .btn-disabled
        ) {
            --btn-bg: color-mix(
                in oklab,
                var(--btn-color, var(--color-base-content)) 8%,
                var(--color-base-100)
            );
        }
    }
    .btn-soft:not(
        .btn-active,
        :hover,
        :active:focus,
        :focus-visible,
        :disabled,
        [disabled],
        .btn-disabled
    ) {
        --btn-border: var(--btn-color, var(--color-base-content));
    }
    @supports (color: color-mix(in lab, red, red)) {
        .btn-soft:not(
            .btn-active,
            :hover,
            :active:focus,
            :focus-visible,
            :disabled,
            [disabled],
            .btn-disabled
        ) {
            --btn-border: color-mix(
                in oklab,
                var(--btn-color, var(--color-base-content)) 10%,
                var(--color-base-100)
            );
        }
    }
    .btn-soft:not(
        .btn-active,
        :hover,
        :active:focus,
        :focus-visible,
        :disabled,
        [disabled],
        .btn-disabled
    ) {
        --btn-noise: none;
    }
    @media (hover: none) {
        .btn-soft:hover:not(
                .btn-active,
                :active,
                :focus-visible,
                :disabled,
                [disabled],
                .btn-disabled
            ) {
            --btn-shadow: "";
            --btn-fg: var(--btn-color, var(--color-base-content));
            --btn-bg: var(--btn-color, var(--color-base-content));
        }
        @supports (color: color-mix(in lab, red, red)) {
            .btn-soft:hover:not(
                    .btn-active,
                    :active,
                    :focus-visible,
                    :disabled,
                    [disabled],
                    .btn-disabled
                ) {
                --btn-bg: color-mix(
                    in oklab,
                    var(--btn-color, var(--color-base-content)) 8%,
                    var(--color-base-100)
                );
            }
        }
        .btn-soft:hover:not(
                .btn-active,
                :active,
                :focus-visible,
                :disabled,
                [disabled],
                .btn-disabled
            ) {
            --btn-border: var(--btn-color, var(--color-base-content));
        }
        @supports (color: color-mix(in lab, red, red)) {
            .btn-soft:hover:not(
                    .btn-active,
                    :active,
                    :focus-visible,
                    :disabled,
                    [disabled],
                    .btn-disabled
                ) {
                --btn-border: color-mix(
                    in oklab,
                    var(--btn-color, var(--color-base-content)) 10%,
                    var(--color-base-100)
                );
            }
        }
        .btn-soft:hover:not(
                .btn-active,
                :active,
                :focus-visible,
                :disabled,
                [disabled],
                .btn-disabled
            ) {
            --btn-noise: none;
        }
    }
    .btn-lg {
        --fontsize: 1.125rem;
        --btn-p: 1.25rem;
        --size: calc(var(--size-field, 0.25rem) * 12);
    }
    .btn-sm {
        --fontsize: 0.75rem;
        --btn-p: 0.75rem;
        --size: calc(var(--size-field, 0.25rem) * 8);
    }
    .btn-xs {
        --fontsize: 0.6875rem;
        --btn-p: 0.5rem;
        --size: calc(var(--size-field, 0.25rem) * 6);
    }
    .\!outline-none {
        --tw-outline-style: none !important;
        outline-style: none !important;
    }
    .badge-error {
        --badge-color: var(--color-error);
        --badge-fg: var(--color-error-content);
    }
    .badge-info {
        --badge-color: var(--color-info);
        --badge-fg: var(--color-info-content);
    }
    .badge-primary {
        --badge-color: var(--color-primary);
        --badge-fg: var(--color-primary-content);
    }
    .badge-secondary {
        --badge-color: var(--color-secondary);
        --badge-fg: var(--color-secondary-content);
    }
    .badge-success {
        --badge-color: var(--color-success);
        --badge-fg: var(--color-success-content);
    }
    .badge-warning {
        --badge-color: var(--color-warning);
        --badge-fg: var(--color-warning-content);
    }
    .btn-error {
        --btn-color: var(--color-error);
        --btn-fg: var(--color-error-content);
    }
    .btn-neutral {
        --btn-color: var(--color-neutral);
        --btn-fg: var(--color-neutral-content);
    }
    .btn-primary {
        --btn-color: var(--color-primary);
        --btn-fg: var(--color-primary-content);
    }
    .btn-secondary {
        --btn-color: var(--color-secondary);
        --btn-fg: var(--color-secondary-content);
    }
    .btn-success {
        --btn-color: var(--color-success);
        --btn-fg: var(--color-success-content);
    }
    .btn-warning {
        --btn-color: var(--color-warning);
        --btn-fg: var(--color-warning-content);
    }
    .select-none {
        -webkit-user-select: none;
        user-select: none;
    }
    .timeline-snap-icon > li {
        --timeline-col-start: 0.5rem;
        --timeline-row-start: minmax(0, 1fr);
    }
    .\[background-position-x\:center\] {
        background-position-x: 50%;
    }
    .hugeicons--calendar-favorite-02 {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5'%3E%3Cpath d='M16 2v4M8 2v4m5-2h-2C7.229 4 5.343 4 4.172 5.172S3 8.229 3 12v2c0 3.771 0 5.657 1.172 6.828S7.229 22 11 22h2c3.771 0 5.657 0 6.828-1.172S21 17.771 21 14v-2c0-3.771 0-5.657-1.172-6.828S16.771 4 13 4M3 10h18'/%3E%3Cpath d='m12.518 13.433l.528 1.065c.072.148.264.29.426.317l.957.16c.612.104.756.551.315.993l-.744.75a.66.66 0 0 0-.156.547l.213.929c.168.735-.219 1.019-.864.635l-.897-.535a.64.64 0 0 0-.594 0l-.896.535c-.642.384-1.032.097-.864-.635l.213-.929a.66.66 0 0 0-.156-.547l-.744-.75c-.438-.442-.297-.89.315-.992l.957-.16a.65.65 0 0 0 .423-.318l.527-1.065c.288-.577.756-.577 1.041 0'/%3E%3C/g%3E%3C/svg%3E");
    }
    .hugeicons--dashboard-speed-02 {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-width='1.5'%3E%3Ccircle cx='12' cy='18' r='3'/%3E%3Cpath stroke-linecap='round' d='M12 15v-5m10 3c0-5.523-4.477-10-10-10S2 7.477 2 13'/%3E%3C/g%3E%3C/svg%3E");
    }
    .hugeicons--doc-01 {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-width='1.5'%3E%3Cpath stroke-linejoin='round' d='M20 13v-2.343c0-.818 0-1.226-.152-1.594c-.152-.367-.441-.657-1.02-1.235l-4.736-4.736c-.499-.499-.748-.748-1.058-.896a2 2 0 0 0-.197-.082C12.514 2 12.161 2 11.456 2c-3.245 0-4.868 0-5.967.886a4 4 0 0 0-.603.603C4 4.59 4 6.211 4 9.456V13m9-10.5V3c0 2.828 0 4.243.879 5.121C14.757 9 16.172 9 19 9h.5'/%3E%3Cpath d='M20.5 17.22c-.051-1.19-.826-1.22-1.877-1.22c-1.619 0-1.887.406-1.887 2v2c0 1.594.268 2 1.887 2c1.051 0 1.826-.03 1.878-1.22M7.266 19c0 1.657-1.264 3-2.824 3c-.352 0-.528 0-.659-.08c-.313-.193-.282-.582-.282-.92v-4c0-.338-.031-.727.282-.92c.131-.08.307-.08.66-.08c1.559 0 2.823 1.343 2.823 3ZM12 22c-.888 0-1.331 0-1.607-.293s-.276-.764-.276-1.707v-2c0-.943 0-1.414.276-1.707S11.113 16 12 16s1.33 0 1.606.293s.276.764.276 1.707v2c0 .943 0 1.414-.276 1.707C13.331 22 12.887 22 12 22Z'/%3E%3C/g%3E%3C/svg%3E");
    }
    .hugeicons--dollar-receive-02 {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-width='1.5'%3E%3Cpath d='M10.625 8.63C10.625 6.625 8.778 5 6.5 5S2.375 6.625 2.375 8.63S3.5 11.74 6.5 11.74s4.5 1.038 4.5 3.63C11 17.963 8.985 19 6.5 19S2 17.375 2 15.37'/%3E%3Cpath stroke-linejoin='round' d='M6.5 3v18m8-9H22m-7.5 0c0 .7 1.994 2.008 2.5 2.5M14.5 12c0-.7 1.994-2.008 2.5-2.5'/%3E%3C/g%3E%3C/svg%3E");
    }
    .hugeicons--github {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5'%3E%3Cpath d='M10 20.568c-3.429 1.157-6.286 0-8-3.568'/%3E%3Cpath d='M10 22v-3.242c0-.598.184-1.118.48-1.588c.204-.322.064-.78-.303-.88C7.134 15.452 5 14.107 5 9.645c0-1.16.38-2.25 1.048-3.2c.166-.236.25-.354.27-.46c.02-.108-.015-.247-.085-.527c-.283-1.136-.264-2.343.16-3.43c0 0 .877-.287 2.874.96c.456.285.684.428.885.46s.469-.035 1.005-.169A9.5 9.5 0 0 1 13.5 3a9.6 9.6 0 0 1 2.343.28c.536.134.805.2 1.006.169c.2-.032.428-.175.884-.46c1.997-1.247 2.874-.96 2.874-.96c.424 1.087.443 2.294.16 3.43c-.07.28-.104.42-.084.526s.103.225.269.461c.668.95 1.048 2.04 1.048 3.2c0 4.462-2.134 5.807-5.177 6.643c-.367.101-.507.559-.303.88c.296.47.48.99.48 1.589V22'/%3E%3C/g%3E%3C/svg%3E");
    }
    .hugeicons--linkedin-02 {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-width='1.5'%3E%3Cpath d='M4.5 9.5H4c-.943 0-1.414 0-1.707.293S2 10.557 2 11.5V20c0 .943 0 1.414.293 1.707S3.057 22 4 22h.5c.943 0 1.414 0 1.707-.293S6.5 20.943 6.5 20v-8.5c0-.943 0-1.414-.293-1.707S5.443 9.5 4.5 9.5Zm2-5.25a2.25 2.25 0 1 1-4.5 0a2.25 2.25 0 0 1 4.5 0Z'/%3E%3Cpath stroke-linejoin='round' d='M12.326 9.5H11.5c-.943 0-1.414 0-1.707.293S9.5 10.557 9.5 11.5V20c0 .943 0 1.414.293 1.707S10.557 22 11.5 22h.5c.943 0 1.414 0 1.707-.293S14 20.943 14 20v-3.5c0-1.657.528-3 2.088-3c.78 0 1.412.672 1.412 1.5v4.5c0 .943 0 1.414.293 1.707s.764.293 1.707.293h.499c.942 0 1.414 0 1.707-.293c.292-.293.293-.764.293-1.706L22 14c0-2.486-2.364-4.5-4.703-4.5c-1.332 0-2.52.652-3.297 1.673c0-.63 0-.945-.137-1.179a1 1 0 0 0-.358-.358c-.234-.137-.549-.137-1.179-.137Z'/%3E%3C/g%3E%3C/svg%3E");
    }
    .hugeicons--logout-03 {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5'%3E%3Cpath d='M18 18c0 .464 0 .697-.022.892a3.5 3.5 0 0 1-3.086 3.086C14.697 22 14.464 22 14 22h-3c-3.3 0-4.95 0-5.975-1.025S4 18.3 4 15V9c0-3.3 0-4.95 1.025-5.975S7.7 2 11 2h3c.464 0 .697 0 .892.022a3.5 3.5 0 0 1 3.086 3.086C18 5.303 18 5.536 18 6'/%3E%3Cpath d='M8.076 11.118C8 11.302 8 11.535 8 12.001s0 .699.076.883a1 1 0 0 0 .541.54c.184.077.417.077.883.077h5c0 1.75.011 2.629.562 2.885q.03.015.063.026c.58.223 1.275-.398 2.666-1.64c1.467-1.312 2.2-1.987 2.209-2.815c-.009-.828-.742-1.503-2.21-2.814c-1.39-1.243-2.085-1.864-2.665-1.641l-.063.026c-.56.26-.562 1.165-.562 2.973h-5c-.466 0-.699 0-.883.076a1 1 0 0 0-.54.541'/%3E%3C/g%3E%3C/svg%3E");
    }
    .hugeicons--new-twitter {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m3 21l7.548-7.548M21 3l-7.548 7.548m0 0L8 3H3l7.548 10.452m2.904-2.904L21 21h-5l-5.452-7.548'/%3E%3C/svg%3E");
    }
    .hugeicons--note-edit {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M15.5 2v3m-9-3v3M11 2v3m8 7v-1.5c0-3.3 0-4.95-1.025-5.975S15.3 3.5 12 3.5h-2c-3.3 0-4.95 0-5.975 1.025S3 7.2 3 10.5V15c0 3.3 0 4.95 1.025 5.975S6.7 22 10 22h1m-4-7h4m-4-4h8m.737 10.653L14 22l.347-1.737c.07-.352.244-.676.499-.93l4.065-4.066a.91.91 0 0 1 1.288 0l.534.534a.91.91 0 0 1 0 1.288l-4.065 4.065a1.8 1.8 0 0 1-.931.499'/%3E%3C/svg%3E");
    }
    .hugeicons--notebook-01 {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-width='1.5'%3E%3Cpath d='M22 14v-4c0-3.771 0-5.657-1.172-6.828S17.771 2 14 2h-2C8.229 2 6.343 2 5.172 3.172S4 6.229 4 10v4c0 3.771 0 5.657 1.172 6.828S8.229 22 12 22h2c3.771 0 5.657 0 6.828-1.172S22 17.771 22 14Z'/%3E%3Cpath d='M11.786 10h3.428c1.078 0 1.617 0 1.951-.293S17.5 8.943 17.5 8s0-1.414-.335-1.707C16.831 6 16.292 6 15.215 6h-3.43c-1.077 0-1.616 0-1.95.293C9.5 6.586 9.5 7.057 9.5 8s0 1.414.335 1.707c.334.293.873.293 1.95.293Z'/%3E%3Cpath stroke-linecap='round' stroke-linejoin='round' d='M5 6H2m3 6H2m3 6H2'/%3E%3C/g%3E%3C/svg%3E");
    }
    .hugeicons--settings-03 {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-width='1.5'%3E%3Cpath d='M15.5 12a3.5 3.5 0 1 1-7 0a3.5 3.5 0 0 1 7 0Z'/%3E%3Cpath d='M20.79 9.152C21.598 10.542 22 11.237 22 12s-.403 1.458-1.21 2.848l-1.923 3.316c-.803 1.384-1.205 2.076-1.865 2.456s-1.462.38-3.065.38h-3.874c-1.603 0-2.405 0-3.065-.38s-1.062-1.072-1.865-2.456L3.21 14.848C2.403 13.458 2 12.763 2 12s.403-1.458 1.21-2.848l1.923-3.316C5.936 4.452 6.338 3.76 6.998 3.38S8.46 3 10.063 3h3.874c1.603 0 2.405 0 3.065.38s1.062 1.072 1.865 2.456z'/%3E%3C/g%3E%3C/svg%3E");
    }
    .hugeicons--settings-04 {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-width='1.5'%3E%3Cpath stroke-linejoin='round' d='M2.5 12c0-4.478 0-6.718 1.391-8.109S7.521 2.5 12 2.5c4.478 0 6.718 0 8.109 1.391S21.5 7.521 21.5 12c0 4.478 0 6.718-1.391 8.109S16.479 21.5 12 21.5c-4.478 0-6.718 0-8.109-1.391S2.5 16.479 2.5 12Z'/%3E%3Cpath d='M10 15.5a1.5 1.5 0 1 1-3 0a1.5 1.5 0 0 1 3 0Zm7-7a1.5 1.5 0 1 0-3 0a1.5 1.5 0 0 0 3 0Z'/%3E%3Cpath stroke-linecap='round' d='M8.5 14V7m7 3v7'/%3E%3C/g%3E%3C/svg%3E");
    }
    .hugeicons--user-circle {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5'%3E%3Cpath d='M15 9a3 3 0 1 0-6 0a3 3 0 0 0 6 0'/%3E%3Cpath d='M22 12c0-5.523-4.477-10-10-10S2 6.477 2 12s4.477 10 10 10s10-4.477 10-10'/%3E%3Cpath d='M17 17a5 5 0 0 0-10 0'/%3E%3C/g%3E%3C/svg%3E");
    }
    .hugeicons--user-group {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5'%3E%3Cpath d='M15.5 11a3.5 3.5 0 1 0-7 0a3.5 3.5 0 0 0 7 0'/%3E%3Cpath d='M15.483 11.35q.484.149 1.017.15a3.5 3.5 0 1 0-3.483-3.85m-2.034 0a3.5 3.5 0 1 0-2.466 3.7M22 16.5c0-2.761-2.462-5-5.5-5m1 8c0-2.761-2.462-5-5.5-5s-5.5 2.239-5.5 5'/%3E%3Cpath d='M7.5 11.5c-3.038 0-5.5 2.239-5.5 5'/%3E%3C/g%3E%3C/svg%3E");
    }
    .hugeicons--user-settings-01 {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5'%3E%3Cpath d='M14.5 7.5a5 5 0 1 0-10 0a5 5 0 0 0 10 0'/%3E%3Cpath d='M2.5 19.5a7 7 0 0 1 10-6.326M18 20c.93 0 1.74-.507 2.171-1.26M18 20c-.93 0-1.74-.507-2.171-1.26M18 20v1.5m0-6.5c.93 0 1.74.507 2.17 1.26M18 15c-.93 0-1.74.507-2.17 1.26M18 15v-1.5m3.5 2l-1.33.76M14.5 19.5l1.329-.76m5.671.76l-1.329-.76M14.5 15.5l1.33.76m4.34 0c.21.365.33.788.33 1.24s-.12.875-.329 1.24m-4.342 0a2.5 2.5 0 0 1-.329-1.24c0-.451.12-.875.33-1.24'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--align-center {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M17 12H7m12 6H5M21 6H3'/%3E%3C/svg%3E");
    }
    .lucide--archive {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Crect width='20' height='5' x='2' y='3' rx='1'/%3E%3Cpath d='M4 8v11a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8m-10 4h4'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--arrow-down {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 5v14m7-7l-7 7l-7-7'/%3E%3C/svg%3E");
    }
    .lucide--arrow-down-to-line {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 17V3m-6 8l6 6l6-6m1 10H5'/%3E%3C/svg%3E");
    }
    .lucide--arrow-left {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m12 19l-7-7l7-7m7 7H5'/%3E%3C/svg%3E");
    }
    .lucide--arrow-left-right {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M8 3L4 7l4 4M4 7h16m-4 14l4-4l-4-4m4 4H4'/%3E%3C/svg%3E");
    }
    .lucide--arrow-right {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M5 12h14m-7-7l7 7l-7 7'/%3E%3C/svg%3E");
    }
    .lucide--arrow-up {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m5 12l7-7l7 7m-7 7V5'/%3E%3C/svg%3E");
    }
    .lucide--arrow-up-down {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m21 16l-4 4l-4-4m4 4V4M3 8l4-4l4 4M7 4v16'/%3E%3C/svg%3E");
    }
    .lucide--arrow-up-from-line {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m18 9l-6-6l-6 6m6-6v14m-7 4h14'/%3E%3C/svg%3E");
    }
    .lucide--at-sign {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Ccircle cx='12' cy='12' r='4'/%3E%3Cpath d='M16 8v5a3 3 0 0 0 6 0v-1a10 10 0 1 0-4 8'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--award {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='m15.477 12.89l1.515 8.526a.5.5 0 0 1-.81.47l-3.58-2.687a1 1 0 0 0-1.197 0l-3.586 2.686a.5.5 0 0 1-.81-.469l1.514-8.526'/%3E%3Ccircle cx='12' cy='8' r='6'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--badge-check {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M3.85 8.62a4 4 0 0 1 4.78-4.77a4 4 0 0 1 6.74 0a4 4 0 0 1 4.78 4.78a4 4 0 0 1 0 6.74a4 4 0 0 1-4.77 4.78a4 4 0 0 1-6.75 0a4 4 0 0 1-4.78-4.77a4 4 0 0 1 0-6.76'/%3E%3Cpath d='m9 12l2 2l4-4'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--badge-help {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M3.85 8.62a4 4 0 0 1 4.78-4.77a4 4 0 0 1 6.74 0a4 4 0 0 1 4.78 4.78a4 4 0 0 1 0 6.74a4 4 0 0 1-4.77 4.78a4 4 0 0 1-6.75 0a4 4 0 0 1-4.78-4.77a4 4 0 0 1 0-6.76'/%3E%3Cpath d='M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3m.08 4h.01'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--badge-info {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3.85 8.62a4 4 0 0 1 4.78-4.77a4 4 0 0 1 6.74 0a4 4 0 0 1 4.78 4.78a4 4 0 0 1 0 6.74a4 4 0 0 1-4.77 4.78a4 4 0 0 1-6.75 0a4 4 0 0 1-4.78-4.77a4 4 0 0 1 0-6.76M12 16v-4m0-4h.01'/%3E%3C/svg%3E");
    }
    .lucide--badge-x {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3.85 8.62a4 4 0 0 1 4.78-4.77a4 4 0 0 1 6.74 0a4 4 0 0 1 4.78 4.78a4 4 0 0 1 0 6.74a4 4 0 0 1-4.77 4.78a4 4 0 0 1-6.75 0a4 4 0 0 1-4.78-4.77a4 4 0 0 1 0-6.76M15 9l-6 6m0-6l6 6'/%3E%3C/svg%3E");
    }
    .lucide--bar-chart {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M5 21v-6m7 6V9m7 12V3'/%3E%3C/svg%3E");
    }
    .lucide--bar-chart-2 {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M5 21v-6m7 6V3m7 18V9'/%3E%3C/svg%3E");
    }
    .lucide--bar-chart-3 {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3 3v18h18m-3-4V9m-5 8V5M8 17v-3'/%3E%3C/svg%3E");
    }
    .lucide--bell {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M10.268 21a2 2 0 0 0 3.464 0m-10.47-5.674A1 1 0 0 0 4 17h16a1 1 0 0 0 .74-1.673C19.41 13.956 18 12.499 18 8A6 6 0 0 0 6 8c0 4.499-1.411 5.956-2.738 7.326'/%3E%3C/svg%3E");
    }
    .lucide--bell-dot {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M10.268 21a2 2 0 0 0 3.464 0m.184-18.686A6 6 0 0 0 6 8c0 4.499-1.411 5.956-2.74 7.327A1 1 0 0 0 4 17h16a1 1 0 0 0 .74-1.673a9 9 0 0 1-.585-.665'/%3E%3Ccircle cx='18' cy='8' r='3'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--bell-minus {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M10.268 21a2 2 0 0 0 3.464 0M15 8h6m-4.757-4.243A6 6 0 0 0 6 8c0 4.499-1.411 5.956-2.738 7.326A1 1 0 0 0 4 17h16a1 1 0 0 0 .74-1.673A9.4 9.4 0 0 1 18.667 12'/%3E%3C/svg%3E");
    }
    .lucide--bell-off {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M10.268 21a2 2 0 0 0 3.464 0M17 17H4a1 1 0 0 1-.74-1.673C4.59 13.956 6 12.499 6 8a6 6 0 0 1 .258-1.742M2 2l20 20M8.668 3.01A6 6 0 0 1 18 8c0 2.687.77 4.653 1.707 6.05'/%3E%3C/svg%3E");
    }
    .lucide--bell-ring {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M10.268 21a2 2 0 0 0 3.464 0M22 8c0-2.3-.8-4.3-2-6M3.262 15.326A1 1 0 0 0 4 17h16a1 1 0 0 0 .74-1.673C19.41 13.956 18 12.499 18 8A6 6 0 0 0 6 8c0 4.499-1.411 5.956-2.738 7.326M4 2C2.8 3.7 2 5.7 2 8'/%3E%3C/svg%3E");
    }
    .lucide--binary {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Crect width='4' height='6' x='14' y='14' rx='2'/%3E%3Crect width='4' height='6' x='6' y='4' rx='2'/%3E%3Cpath d='M6 20h4m4-10h4M6 14h2v6m6-16h2v6'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--blocks {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M10 22V7a1 1 0 0 0-1-1H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-5a1 1 0 0 0-1-1H2'/%3E%3Crect width='8' height='8' x='14' y='2' rx='1'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--book-image {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='m20 13.7l-2.1-2.1a2 2 0 0 0-2.8 0L9.7 17'/%3E%3Cpath d='M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20'/%3E%3Ccircle cx='10' cy='8' r='2'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--book-open {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 7v14m-9-3a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h5a4 4 0 0 1 4 4a4 4 0 0 1 4-4h5a1 1 0 0 1 1 1v13a1 1 0 0 1-1 1h-6a3 3 0 0 0-3 3a3 3 0 0 0-3-3z'/%3E%3C/svg%3E");
    }
    .lucide--book-open-text {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 7v14m4-9h2m-2-4h2M3 18a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h5a4 4 0 0 1 4 4a4 4 0 0 1 4-4h5a1 1 0 0 1 1 1v13a1 1 0 0 1-1 1h-6a3 3 0 0 0-3 3a3 3 0 0 0-3-3zm3-6h2M6 8h2'/%3E%3C/svg%3E");
    }
    .lucide--book-text {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20M8 11h8M8 7h6'/%3E%3C/svg%3E");
    }
    .lucide--book-user {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M15 13a3 3 0 1 0-6 0'/%3E%3Cpath d='M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H19a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H6.5a1 1 0 0 1 0-5H20'/%3E%3Ccircle cx='12' cy='8' r='2'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--bookmark {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m19 21l-7-4l-7 4V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z'/%3E%3C/svg%3E");
    }
    .lucide--bot {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M12 8V4H8'/%3E%3Crect width='16' height='12' x='4' y='8' rx='2'/%3E%3Cpath d='M2 14h2m16 0h2m-7-1v2m-6-2v2'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--bot-message-square {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 6V2H8m7 9v2M2 12h2m16 0h2m-2 4a2 2 0 0 1-2 2H8.828a2 2 0 0 0-1.414.586l-2.202 2.202A.71.71 0 0 1 4 20.286V8a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2zM9 11v2'/%3E%3C/svg%3E");
    }
    .lucide--box {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M21 8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16Z'/%3E%3Cpath d='m3.3 7l8.7 5l8.7-5M12 22V12'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--brain {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M12 18V5m3 8a4.17 4.17 0 0 1-3-4a4.17 4.17 0 0 1-3 4m8.598-6.5A3 3 0 1 0 12 5a3 3 0 1 0-5.598 1.5'/%3E%3Cpath d='M17.997 5.125a4 4 0 0 1 2.526 5.77'/%3E%3Cpath d='M18 18a4 4 0 0 0 2-7.464'/%3E%3Cpath d='M19.967 17.483A4 4 0 1 1 12 18a4 4 0 1 1-7.967-.517'/%3E%3Cpath d='M6 18a4 4 0 0 1-2-7.464'/%3E%3Cpath d='M6.003 5.125a4 4 0 0 0-2.526 5.77'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--brain-circuit {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M12 5a3 3 0 1 0-5.997.125a4 4 0 0 0-2.526 5.77a4 4 0 0 0 .556 6.588A4 4 0 1 0 12 18Z'/%3E%3Cpath d='M9 13a4.5 4.5 0 0 0 3-4M6.003 5.125A3 3 0 0 0 6.401 6.5m-2.924 4.396a4 4 0 0 1 .585-.396M6 18a4 4 0 0 1-1.967-.516M12 13h4m-4 5h6a2 2 0 0 1 2 2v1M12 8h8m-4 0V5a2 2 0 0 1 2-2'/%3E%3Ccircle cx='16' cy='13' r='.5'/%3E%3Ccircle cx='18' cy='3' r='.5'/%3E%3Ccircle cx='20' cy='21' r='.5'/%3E%3Ccircle cx='20' cy='8' r='.5'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--brain-cog {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='m10.852 14.772l-.383.923m.383-6.467l-.383-.923m2.679 6.467l.382.924m.001-7.391l-.383.923m1.624 1.624l.923-.383m-.923 2.679l.923.383M17.598 6.5A3 3 0 1 0 12 5a3 3 0 0 0-5.63-1.446a3 3 0 0 0-.368 1.571a4 4 0 0 0-2.525 5.771'/%3E%3Cpath d='M17.998 5.125a4 4 0 0 1 2.525 5.771'/%3E%3Cpath d='M19.505 10.294a4 4 0 0 1-1.5 7.706'/%3E%3Cpath d='M4.032 17.483A4 4 0 0 0 11.464 20c.18-.311.892-.311 1.072 0a4 4 0 0 0 7.432-2.516'/%3E%3Cpath d='M4.5 10.291A4 4 0 0 0 6 18m.002-12.875a3 3 0 0 0 .4 1.375m2.826 4.352l-.923-.383m.923 2.679l-.923.383'/%3E%3Ccircle cx='12' cy='12' r='3'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--briefcase {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M16 20V4a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16'/%3E%3Crect width='20' height='14' x='2' y='6' rx='2'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--brush {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='m11 10l3 3m-7.5 8A3.5 3.5 0 1 0 3 17.5a2.62 2.62 0 0 1-.708 1.792A1 1 0 0 0 3 21z'/%3E%3Cpath d='M9.969 17.031L21.378 5.624a1 1 0 0 0-3.002-3.002L6.967 14.031'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--brush-cleaning {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m16 22l-1-4m4-4.01a1 1 0 0 0 1-1V12a2 2 0 0 0-2-2h-3a1 1 0 0 1-1-1V4a2 2 0 0 0-4 0v5a1 1 0 0 1-1 1H6a2 2 0 0 0-2 2v.99a1 1 0 0 0 1 1M5 14h14l1.973 6.767A1 1 0 0 1 20 22H4a1 1 0 0 1-.973-1.233zm3 8l1-4'/%3E%3C/svg%3E");
    }
    .lucide--calendar {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M8 2v4m8-4v4'/%3E%3Crect width='18' height='18' x='3' y='4' rx='2'/%3E%3Cpath d='M3 10h18'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--calendar-1 {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M11 14h1v4m4-16v4M3 10h18M8 2v4'/%3E%3Crect width='18' height='18' x='3' y='4' rx='2'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--calendar-clock {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M16 14v2.2l1.6 1M16 2v4m5 1.5V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h3.5M3 10h5m0-8v4'/%3E%3Ccircle cx='16' cy='16' r='6'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--calendar-cog {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='m15.228 16.852l-.923-.383m.923 2.679l-.923.383M16 2v4m.47 8.305l.382.923m0 5.544l-.383.924m2.679-6.468l.383-.923m-.001 7.391l-.382-.924m1.624-3.92l.924-.383m-.924 2.679l.924.383M21 10.592V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h6M3 10h18M8 2v4'/%3E%3Ccircle cx='18' cy='18' r='3'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--calendar-days {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M8 2v4m8-4v4'/%3E%3Crect width='18' height='18' x='3' y='4' rx='2'/%3E%3Cpath d='M3 10h18M8 14h.01M12 14h.01M16 14h.01M8 18h.01M12 18h.01M16 18h.01'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--calendar-plus {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M16 19h6M16 2v4m3 10v6m2-9.402V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h8.5M3 10h18M8 2v4'/%3E%3C/svg%3E");
    }
    .lucide--calendar-range {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Crect width='18' height='18' x='3' y='4' rx='2'/%3E%3Cpath d='M16 2v4M3 10h18M8 2v4m9 8h-6m2 4H7m0-4h.01M17 18h.01'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--chart-bar {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3 3v16a2 2 0 0 0 2 2h16M7 16h8m-8-5h12M7 6h3'/%3E%3C/svg%3E");
    }
    .lucide--check {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M20 6L9 17l-5-5'/%3E%3C/svg%3E");
    }
    .lucide--check-check {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M18 6L7 17l-5-5m20-2l-7.5 7.5L13 16'/%3E%3C/svg%3E");
    }
    .lucide--check-circle-2 {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Ccircle cx='12' cy='12' r='10'/%3E%3Cpath d='m9 12l2 2l4-4'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--chevron-down {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m6 9l6 6l6-6'/%3E%3C/svg%3E");
    }
    .lucide--chevron-left {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m15 18l-6-6l6-6'/%3E%3C/svg%3E");
    }
    .lucide--chevron-right {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m9 18l6-6l-6-6'/%3E%3C/svg%3E");
    }
    .lucide--chevron-up {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m18 15l-6-6l-6 6'/%3E%3C/svg%3E");
    }
    .lucide--chevrons-up-down {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m7 15l5 5l5-5M7 9l5-5l5 5'/%3E%3C/svg%3E");
    }
    .lucide--circle-alert {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Ccircle cx='12' cy='12' r='10'/%3E%3Cpath d='M12 8v4m0 4h.01'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--circle-dollar-sign {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Ccircle cx='12' cy='12' r='10'/%3E%3Cpath d='M16 8h-6a2 2 0 1 0 0 4h4a2 2 0 1 1 0 4H8m4 2V6'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--circle-dot {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Ccircle cx='12' cy='12' r='10'/%3E%3Ccircle cx='12' cy='12' r='1'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--circle-help,
    .lucide--circle-question-mark {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Ccircle cx='12' cy='12' r='10'/%3E%3Cpath d='M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3m.08 4h.01'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--clipboard {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Crect width='8' height='4' x='8' y='2' rx='1' ry='1'/%3E%3Cpath d='M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--clipboard-check {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Crect width='8' height='4' x='8' y='2' rx='1' ry='1'/%3E%3Cpath d='M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2'/%3E%3Cpath d='m9 14l2 2l4-4'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--clipboard-list {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Crect width='8' height='4' x='8' y='2' rx='1' ry='1'/%3E%3Cpath d='M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2m4 7h4m-4 5h4m-8-5h.01M8 16h.01'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--clock {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M12 6v6l4 2'/%3E%3Ccircle cx='12' cy='12' r='10'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--code {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m16 18l6-6l-6-6M8 6l-6 6l6 6'/%3E%3C/svg%3E");
    }
    .lucide--code-2 {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m18 16l4-4l-4-4M6 8l-4 4l4 4m8.5-12l-5 16'/%3E%3C/svg%3E");
    }
    .lucide--columns-3-cog {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M10.5 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v5.5m-6.7 9.1l1-.4M15 3v7.5m.2 6.4l-.9-.3m2.3 5.1l.3-.9m-.1-5.5l-.4-1m2.7.9l.3-.9m.2 7.4l-.4-1m1.5-3.9l1-.4m0 3l-.9-.3M9 3v18'/%3E%3Ccircle cx='18' cy='18' r='3'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--component {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M15.536 11.293a1 1 0 0 0 0 1.414l2.376 2.377a1 1 0 0 0 1.414 0l2.377-2.377a1 1 0 0 0 0-1.414l-2.377-2.377a1 1 0 0 0-1.414 0zm-13.239 0a1 1 0 0 0 0 1.414l2.377 2.377a1 1 0 0 0 1.414 0l2.377-2.377a1 1 0 0 0 0-1.414L6.088 8.916a1 1 0 0 0-1.414 0zm6.619 6.619a1 1 0 0 0 0 1.415l2.377 2.376a1 1 0 0 0 1.414 0l2.377-2.376a1 1 0 0 0 0-1.415l-2.377-2.376a1 1 0 0 0-1.414 0zm0-13.238a1 1 0 0 0 0 1.414l2.377 2.376a1 1 0 0 0 1.414 0l2.377-2.376a1 1 0 0 0 0-1.414l-2.377-2.377a1 1 0 0 0-1.414 0z'/%3E%3C/svg%3E");
    }
    .lucide--copy {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Crect width='14' height='14' x='8' y='8' rx='2' ry='2'/%3E%3Cpath d='M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--copy-plus {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M15 12v6m-3-3h6'/%3E%3Crect width='14' height='14' x='8' y='8' rx='2' ry='2'/%3E%3Cpath d='M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--corner-down-left {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M20 4v7a4 4 0 0 1-4 4H4'/%3E%3Cpath d='m9 10l-5 5l5 5'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--cpu {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M12 20v2m0-20v2m5 16v2m0-20v2M2 12h2m-2 5h2M2 7h2m16 5h2m-2 5h2M20 7h2M7 20v2M7 2v2'/%3E%3Crect width='16' height='16' x='4' y='4' rx='2'/%3E%3Crect width='8' height='8' x='8' y='8' rx='1'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--credit-card {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Crect width='20' height='14' x='2' y='5' rx='2'/%3E%3Cpath d='M2 10h20'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--diamond {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2.7 10.3a2.41 2.41 0 0 0 0 3.41l7.59 7.59a2.41 2.41 0 0 0 3.41 0l7.59-7.59a2.41 2.41 0 0 0 0-3.41L13.7 2.71a2.41 2.41 0 0 0-3.41 0Z'/%3E%3C/svg%3E");
    }
    .lucide--disc {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Ccircle cx='12' cy='12' r='10'/%3E%3Ccircle cx='12' cy='12' r='2'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--dollar-sign {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 2v20m5-17H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6'/%3E%3C/svg%3E");
    }
    .lucide--download {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M12 15V3m9 12v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4'/%3E%3Cpath d='m7 10l5 5l5-5'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--download-cloud {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M12 13v8l-4-4m4 4l4-4'/%3E%3Cpath d='M4.393 15.269A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.436 8.284'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--edit-2 {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M21.174 6.812a1 1 0 0 0-3.986-3.987L3.842 16.174a2 2 0 0 0-.5.83l-1.321 4.352a.5.5 0 0 0 .623.622l4.353-1.32a2 2 0 0 0 .83-.497z'/%3E%3C/svg%3E");
    }
    .lucide--ellipsis-vertical {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Ccircle cx='12' cy='12' r='1'/%3E%3Ccircle cx='12' cy='5' r='1'/%3E%3Ccircle cx='12' cy='19' r='1'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--eraser {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M21 21H8a2 2 0 0 1-1.42-.587l-3.994-3.999a2 2 0 0 1 0-2.828l10-10a2 2 0 0 1 2.829 0l5.999 6a2 2 0 0 1 0 2.828L12.834 21m-7.752-9.91l8.828 8.828'/%3E%3C/svg%3E");
    }
    .lucide--external-link {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M15 3h6v6m-11 5L21 3m-3 10v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6'/%3E%3C/svg%3E");
    }
    .lucide--eye {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M2.062 12.348a1 1 0 0 1 0-.696a10.75 10.75 0 0 1 19.876 0a1 1 0 0 1 0 .696a10.75 10.75 0 0 1-19.876 0'/%3E%3Ccircle cx='12' cy='12' r='3'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--eye-off {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M10.733 5.076a10.744 10.744 0 0 1 11.205 6.575a1 1 0 0 1 0 .696a10.8 10.8 0 0 1-1.444 2.49m-6.41-.679a3 3 0 0 1-4.242-4.242'/%3E%3Cpath d='M17.479 17.499a10.75 10.75 0 0 1-15.417-5.151a1 1 0 0 1 0-.696a10.75 10.75 0 0 1 4.446-5.143M2 2l20 20'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--figma {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M5 5.5A3.5 3.5 0 0 1 8.5 2H12v7H8.5A3.5 3.5 0 0 1 5 5.5M12 2h3.5a3.5 3.5 0 1 1 0 7H12z'/%3E%3Cpath d='M12 12.5a3.5 3.5 0 1 1 7 0a3.5 3.5 0 1 1-7 0m-7 7A3.5 3.5 0 0 1 8.5 16H12v3.5a3.5 3.5 0 1 1-7 0m0-7A3.5 3.5 0 0 1 8.5 9H12v7H8.5A3.5 3.5 0 0 1 5 12.5'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--file {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z'/%3E%3Cpath d='M14 2v4a2 2 0 0 0 2 2h4'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--file-clock {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M14 2v4a2 2 0 0 0 2 2h4'/%3E%3Cpath d='M16 22h2a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v3m4 7v2.2l1.6 1'/%3E%3Ccircle cx='8' cy='16' r='6'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--file-image {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z'/%3E%3Cpath d='M14 2v4a2 2 0 0 0 2 2h4'/%3E%3Ccircle cx='10' cy='12' r='2'/%3E%3Cpath d='m20 17l-1.296-1.296a2.41 2.41 0 0 0-3.408 0L9 22'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--file-minus {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z'/%3E%3Cpath d='M14 2v4a2 2 0 0 0 2 2h4M9 15h6'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--file-pen {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M12.5 22H18a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v9.5'/%3E%3Cpath d='M14 2v4a2 2 0 0 0 2 2h4m-6.622 7.626a1 1 0 1 0-3.004-3.004l-5.01 5.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--file-plus {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z'/%3E%3Cpath d='M14 2v4a2 2 0 0 0 2 2h4M9 15h6m-3 3v-6'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--file-sliders {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z'/%3E%3Cpath d='M14 2v4a2 2 0 0 0 2 2h4M8 12h8m-6-1v2m-2 4h8m-2-1v2'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--file-spreadsheet {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z'/%3E%3Cpath d='M14 2v4a2 2 0 0 0 2 2h4M8 13h2m4 0h2m-8 4h2m4 0h2'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--file-symlink {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='m10 18l3-3l-3-3m4-10v4a2 2 0 0 0 2 2h4'/%3E%3Cpath d='M4 11V4a2 2 0 0 1 2-2h9l5 5v13a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h7'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--file-text {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z'/%3E%3Cpath d='M14 2v4a2 2 0 0 0 2 2h4M10 9H8m8 4H8m8 4H8'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--file-up {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z'/%3E%3Cpath d='M14 2v4a2 2 0 0 0 2 2h4m-8 4v6m3-3l-3-3l-3 3'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--files {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M15 2a2 2 0 0 1 1.414.586l4 4A2 2 0 0 1 21 8v7a2 2 0 0 1-2 2h-8a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2z'/%3E%3Cpath d='M15 2v4a2 2 0 0 0 2 2h4M5 7a2 2 0 0 0-2 2v11a2 2 0 0 0 2 2h8a2 2 0 0 0 1.732-1'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--flag {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 22V4a1 1 0 0 1 .4-.8A6 6 0 0 1 8 2c3 0 5 2 7.333 2q2 0 3.067-.8A1 1 0 0 1 20 4v10a1 1 0 0 1-.4.8A6 6 0 0 1 16 16c-3 0-5-2-8-2a6 6 0 0 0-4 1.528'/%3E%3C/svg%3E");
    }
    .lucide--flame {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 3q1 4 4 6.5t3 5.5a1 1 0 0 1-14 0a5 5 0 0 1 1-3a1 1 0 0 0 5 0c0-2-1.5-3-1.5-5q0-2 2.5-4'/%3E%3C/svg%3E");
    }
    .lucide--flask-conical {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M14 2v6a2 2 0 0 0 .245.96l5.51 10.08A2 2 0 0 1 18 22H6a2 2 0 0 1-1.755-2.96l5.51-10.08A2 2 0 0 0 10 8V2M6.453 15h11.094M8.5 2h7'/%3E%3C/svg%3E");
    }
    .lucide--folder {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z'/%3E%3C/svg%3E");
    }
    .lucide--folder-archive {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Ccircle cx='15' cy='19' r='2'/%3E%3Cpath d='M20.9 19.8A2 2 0 0 0 22 18V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2h5.1m5.9-9v-1m0 7v-2'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--folder-check {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z'/%3E%3Cpath d='m9 13l2 2l4-4'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--folder-git-2 {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M9 20H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v5'/%3E%3Ccircle cx='13' cy='12' r='2'/%3E%3Cpath d='M18 19c-2.8 0-5-2.2-5-5v8'/%3E%3Ccircle cx='20' cy='19' r='2'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--folder-input {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M2 9V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-1m0-4h10'/%3E%3Cpath d='m9 16l3-3l-3-3'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--folder-kanban {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 20h16a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.93a2 2 0 0 1-1.66-.9l-.82-1.2A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13c0 1.1.9 2 2 2m4-10v4m4-4v2m4-2v6'/%3E%3C/svg%3E");
    }
    .lucide--folder-open {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m6 14l1.5-2.9A2 2 0 0 1 9.24 10H20a2 2 0 0 1 1.94 2.5l-1.54 6a2 2 0 0 1-1.95 1.5H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H18a2 2 0 0 1 2 2v2'/%3E%3C/svg%3E");
    }
    .lucide--folder-pen {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M2 11.5V5a2 2 0 0 1 2-2h3.9c.7 0 1.3.3 1.7.9l.8 1.2c.4.6 1 .9 1.7.9H20a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-9.5'/%3E%3Cpath d='M11.378 13.626a1 1 0 1 0-3.004-3.004l-5.01 5.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--folder-plus {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 10v6m-3-3h6m5 7a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z'/%3E%3C/svg%3E");
    }
    .lucide--folder-up {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Zm-8-10v6'/%3E%3Cpath d='m9 13l3-3l3 3'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--folders {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M20 5a2 2 0 0 1 2 2v7a2 2 0 0 1-2 2H9a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h2.5a1.5 1.5 0 0 1 1.2.6l.6.8a1.5 1.5 0 0 0 1.2.6z'/%3E%3Cpath d='M3 8.268a2 2 0 0 0-1 1.738V19a2 2 0 0 0 2 2h11a2 2 0 0 0 1.732-1'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--form-input {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Crect width='20' height='12' x='2' y='6' rx='2'/%3E%3Cpath d='M12 12h.01M17 12h.01M7 12h.01'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--fullscreen {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M3 7V5a2 2 0 0 1 2-2h2m10 0h2a2 2 0 0 1 2 2v2m0 10v2a2 2 0 0 1-2 2h-2M7 21H5a2 2 0 0 1-2-2v-2'/%3E%3Crect width='10' height='8' x='7' y='8' rx='1'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--gauge {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m12 14l4-4M3.34 19a10 10 0 1 1 17.32 0'/%3E%3C/svg%3E");
    }
    .lucide--gauge-circle {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M15.6 2.7a10 10 0 1 0 5.7 5.7'/%3E%3Ccircle cx='12' cy='12' r='2'/%3E%3Cpath d='M13.4 10.6L19 5'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--gift {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Crect width='18' height='4' x='3' y='8' rx='1'/%3E%3Cpath d='M12 8v13m7-9v7a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2v-7m2.5-4a2.5 2.5 0 0 1 0-5A4.8 8 0 0 1 12 8a4.8 8 0 0 1 4.5-5a2.5 2.5 0 0 1 0 5'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--github {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M15 22v-4a4.8 4.8 0 0 0-1-3.5c3 0 6-2 6-5.5c.08-1.25-.27-2.48-1-3.5c.28-1.15.28-2.35 0-3.5c0 0-1 0-3 1.5c-2.64-.5-5.36-.5-8 0C6 2 5 2 5 2c-.3 1.15-.3 2.35 0 3.5A5.4 5.4 0 0 0 4 9c0 3.5 3 5.5 6 5.5c-.39.49-.68 1.05-.85 1.65S8.93 17.38 9 18v4'/%3E%3Cpath d='M9 18c-4.51 2-5-2-7-2'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--globe {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Ccircle cx='12' cy='12' r='10'/%3E%3Cpath d='M12 2a14.5 14.5 0 0 0 0 20a14.5 14.5 0 0 0 0-20M2 12h20'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--globe-2 {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M21.54 15H17a2 2 0 0 0-2 2v4.54M7 3.34V5a3 3 0 0 0 3 3a2 2 0 0 1 2 2c0 1.1.9 2 2 2a2 2 0 0 0 2-2c0-1.1.9-2 2-2h3.17M11 21.95V18a2 2 0 0 0-2-2a2 2 0 0 1-2-2v-1a2 2 0 0 0-2-2H2.05'/%3E%3Ccircle cx='12' cy='12' r='10'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--grid-2x2 {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M12 3v18m-9-9h18'/%3E%3Crect width='18' height='18' x='3' y='3' rx='2'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--grip-vertical {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Ccircle cx='9' cy='12' r='1'/%3E%3Ccircle cx='9' cy='5' r='1'/%3E%3Ccircle cx='9' cy='19' r='1'/%3E%3Ccircle cx='15' cy='12' r='1'/%3E%3Ccircle cx='15' cy='5' r='1'/%3E%3Ccircle cx='15' cy='19' r='1'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--handshake {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='m11 17l2 2a1 1 0 1 0 3-3'/%3E%3Cpath d='m14 14l2.5 2.5a1 1 0 1 0 3-3l-3.88-3.88a3 3 0 0 0-4.24 0l-.88.88a1 1 0 1 1-3-3l2.81-2.81a5.79 5.79 0 0 1 7.06-.87l.47.28a2 2 0 0 0 1.42.25L21 4'/%3E%3Cpath d='m21 3l1 11h-2M3 3L2 14l6.5 6.5a1 1 0 1 0 3-3M3 4h8'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--hard-drive {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M22 12H2m3.45-6.89L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11M6 16h.01M10 16h.01'/%3E%3C/svg%3E");
    }
    .lucide--hash {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 9h16M4 15h16M10 3L8 21m8-18l-2 18'/%3E%3C/svg%3E");
    }
    .lucide--headphones {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3 14h3a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-7a9 9 0 0 1 18 0v7a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h3'/%3E%3C/svg%3E");
    }
    .lucide--headset {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M3 11h3a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2zm0 0a9 9 0 1 1 18 0m0 0v5a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2z'/%3E%3Cpath d='M21 16v2a4 4 0 0 1-4 4h-5'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--heart {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 9.5a5.5 5.5 0 0 1 9.591-3.676a.56.56 0 0 0 .818 0A5.49 5.49 0 0 1 22 9.5c0 2.29-1.5 4-3 5.5l-5.492 5.313a2 2 0 0 1-3 .019L5 15c-1.5-1.5-3-3.2-3-5.5'/%3E%3C/svg%3E");
    }
    .lucide--heart-pulse {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M2 9.5a5.5 5.5 0 0 1 9.591-3.676a.56.56 0 0 0 .818 0A5.49 5.49 0 0 1 22 9.5c0 2.29-1.5 4-3 5.5l-5.492 5.313a2 2 0 0 1-3 .019L5 15c-1.5-1.5-3-3.2-3-5.5'/%3E%3Cpath d='M3.22 13H9.5l.5-1l2 4.5l2-7l1.5 3.5h5.27'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--help-circle {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Ccircle cx='12' cy='12' r='10'/%3E%3Cpath d='M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3m.08 4h.01'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--home {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M15 21v-8a1 1 0 0 0-1-1h-4a1 1 0 0 0-1 1v8'/%3E%3Cpath d='M3 10a2 2 0 0 1 .709-1.528l7-6a2 2 0 0 1 2.582 0l7 6A2 2 0 0 1 21 10v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--id-card {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M16 10h2m-2 4h2M6.17 15a3 3 0 0 1 5.66 0'/%3E%3Ccircle cx='9' cy='11' r='2'/%3E%3Crect width='20' height='14' x='2' y='5' rx='2'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--image {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Crect width='18' height='18' x='3' y='3' rx='2' ry='2'/%3E%3Ccircle cx='9' cy='9' r='2'/%3E%3Cpath d='m21 15l-3.086-3.086a2 2 0 0 0-2.828 0L6 21'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--image-down {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M10.3 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v10l-3.1-3.1a2 2 0 0 0-2.814.014L6 21'/%3E%3Cpath d='m14 19l3 3v-5.5m0 5.5l3-3'/%3E%3Ccircle cx='9' cy='9' r='2'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--image-plus {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M16 5h6m-3-3v6m2 3.5V19a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7.5'/%3E%3Cpath d='m21 15l-3.086-3.086a2 2 0 0 0-2.828 0L6 21'/%3E%3Ccircle cx='9' cy='9' r='2'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--info {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Ccircle cx='12' cy='12' r='10'/%3E%3Cpath d='M12 16v-4m0-4h.01'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--key-round {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M2.586 17.414A2 2 0 0 0 2 18.828V21a1 1 0 0 0 1 1h3a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1h1a1 1 0 0 0 1-1v-1a1 1 0 0 1 1-1h.172a2 2 0 0 0 1.414-.586l.814-.814a6.5 6.5 0 1 0-4-4z'/%3E%3Ccircle cx='16.5' cy='7.5' r='.5' fill='black'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--keyboard {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M10 8h.01M12 12h.01M14 8h.01M16 12h.01M18 8h.01M6 8h.01M7 16h10m-9-4h.01'/%3E%3Crect width='20' height='16' x='2' y='4' rx='2'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--layers {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M12.83 2.18a2 2 0 0 0-1.66 0L2.6 6.08a1 1 0 0 0 0 1.83l8.58 3.91a2 2 0 0 0 1.66 0l8.58-3.9a1 1 0 0 0 0-1.83z'/%3E%3Cpath d='M2 12a1 1 0 0 0 .58.91l8.6 3.91a2 2 0 0 0 1.65 0l8.58-3.9A1 1 0 0 0 22 12'/%3E%3Cpath d='M2 17a1 1 0 0 0 .58.91l8.6 3.91a2 2 0 0 0 1.65 0l8.58-3.9A1 1 0 0 0 22 17'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--layers-2 {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M13 13.74a2 2 0 0 1-2 0L2.5 8.87a1 1 0 0 1 0-1.74L11 2.26a2 2 0 0 1 2 0l8.5 4.87a1 1 0 0 1 0 1.74zm7 .545l1.5.845a1 1 0 0 1 0 1.74L13 21.74a2 2 0 0 1-2 0l-8.5-4.87a1 1 0 0 1 0-1.74l1.5-.845'/%3E%3C/svg%3E");
    }
    .lucide--layers-3 {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M12.83 2.18a2 2 0 0 0-1.66 0L2.6 6.08a1 1 0 0 0 0 1.83l8.58 3.91a2 2 0 0 0 1.66 0l8.58-3.9a1 1 0 0 0 0-1.83Z'/%3E%3Cpath d='m6.08 9.5l-3.5 1.6a1 1 0 0 0 0 1.81l8.6 3.91a2 2 0 0 0 1.65 0l8.58-3.9a1 1 0 0 0 0-1.83l-3.5-1.59'/%3E%3Cpath d='m6.08 14.5l-3.5 1.6a1 1 0 0 0 0 1.81l8.6 3.91a2 2 0 0 0 1.65 0l8.58-3.9a1 1 0 0 0 0-1.83l-3.5-1.59'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--layout {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Crect width='18' height='18' x='3' y='3' rx='2'/%3E%3Cpath d='M3 9h18M9 21V9'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--layout-dashboard {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Crect width='7' height='9' x='3' y='3' rx='1'/%3E%3Crect width='7' height='5' x='14' y='3' rx='1'/%3E%3Crect width='7' height='9' x='14' y='12' rx='1'/%3E%3Crect width='7' height='5' x='3' y='16' rx='1'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--layout-grid {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Crect width='7' height='7' x='3' y='3' rx='1'/%3E%3Crect width='7' height='7' x='14' y='3' rx='1'/%3E%3Crect width='7' height='7' x='14' y='14' rx='1'/%3E%3Crect width='7' height='7' x='3' y='14' rx='1'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--layout-panel-left {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Crect width='7' height='18' x='3' y='3' rx='1'/%3E%3Crect width='7' height='7' x='14' y='3' rx='1'/%3E%3Crect width='7' height='7' x='14' y='14' rx='1'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--layout-panel-top {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Crect width='18' height='7' x='3' y='3' rx='1'/%3E%3Crect width='7' height='7' x='3' y='14' rx='1'/%3E%3Crect width='7' height='7' x='14' y='14' rx='1'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--layout-template {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Crect width='18' height='7' x='3' y='3' rx='1'/%3E%3Crect width='9' height='7' x='3' y='14' rx='1'/%3E%3Crect width='5' height='7' x='16' y='14' rx='1'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--library-big {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Crect width='8' height='18' x='3' y='3' rx='1'/%3E%3Cpath d='M7 3v18m13.4-2.1c.2.5-.1 1.1-.6 1.3l-1.9.7c-.5.2-1.1-.1-1.3-.6L11.1 5.1c-.2-.5.1-1.1.6-1.3l1.9-.7c.5-.2 1.1.1 1.3.6Z'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--life-buoy {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Ccircle cx='12' cy='12' r='10'/%3E%3Cpath d='m4.93 4.93l4.24 4.24m5.66 0l4.24-4.24m-4.24 9.9l4.24 4.24m-9.9-4.24l-4.24 4.24'/%3E%3Ccircle cx='12' cy='12' r='4'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--lightbulb {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M15 14c.2-1 .7-1.7 1.5-2.5c1-.9 1.5-2.2 1.5-3.5A6 6 0 0 0 6 8c0 1 .2 2.2 1.5 3.5c.7.7 1.3 1.5 1.5 2.5m0 4h6m-5 4h4'/%3E%3C/svg%3E");
    }
    .lucide--line-chart {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M3 3v18h18'/%3E%3Cpath d='m19 9l-5 5l-4-4l-3 3'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--link {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71'/%3E%3Cpath d='M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--list {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3 5h.01M3 12h.01M3 19h.01M8 5h13M8 12h13M8 19h13'/%3E%3C/svg%3E");
    }
    .lucide--list-check {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M16 5H3m13 7H3m8 7H3m12-1l2 2l4-4'/%3E%3C/svg%3E");
    }
    .lucide--list-ordered {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M11 5h10m-10 7h10m-10 7h10M4 4h1v5M4 9h2m.5 11H3.4c0-1 2.6-1.925 2.6-3.5a1.5 1.5 0 0 0-2.6-1.02'/%3E%3C/svg%3E");
    }
    .lucide--list-plus {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M16 5H3m8 7H3m13 7H3M18 9v6m3-3h-6'/%3E%3C/svg%3E");
    }
    .lucide--list-start {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M3 5h6m-6 7h13M3 19h13m0-11l-3-3l3-3'/%3E%3Cpath d='M21 19V7a2 2 0 0 0-2-2h-6'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--list-todo {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M13 5h8m-8 7h8m-8 7h8M3 17l2 2l4-4'/%3E%3Crect width='6' height='6' x='3' y='4' rx='1'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--loader {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 2v4m4.2 1.8l2.9-2.9M18 12h4m-5.8 4.2l2.9 2.9M12 18v4m-7.1-2.9l2.9-2.9M2 12h4M4.9 4.9l2.9 2.9'/%3E%3C/svg%3E");
    }
    .lucide--lock {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Crect width='18' height='11' x='3' y='11' rx='2' ry='2'/%3E%3Cpath d='M7 11V7a5 5 0 0 1 10 0v4'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--log-in {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m10 17l5-5l-5-5m5 5H3m12-9h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4'/%3E%3C/svg%3E");
    }
    .lucide--log-out {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m16 17l5-5l-5-5m5 5H9m0 9H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4'/%3E%3C/svg%3E");
    }
    .lucide--mail {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='m22 7l-8.991 5.727a2 2 0 0 1-2.009 0L2 7'/%3E%3Crect width='20' height='16' x='2' y='4' rx='2'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--mail-plus {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M22 13V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v12c0 1.1.9 2 2 2h8'/%3E%3Cpath d='m22 7l-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7m17 9v6m-3-3h6'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--map {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M14.106 5.553a2 2 0 0 0 1.788 0l3.659-1.83A1 1 0 0 1 21 4.619v12.764a1 1 0 0 1-.553.894l-4.553 2.277a2 2 0 0 1-1.788 0l-4.212-2.106a2 2 0 0 0-1.788 0l-3.659 1.83A1 1 0 0 1 3 19.381V6.618a1 1 0 0 1 .553-.894l4.553-2.277a2 2 0 0 1 1.788 0zm.894.211v15M9 3.236v15'/%3E%3C/svg%3E");
    }
    .lucide--map-pin {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M20 10c0 4.993-5.539 10.193-7.399 11.799a1 1 0 0 1-1.202 0C9.539 20.193 4 14.993 4 10a8 8 0 0 1 16 0'/%3E%3Ccircle cx='12' cy='10' r='3'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--maximize {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3M3 16v3a2 2 0 0 0 2 2h3m8 0h3a2 2 0 0 0 2-2v-3'/%3E%3C/svg%3E");
    }
    .lucide--megaphone {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M11 6a13 13 0 0 0 8.4-2.8A1 1 0 0 1 21 4v12a1 1 0 0 1-1.6.8A13 13 0 0 0 11 14H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2z'/%3E%3Cpath d='M6 14a12 12 0 0 0 2.4 7.2a2 2 0 0 0 3.2-2.4A8 8 0 0 1 10 14M8 6v8'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--menu {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 5h16M4 12h16M4 19h16'/%3E%3C/svg%3E");
    }
    .lucide--message-circle {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2.992 16.342a2 2 0 0 1 .094 1.167l-1.065 3.29a1 1 0 0 0 1.236 1.168l3.413-.998a2 2 0 0 1 1.099.092a10 10 0 1 0-4.777-4.719'/%3E%3C/svg%3E");
    }
    .lucide--message-circle-dashed {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M10.1 2.182a10 10 0 0 1 3.8 0m0 19.636a10 10 0 0 1-3.8 0M17.609 3.72a10 10 0 0 1 2.69 2.7M2.182 13.9a10 10 0 0 1 0-3.8m18.098 7.51a10 10 0 0 1-2.7 2.69m4.238-10.2a10 10 0 0 1 0 3.8M3.721 6.391a10 10 0 0 1 2.7-2.69m-.258 17.416l-2.906.85a1 1 0 0 1-1.236-1.169l.965-2.98'/%3E%3C/svg%3E");
    }
    .lucide--message-square {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M22 17a2 2 0 0 1-2 2H6.828a2 2 0 0 0-1.414.586l-2.202 2.202A.71.71 0 0 1 2 21.286V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2z'/%3E%3C/svg%3E");
    }
    .lucide--messages-square {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M16 10a2 2 0 0 1-2 2H6.828a2 2 0 0 0-1.414.586l-2.202 2.202A.71.71 0 0 1 2 14.286V4a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2zm4-1a2 2 0 0 1 2 2v10.286a.71.71 0 0 1-1.212.502l-2.202-2.202A2 2 0 0 0 17.172 19H10a2 2 0 0 1-2-2v-1'/%3E%3C/svg%3E");
    }
    .lucide--mic {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M12 19v3m7-12v2a7 7 0 0 1-14 0v-2'/%3E%3Crect width='6' height='13' x='9' y='2' rx='3'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--mic-off {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M12 19v3m3-12.66V5a3 3 0 0 0-5.68-1.33m7.63 13.28A7 7 0 0 1 5 12v-2m13.89 3.23A7 7 0 0 0 19 12v-2M2 2l20 20'/%3E%3Cpath d='M9 9v3a3 3 0 0 0 5.12 2.12'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--minimize {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M8 3v3a2 2 0 0 1-2 2H3m18 0h-3a2 2 0 0 1-2-2V3M3 16h3a2 2 0 0 1 2 2v3m8 0v-3a2 2 0 0 1 2-2h3'/%3E%3C/svg%3E");
    }
    .lucide--minus {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M5 12h14'/%3E%3C/svg%3E");
    }
    .lucide--monitor-dot {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M12 17v4m10-8.693V15a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h8.693M8 21h8'/%3E%3Ccircle cx='19' cy='6' r='3'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--monitor-smartphone {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M18 8V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v7a2 2 0 0 0 2 2h8m-2 4v-3.96v3.15M7 19h5'/%3E%3Crect width='6' height='10' x='16' y='12' rx='2'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--moon {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M20.985 12.486a9 9 0 1 1-9.473-9.472c.405-.022.617.46.402.803a6 6 0 0 0 8.268 8.268c.344-.215.825-.004.803.401'/%3E%3C/svg%3E");
    }
    .lucide--more-horizontal {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Ccircle cx='12' cy='12' r='1'/%3E%3Ccircle cx='19' cy='12' r='1'/%3E%3Ccircle cx='5' cy='12' r='1'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--more-vertical {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Ccircle cx='12' cy='12' r='1'/%3E%3Ccircle cx='12' cy='5' r='1'/%3E%3Ccircle cx='12' cy='19' r='1'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--music {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M9 18V5l12-2v13'/%3E%3Ccircle cx='6' cy='18' r='3'/%3E%3Ccircle cx='18' cy='16' r='3'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--notebook {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M2 6h4m-4 4h4m-4 4h4m-4 4h4'/%3E%3Crect width='16' height='20' x='4' y='2' rx='2'/%3E%3Cpath d='M16 2v20'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--package {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M11 21.73a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73zm1 .27V12'/%3E%3Cpath d='M3.29 7L12 12l8.71-5M7.5 4.27l9 5.15'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--package-check {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='m16 16l2 2l4-4'/%3E%3Cpath d='M21 10V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l2-1.14M7.5 4.27l9 5.15'/%3E%3Cpath d='M3.29 7L12 12l8.71-5M12 22V12'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--package-open {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M12 22v-9m3.17-10.79a1.67 1.67 0 0 1 1.63 0L21 4.57a1.93 1.93 0 0 1 0 3.36L8.82 14.79a1.66 1.66 0 0 1-1.64 0L3 12.43a1.93 1.93 0 0 1 0-3.36z'/%3E%3Cpath d='M20 13v3.87a2.06 2.06 0 0 1-1.11 1.83l-6 3.08a1.93 1.93 0 0 1-1.78 0l-6-3.08A2.06 2.06 0 0 1 4 16.87V13'/%3E%3Cpath d='M21 12.43a1.93 1.93 0 0 0 0-3.36L8.83 2.2a1.64 1.64 0 0 0-1.63 0L3 4.57a1.93 1.93 0 0 0 0 3.36l12.18 6.86a1.64 1.64 0 0 0 1.63 0z'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--package-search {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M21 10V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l2-1.14M7.5 4.27l9 5.15'/%3E%3Cpath d='M3.29 7L12 12l8.71-5M12 22V12'/%3E%3Ccircle cx='18.5' cy='15.5' r='2.5'/%3E%3Cpath d='M20.27 17.27L22 19'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--paintbrush {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m14.622 17.897l-10.68-2.913M18.376 2.622a1 1 0 1 1 3.002 3.002L17.36 9.643a.5.5 0 0 0 0 .707l.944.944a2.41 2.41 0 0 1 0 3.408l-.944.944a.5.5 0 0 1-.707 0L8.354 7.348a.5.5 0 0 1 0-.707l.944-.944a2.41 2.41 0 0 1 3.408 0l.944.944a.5.5 0 0 0 .707 0zM9 8c-1.804 2.71-3.97 3.46-6.583 3.948a.507.507 0 0 0-.302.819l7.32 8.883a1 1 0 0 0 1.185.204C12.735 20.405 16 16.792 16 15'/%3E%3C/svg%3E");
    }
    .lucide--palette {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M12 22a1 1 0 0 1 0-20a10 9 0 0 1 10 9a5 5 0 0 1-5 5h-2.25a1.75 1.75 0 0 0-1.4 2.8l.3.4a1.75 1.75 0 0 1-1.4 2.8z'/%3E%3Ccircle cx='13.5' cy='6.5' r='.5' fill='black'/%3E%3Ccircle cx='17.5' cy='10.5' r='.5' fill='black'/%3E%3Ccircle cx='6.5' cy='12.5' r='.5' fill='black'/%3E%3Ccircle cx='8.5' cy='7.5' r='.5' fill='black'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--panel-left-close {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Crect width='18' height='18' x='3' y='3' rx='2'/%3E%3Cpath d='M9 3v18m7-6l-3-3l3-3'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--panel-left-dashed {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Crect width='18' height='18' x='3' y='3' rx='2'/%3E%3Cpath d='M9 14v1m0 4v2M9 3v2m0 4v1'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--paperclip {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m16 6l-8.414 8.586a2 2 0 0 0 2.829 2.829l8.414-8.586a4 4 0 1 0-5.657-5.657l-8.379 8.551a6 6 0 1 0 8.485 8.485l8.379-8.551'/%3E%3C/svg%3E");
    }
    .lucide--pause {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Crect width='5' height='18' x='14' y='3' rx='1'/%3E%3Crect width='5' height='18' x='5' y='3' rx='1'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--pen {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M21.174 6.812a1 1 0 0 0-3.986-3.987L3.842 16.174a2 2 0 0 0-.5.83l-1.321 4.352a.5.5 0 0 0 .623.622l4.353-1.32a2 2 0 0 0 .83-.497z'/%3E%3C/svg%3E");
    }
    .lucide--pen-line {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M13 21h8m.174-14.188a1 1 0 0 0-3.986-3.987L3.842 16.174a2 2 0 0 0-.5.83l-1.321 4.352a.5.5 0 0 0 .623.622l4.353-1.32a2 2 0 0 0 .83-.497z'/%3E%3C/svg%3E");
    }
    .lucide--pencil {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M21.174 6.812a1 1 0 0 0-3.986-3.987L3.842 16.174a2 2 0 0 0-.5.83l-1.321 4.352a.5.5 0 0 0 .623.622l4.353-1.32a2 2 0 0 0 .83-.497zM15 5l4 4'/%3E%3C/svg%3E");
    }
    .lucide--pencil-line {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M13 21h8M15 5l4 4m2.174-2.188a1 1 0 0 0-3.986-3.987L3.842 16.174a2 2 0 0 0-.5.83l-1.321 4.352a.5.5 0 0 0 .623.622l4.353-1.32a2 2 0 0 0 .83-.497z'/%3E%3C/svg%3E");
    }
    .lucide--pencil-ruler {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M13 7L8.7 2.7a2.41 2.41 0 0 0-3.4 0L2.7 5.3a2.41 2.41 0 0 0 0 3.4L7 13m1-7l2-2m8 12l2-2m-3-3l4.3 4.3c.94.94.94 2.46 0 3.4l-2.6 2.6c-.94.94-2.46.94-3.4 0L11 17M21.174 6.812a1 1 0 0 0-3.986-3.987L3.842 16.174a2 2 0 0 0-.5.83l-1.321 4.352a.5.5 0 0 0 .623.622l4.353-1.32a2 2 0 0 0 .83-.497zM15 5l4 4'/%3E%3C/svg%3E");
    }
    .lucide--percent {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M19 5L5 19'/%3E%3Ccircle cx='6.5' cy='6.5' r='2.5'/%3E%3Ccircle cx='17.5' cy='17.5' r='2.5'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--phone {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M13.832 16.568a1 1 0 0 0 1.213-.303l.355-.465A2 2 0 0 1 17 15h3a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2A18 18 0 0 1 2 4a2 2 0 0 1 2-2h3a2 2 0 0 1 2 2v3a2 2 0 0 1-.8 1.6l-.468.351a1 1 0 0 0-.292 1.233a14 14 0 0 0 6.392 6.384'/%3E%3C/svg%3E");
    }
    .lucide--phone-missed {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m16 2l6 6m0-6l-6 6m-2.168 8.568a1 1 0 0 0 1.213-.303l.355-.465A2 2 0 0 1 17 15h3a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2A18 18 0 0 1 2 4a2 2 0 0 1 2-2h3a2 2 0 0 1 2 2v3a2 2 0 0 1-.8 1.6l-.468.351a1 1 0 0 0-.292 1.233a14 14 0 0 0 6.392 6.384'/%3E%3C/svg%3E");
    }
    .lucide--pie-chart {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M21.21 15.89A10 10 0 1 1 8 2.83'/%3E%3Cpath d='M22 12A10 10 0 0 0 12 2v10z'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--pilcrow-left {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M14 3v11m0-5h-3a3 3 0 0 1 0-6h9m-2 0v11m4 4H2l4-4m0 8l-4-4'/%3E%3C/svg%3E");
    }
    .lucide--pilcrow-right {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M10 3v11m0-5H7a1 1 0 0 1 0-6h8m-1 0v11m4 0l4 4H2m20 0l-4 4'/%3E%3C/svg%3E");
    }
    .lucide--pin {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 17v5M9 10.76a2 2 0 0 1-1.11 1.79l-1.78.9A2 2 0 0 0 5 15.24V16a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-.76a2 2 0 0 0-1.11-1.79l-1.78-.9A2 2 0 0 1 15 10.76V7a1 1 0 0 1 1-1a2 2 0 0 0 0-4H8a2 2 0 0 0 0 4a1 1 0 0 1 1 1z'/%3E%3C/svg%3E");
    }
    .lucide--plane-takeoff {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 22h20M6.36 17.4L4 17l-2-4l1.1-.55a2 2 0 0 1 1.8 0l.17.1a2 2 0 0 0 1.8 0L8 12L5 6l.9-.45a2 2 0 0 1 2.09.2l4.02 3a2 2 0 0 0 2.1.2l4.19-2.06a2.4 2.4 0 0 1 1.73-.17L21 7a1.4 1.4 0 0 1 .87 1.99l-.38.76c-.23.46-.6.84-1.07 1.08L7.58 17.2a2 2 0 0 1-1.22.18Z'/%3E%3C/svg%3E");
    }
    .lucide--play {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M5 5a2 2 0 0 1 3.008-1.728l11.997 6.998a2 2 0 0 1 .003 3.458l-12 7A2 2 0 0 1 5 19z'/%3E%3C/svg%3E");
    }
    .lucide--plus {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M5 12h14m-7-7v14'/%3E%3C/svg%3E");
    }
    .lucide--plus-circle {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Ccircle cx='12' cy='12' r='10'/%3E%3Cpath d='M8 12h8m-4-4v8'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--receipt {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M4 2v20l2-1l2 1l2-1l2 1l2-1l2 1l2-1l2 1V2l-2 1l-2-1l-2 1l-2-1l-2 1l-2-1l-2 1Z'/%3E%3Cpath d='M16 8h-6a2 2 0 1 0 0 4h4a2 2 0 1 1 0 4H8m4 1.5v-11'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--receipt-text {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 2v20l2-1l2 1l2-1l2 1l2-1l2 1l2-1l2 1V2l-2 1l-2-1l-2 1l-2-1l-2 1l-2-1l-2 1Zm10 6H8m8 4H8m5 4H8'/%3E%3C/svg%3E");
    }
    .lucide--refresh-ccw {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M21 12a9 9 0 0 0-9-9a9.75 9.75 0 0 0-6.74 2.74L3 8'/%3E%3Cpath d='M3 3v5h5m-5 4a9 9 0 0 0 9 9a9.75 9.75 0 0 0 6.74-2.74L21 16'/%3E%3Cpath d='M16 16h5v5'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--refresh-cw {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M3 12a9 9 0 0 1 9-9a9.75 9.75 0 0 1 6.74 2.74L21 8'/%3E%3Cpath d='M21 3v5h-5m5 4a9 9 0 0 1-9 9a9.75 9.75 0 0 1-6.74-2.74L3 16'/%3E%3Cpath d='M8 16H3v5'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--repeat {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='m17 2l4 4l-4 4'/%3E%3Cpath d='M3 11v-1a4 4 0 0 1 4-4h14M7 22l-4-4l4-4'/%3E%3Cpath d='M21 13v1a4 4 0 0 1-4 4H3'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--reply {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M20 18v-2a4 4 0 0 0-4-4H4'/%3E%3Cpath d='m9 17l-5-5l5-5'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--rocket {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M4.5 16.5c-1.5 1.26-2 5-2 5s3.74-.5 5-2c.71-.84.7-2.13-.09-2.91a2.18 2.18 0 0 0-2.91-.09M12 15l-3-3a22 22 0 0 1 2-3.95A12.88 12.88 0 0 1 22 2c0 2.72-.78 7.5-6 11a22.4 22.4 0 0 1-4 2'/%3E%3Cpath d='M9 12H4s.55-3.03 2-4c1.62-1.08 5 0 5 0m1 7v5s3.03-.55 4-2c1.08-1.62 0-5 0-5'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--rotate-ccw {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M3 12a9 9 0 1 0 9-9a9.75 9.75 0 0 0-6.74 2.74L3 8'/%3E%3Cpath d='M3 3v5h5'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--rotate-cw {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M21 12a9 9 0 1 1-9-9c2.52 0 4.93 1 6.74 2.74L21 8'/%3E%3Cpath d='M21 3v5h-5'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--route {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Ccircle cx='6' cy='19' r='3'/%3E%3Cpath d='M9 19h8.5a3.5 3.5 0 0 0 0-7h-11a3.5 3.5 0 0 1 0-7H15'/%3E%3Ccircle cx='18' cy='5' r='3'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--save {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M15.2 3a2 2 0 0 1 1.4.6l3.8 3.8a2 2 0 0 1 .6 1.4V19a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2z'/%3E%3Cpath d='M17 21v-7a1 1 0 0 0-1-1H8a1 1 0 0 0-1 1v7M7 3v4a1 1 0 0 0 1 1h7'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--scroll-text {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M15 12h-5m5-4h-5m9 9V5a2 2 0 0 0-2-2H4'/%3E%3Cpath d='M8 21h12a2 2 0 0 0 2-2v-1a1 1 0 0 0-1-1H11a1 1 0 0 0-1 1v1a2 2 0 1 1-4 0V5a2 2 0 1 0-4 0v2a1 1 0 0 0 1 1h3'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--search {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='m21 21l-4.34-4.34'/%3E%3Ccircle cx='11' cy='11' r='8'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--send {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M14.536 21.686a.5.5 0 0 0 .937-.024l6.5-19a.496.496 0 0 0-.635-.635l-19 6.5a.5.5 0 0 0-.024.937l7.93 3.18a2 2 0 0 1 1.112 1.11zm7.318-19.539l-10.94 10.939'/%3E%3C/svg%3E");
    }
    .lucide--send-horizonal {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3.714 3.048a.498.498 0 0 0-.683.627l2.843 7.627a2 2 0 0 1 0 1.396l-2.842 7.627a.498.498 0 0 0 .682.627l18-8.5a.5.5 0 0 0 0-.904zM6 12h16'/%3E%3C/svg%3E");
    }
    .lucide--server {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Crect width='20' height='8' x='2' y='2' rx='2' ry='2'/%3E%3Crect width='20' height='8' x='2' y='14' rx='2' ry='2'/%3E%3Cpath d='M6 6h.01M6 18h.01'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--settings {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M9.671 4.136a2.34 2.34 0 0 1 4.659 0a2.34 2.34 0 0 0 3.319 1.915a2.34 2.34 0 0 1 2.33 4.033a2.34 2.34 0 0 0 0 3.831a2.34 2.34 0 0 1-2.33 4.033a2.34 2.34 0 0 0-3.319 1.915a2.34 2.34 0 0 1-4.659 0a2.34 2.34 0 0 0-3.32-1.915a2.34 2.34 0 0 1-2.33-4.033a2.34 2.34 0 0 0 0-3.831A2.34 2.34 0 0 1 6.35 6.051a2.34 2.34 0 0 0 3.319-1.915'/%3E%3Ccircle cx='12' cy='12' r='3'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--settings-2 {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M14 17H5M19 7h-9'/%3E%3Ccircle cx='17' cy='17' r='3'/%3E%3Ccircle cx='7' cy='7' r='3'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--shapes {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M8.3 10a.7.7 0 0 1-.626-1.079L11.4 3a.7.7 0 0 1 1.198-.043L16.3 8.9a.7.7 0 0 1-.572 1.1Z'/%3E%3Crect width='7' height='7' x='3' y='14' rx='1'/%3E%3Ccircle cx='17.5' cy='17.5' r='3.5'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--share-2 {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Ccircle cx='18' cy='5' r='3'/%3E%3Ccircle cx='6' cy='12' r='3'/%3E%3Ccircle cx='18' cy='19' r='3'/%3E%3Cpath d='m8.59 13.51l6.83 3.98m-.01-10.98l-6.82 3.98'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--shield {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z'/%3E%3C/svg%3E");
    }
    .lucide--shield-check {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z'/%3E%3Cpath d='m9 12l2 2l4-4'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--shield-ellipsis {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1zM8 12h.01M12 12h.01M16 12h.01'/%3E%3C/svg%3E");
    }
    .lucide--shield-user {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z'/%3E%3Cpath d='M6.376 18.91a6 6 0 0 1 11.249.003'/%3E%3Ccircle cx='12' cy='11' r='4'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--shopping-bag {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M16 10a4 4 0 0 1-8 0M3.103 6.034h17.794'/%3E%3Cpath d='M3.4 5.467a2 2 0 0 0-.4 1.2V20a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6.667a2 2 0 0 0-.4-1.2l-2-2.667A2 2 0 0 0 17 2H7a2 2 0 0 0-1.6.8z'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--shopping-cart {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Ccircle cx='8' cy='21' r='1'/%3E%3Ccircle cx='19' cy='21' r='1'/%3E%3Cpath d='M2.05 2.05h2l2.66 12.42a2 2 0 0 0 2 1.58h9.78a2 2 0 0 0 1.95-1.57l1.65-7.43H5.12'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--sliders-horizontal {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M10 5H3m9 14H3M14 3v4m2 10v4m5-9h-9m9 7h-5m5-14h-7m-6 5v4m0-2H3'/%3E%3C/svg%3E");
    }
    .lucide--smile {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Ccircle cx='12' cy='12' r='10'/%3E%3Cpath d='M8 14s1.5 2 4 2s4-2 4-2M9 9h.01M15 9h.01'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--smile-plus {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M22 11v1a10 10 0 1 1-9-10'/%3E%3Cpath d='M8 14s1.5 2 4 2s4-2 4-2M9 9h.01M15 9h.01M16 5h6m-3-3v6'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--sparkles {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M11.017 2.814a1 1 0 0 1 1.966 0l1.051 5.558a2 2 0 0 0 1.594 1.594l5.558 1.051a1 1 0 0 1 0 1.966l-5.558 1.051a2 2 0 0 0-1.594 1.594l-1.051 5.558a1 1 0 0 1-1.966 0l-1.051-5.558a2 2 0 0 0-1.594-1.594l-5.558-1.051a1 1 0 0 1 0-1.966l5.558-1.051a2 2 0 0 0 1.594-1.594zM20 2v4m2-2h-4'/%3E%3Ccircle cx='4' cy='20' r='2'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--square-check {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Crect width='18' height='18' x='3' y='3' rx='2'/%3E%3Cpath d='m9 12l2 2l4-4'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--square-user {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Crect width='18' height='18' x='3' y='3' rx='2'/%3E%3Ccircle cx='12' cy='10' r='3'/%3E%3Cpath d='M7 21v-2a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v2'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--star {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M11.525 2.295a.53.53 0 0 1 .95 0l2.31 4.679a2.12 2.12 0 0 0 1.595 1.16l5.166.756a.53.53 0 0 1 .294.904l-3.736 3.638a2.12 2.12 0 0 0-.611 1.878l.882 5.14a.53.53 0 0 1-.771.56l-4.618-2.428a2.12 2.12 0 0 0-1.973 0L6.396 21.01a.53.53 0 0 1-.77-.56l.881-5.139a2.12 2.12 0 0 0-.611-1.879L2.16 9.795a.53.53 0 0 1 .294-.906l5.165-.755a2.12 2.12 0 0 0 1.597-1.16z'/%3E%3C/svg%3E");
    }
    .lucide--stars {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M11.017 2.814a1 1 0 0 1 1.966 0l1.051 5.558a2 2 0 0 0 1.594 1.594l5.558 1.051a1 1 0 0 1 0 1.966l-5.558 1.051a2 2 0 0 0-1.594 1.594l-1.051 5.558a1 1 0 0 1-1.966 0l-1.051-5.558a2 2 0 0 0-1.594-1.594l-5.558-1.051a1 1 0 0 1 0-1.966l5.558-1.051a2 2 0 0 0 1.594-1.594zM20 2v4m2-2h-4'/%3E%3Ccircle cx='4' cy='20' r='2'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--store {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M15 21v-5a1 1 0 0 0-1-1h-4a1 1 0 0 0-1 1v5m8.774-10.69a1.12 1.12 0 0 0-1.549 0a2.5 2.5 0 0 1-3.451 0a1.12 1.12 0 0 0-1.548 0a2.5 2.5 0 0 1-3.452 0a1.12 1.12 0 0 0-1.549 0a2.5 2.5 0 0 1-3.77-3.248l2.889-4.184A2 2 0 0 1 7 2h10a2 2 0 0 1 1.653.873l2.895 4.192a2.5 2.5 0 0 1-3.774 3.244'/%3E%3Cpath d='M4 10.95V19a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8.05'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--sun {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Ccircle cx='12' cy='12' r='4'/%3E%3Cpath d='M12 2v2m0 16v2M4.93 4.93l1.41 1.41m11.32 11.32l1.41 1.41M2 12h2m16 0h2M6.34 17.66l-1.41 1.41M19.07 4.93l-1.41 1.41'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--sun-moon {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 2v2m2.837 12.385a6 6 0 1 1-7.223-7.222c.624-.147.97.66.715 1.248a4 4 0 0 0 5.26 5.259c.589-.255 1.396.09 1.248.715M16 12a4 4 0 0 0-4-4m7-3l-1.256 1.256M20 12h2'/%3E%3C/svg%3E");
    }
    .lucide--target {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Ccircle cx='12' cy='12' r='10'/%3E%3Ccircle cx='12' cy='12' r='6'/%3E%3Ccircle cx='12' cy='12' r='2'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--telescope {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='m10.065 12.493l-6.18 1.318a.934.934 0 0 1-1.108-.702l-.537-2.15a1.07 1.07 0 0 1 .691-1.265l13.504-4.44m-2.875 6.493l4.332-.924M16 21l-3.105-6.21'/%3E%3Cpath d='M16.485 5.94a2 2 0 0 1 1.455-2.425l1.09-.272a1 1 0 0 1 1.212.727l1.515 6.06a1 1 0 0 1-.727 1.213l-1.09.272a2 2 0 0 1-2.425-1.455zM6.158 8.633l1.114 4.456M8 21l3.105-6.21'/%3E%3Ccircle cx='12' cy='13' r='2'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--terminal {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 19h8M4 17l6-6l-6-6'/%3E%3C/svg%3E");
    }
    .lucide--terminal-square {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='m7 11l2-2l-2-2m4 6h4'/%3E%3Crect width='18' height='18' x='3' y='3' rx='2' ry='2'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--text {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M15 18H3M17 6H3m18 6H3'/%3E%3C/svg%3E");
    }
    .lucide--thumbs-down {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M17 14V2M9 18.12L10 14H4.17a2 2 0 0 1-1.92-2.56l2.33-8A2 2 0 0 1 6.5 2H20a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-2.76a2 2 0 0 0-1.79 1.11L12 22a3.13 3.13 0 0 1-3-3.88'/%3E%3C/svg%3E");
    }
    .lucide--thumbs-up {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M7 10v12m8-16.12L14 10h5.83a2 2 0 0 1 1.92 2.56l-2.33 8A2 2 0 0 1 17.5 22H4a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h2.76a2 2 0 0 0 1.79-1.11L12 2a3.13 3.13 0 0 1 3 3.88'/%3E%3C/svg%3E");
    }
    .lucide--ticket-check {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M2 9a3 3 0 0 1 0 6v2a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-2a3 3 0 0 1 0-6V7a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2Z'/%3E%3Cpath d='m9 12l2 2l4-4'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--toggle-right {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Ccircle cx='15' cy='12' r='3'/%3E%3Crect width='20' height='14' x='2' y='5' rx='7'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--trash {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6M3 6h18M8 6V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2'/%3E%3C/svg%3E");
    }
    .lucide--trash-2 {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M10 11v6m4-6v6m5-11v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6M3 6h18M8 6V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2'/%3E%3C/svg%3E");
    }
    .lucide--trending-down {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M16 17h6v-6'/%3E%3Cpath d='m22 17l-8.5-8.5l-5 5L2 7'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--triangle-alert {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m21.73 18l-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3M12 9v4m0 4h.01'/%3E%3C/svg%3E");
    }
    .lucide--truck {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M14 18V6a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2v11a1 1 0 0 0 1 1h2m10 0H9m10 0h2a1 1 0 0 0 1-1v-3.65a1 1 0 0 0-.22-.624l-3.48-4.35A1 1 0 0 0 17.52 8H14'/%3E%3Ccircle cx='17' cy='18' r='2'/%3E%3Ccircle cx='7' cy='18' r='2'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--undo-2 {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M9 14L4 9l5-5'/%3E%3Cpath d='M4 9h10.5a5.5 5.5 0 0 1 5.5 5.5a5.5 5.5 0 0 1-5.5 5.5H11'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--unplug {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m19 5l3-3M2 22l3-3m1.3 1.3a2.4 2.4 0 0 0 3.4 0L12 18l-6-6l-2.3 2.3a2.4 2.4 0 0 0 0 3.4Zm1.2-6.8L10 11m.5 5.5L13 14m-1-8l6 6l2.3-2.3a2.4 2.4 0 0 0 0-3.4l-2.6-2.6a2.4 2.4 0 0 0-3.4 0Z'/%3E%3C/svg%3E");
    }
    .lucide--upload {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 3v12m5-7l-5-5l-5 5m14 7v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4'/%3E%3C/svg%3E");
    }
    .lucide--upload-cloud {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M12 13v8m-8-6.101A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242'/%3E%3Cpath d='m8 17l4-4l4 4'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--user {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2'/%3E%3Ccircle cx='12' cy='7' r='4'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--user-circle {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Ccircle cx='12' cy='12' r='10'/%3E%3Ccircle cx='12' cy='10' r='3'/%3E%3Cpath d='M7 20.662V19a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v1.662'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--user-minus {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2'/%3E%3Ccircle cx='9' cy='7' r='4'/%3E%3Cpath d='M22 11h-6'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--user-plus {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2'/%3E%3Ccircle cx='9' cy='7' r='4'/%3E%3Cpath d='M19 8v6m3-3h-6'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--user-round-check {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M2 21a8 8 0 0 1 13.292-6'/%3E%3Ccircle cx='10' cy='8' r='5'/%3E%3Cpath d='m16 19l2 2l4-4'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--user-round-plus {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M2 21a8 8 0 0 1 13.292-6'/%3E%3Ccircle cx='10' cy='8' r='5'/%3E%3Cpath d='M19 16v6m3-3h-6'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--user-round-x {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M2 21a8 8 0 0 1 11.873-7'/%3E%3Ccircle cx='10' cy='8' r='5'/%3E%3Cpath d='m17 17l5 5m0-5l-5 5'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--user-square {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Crect width='18' height='18' x='3' y='3' rx='2'/%3E%3Ccircle cx='12' cy='10' r='3'/%3E%3Cpath d='M7 21v-2a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v2'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--users {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2M16 3.128a4 4 0 0 1 0 7.744M22 21v-2a4 4 0 0 0-3-3.87'/%3E%3Ccircle cx='9' cy='7' r='4'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--video {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='m16 13l5.223 3.482a.5.5 0 0 0 .777-.416V7.87a.5.5 0 0 0-.752-.432L16 10.5'/%3E%3Crect width='14' height='12' x='2' y='6' rx='2'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--volume-2 {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M11 4.702a.705.705 0 0 0-1.203-.498L6.413 7.587A1.4 1.4 0 0 1 5.416 8H3a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h2.416a1.4 1.4 0 0 1 .997.413l3.383 3.384A.705.705 0 0 0 11 19.298zM16 9a5 5 0 0 1 0 6m3.364 3.364a9 9 0 0 0 0-12.728'/%3E%3C/svg%3E");
    }
    .lucide--wallet {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M19 7V4a1 1 0 0 0-1-1H5a2 2 0 0 0 0 4h15a1 1 0 0 1 1 1v4h-3a2 2 0 0 0 0 4h3a1 1 0 0 0 1-1v-2a1 1 0 0 0-1-1'/%3E%3Cpath d='M3 5v14a2 2 0 0 0 2 2h15a1 1 0 0 0 1-1v-4'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--wand {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M15 4V2m0 14v-2M8 9h2m10 0h2m-4.2 2.8L19 13m-4-4h.01m2.79-2.8L19 5M3 21l9-9m.2-5.8L11 5'/%3E%3C/svg%3E");
    }
    .lucide--wand-2 {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m21.64 3.64l-1.28-1.28a1.21 1.21 0 0 0-1.72 0L2.36 18.64a1.21 1.21 0 0 0 0 1.72l1.28 1.28a1.2 1.2 0 0 0 1.72 0L21.64 5.36a1.2 1.2 0 0 0 0-1.72M14 7l3 3M5 6v4m14 4v4M10 2v2M7 8H3m18 8h-4M11 3H9'/%3E%3C/svg%3E");
    }
    .lucide--warehouse {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M18 21V10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1v11'/%3E%3Cpath d='M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V8a2 2 0 0 1 1.132-1.803l7.95-3.974a2 2 0 0 1 1.837 0l7.948 3.974A2 2 0 0 1 22 8zM6 13h12M6 17h12'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--x {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M18 6L6 18M6 6l12 12'/%3E%3C/svg%3E");
    }
    .lucide--x-circle {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Ccircle cx='12' cy='12' r='10'/%3E%3Cpath d='m15 9l-6 6m0-6l6 6'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--x-square {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Crect width='18' height='18' x='3' y='3' rx='2' ry='2'/%3E%3Cpath d='m15 9l-6 6m0-6l6 6'/%3E%3C/g%3E%3C/svg%3E");
    }
    .lucide--zap {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 14a1 1 0 0 1-.78-1.63l9.9-10.2a.5.5 0 0 1 .86.46l-1.92 6.02A1 1 0 0 0 13 10h7a1 1 0 0 1 .78 1.63l-9.9 10.2a.5.5 0 0 1-.86-.46l1.92-6.02A1 1 0 0 0 11 14z'/%3E%3C/svg%3E");
    }
    .lucide--zoom-in {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Ccircle cx='11' cy='11' r='8'/%3E%3Cpath d='m21 21l-4.35-4.35M11 8v6m-3-3h6'/%3E%3C/g%3E%3C/svg%3E");
    }
    .range-xs {
        --range-thumb-size: calc(var(--size-selector, 0.25rem) * 4);
    }
    .ri--alert-line {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='m12.866 3l9.526 16.5a1 1 0 0 1-.866 1.5H2.474a1 1 0 0 1-.866-1.5L11.134 3a1 1 0 0 1 1.732 0m-8.66 16h15.588L12 5.5zM11 16h2v2h-2zm0-7h2v5h-2z'/%3E%3C/svg%3E");
    }
    .ri--arrow-down-line {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='m13 16.172l5.364-5.364l1.414 1.414L12 20l-7.778-7.778l1.414-1.414L11 16.172V4h2z'/%3E%3C/svg%3E");
    }
    .ri--arrow-up-line {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='M13 7.828V20h-2V7.828l-5.364 5.364l-1.414-1.414L12 4l7.778 7.778l-1.414 1.414z'/%3E%3C/svg%3E");
    }
    .ri--bar-chart-2-line {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='M2 13h6v8H2zm14-5h6v13h-6zM9 3h6v18H9zM4 15v4h2v-4zm7-10v14h2V5zm7 5v9h2v-9z'/%3E%3C/svg%3E");
    }
    .ri--bar-chart-line {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='M3 12h2v9H3zm16-4h2v13h-2zm-8-6h2v19h-2z'/%3E%3C/svg%3E");
    }
    .ri--box-3-line {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='m12 1l9.5 5.5v11L12 23l-9.5-5.5v-11zM5.494 7.078L12 10.844l6.506-3.766L12 3.31zM4.5 8.813v7.534L11 20.11v-7.533zM13 20.11l6.5-3.763V8.813L13 12.576z'/%3E%3C/svg%3E");
    }
    .ri--close-line {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='m12 10.587l4.95-4.95l1.414 1.414l-4.95 4.95l4.95 4.95l-1.415 1.414l-4.95-4.95l-4.949 4.95l-1.414-1.415l4.95-4.95l-4.95-4.95L7.05 5.638z'/%3E%3C/svg%3E");
    }
    .ri--code-line {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='m23 12l-7.071 7.071l-1.414-1.414L20.172 12l-5.657-5.657l1.414-1.414zM3.828 12l5.657 5.657l-1.414 1.414L1 12l7.071-7.071l1.414 1.414z'/%3E%3C/svg%3E");
    }
    .ri--code-s-slash-line {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='m24 12l-5.657 5.657l-1.414-1.414L21.172 12l-4.243-4.243l1.414-1.414zM2.828 12l4.243 4.243l-1.414 1.414L0 12l5.657-5.657L7.07 7.757zm6.96 9H7.66l6.552-18h2.128z'/%3E%3C/svg%3E");
    }
    .ri--computer-line {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='M4 16h16V5H4zm9 2v2h4v2H7v-2h4v-2H2.992A1 1 0 0 1 2 16.992V4.008C2 3.451 2.455 3 2.992 3h18.016c.548 0 .992.449.992 1.007v12.985c0 .557-.455 1.008-.992 1.008z'/%3E%3C/svg%3E");
    }
    .ri--dashboard-line {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='M14 21a1 1 0 0 1-1-1v-8a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1zM4 13a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1zm5-2V5H5v6zM4 21a1 1 0 0 1-1-1v-4a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v4a1 1 0 0 1-1 1zm1-2h4v-2H5zm10 0h4v-6h-4zM13 4a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v4a1 1 0 0 1-1 1h-6a1 1 0 0 1-1-1zm2 1v2h4V5z'/%3E%3C/svg%3E");
    }
    .ri--error-warning-line {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10m0-2a8 8 0 1 0 0-16a8 8 0 0 0 0 16m-1-5h2v2h-2zm0-8h2v6h-2z'/%3E%3C/svg%3E");
    }
    .ri--file-text-line {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='M21 8v12.993A1 1 0 0 1 20.007 22H3.993A.993.993 0 0 1 3 21.008V2.992C3 2.455 3.449 2 4.002 2h10.995zm-2 1h-5V4H5v16h14zM8 7h3v2H8zm0 4h8v2H8zm0 4h8v2H8z'/%3E%3C/svg%3E");
    }
    .ri--image-line {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='M2.992 21A.993.993 0 0 1 2 20.007V3.993A1 1 0 0 1 2.992 3h18.016c.548 0 .992.445.992.993v16.014a1 1 0 0 1-.992.993zM20 15V5H4v14L14 9zm0 2.828l-6-6L6.828 19H20zM8 11a2 2 0 1 1 0-4a2 2 0 0 1 0 4'/%3E%3C/svg%3E");
    }
    .ri--login-box-line {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='M4 15h2v5h12V4H6v5H4V3a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1zm6-4V8l5 4l-5 4v-3H2v-2z'/%3E%3C/svg%3E");
    }
    .ri--logout-box-line {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='M4 18h2v2h12V4H6v2H4V3a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v18a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1zm2-7h7v2H6v3l-5-4l5-4z'/%3E%3C/svg%3E");
    }
    .ri--palette-line {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='M12 2c5.522 0 10 3.978 10 8.889a5.56 5.56 0 0 1-5.556 5.555h-1.966c-.922 0-1.667.745-1.667 1.667c0 .422.167.811.422 1.1c.267.3.434.689.434 1.122C13.667 21.256 12.9 22 12 22C6.478 22 2 17.522 2 12S6.478 2 12 2m-1.189 16.111a3.664 3.664 0 0 1 3.667-3.667h1.966A3.56 3.56 0 0 0 20 10.89C20 7.139 16.468 4 12 4a8 8 0 0 0-.676 15.972a3.65 3.65 0 0 1-.513-1.86M7.5 12a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3m9 0a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3M12 9a1.5 1.5 0 1 1 0-3a1.5 1.5 0 0 1 0 3'/%3E%3C/svg%3E");
    }
    .ri--price-tag-3-line {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='m10.904 2.1l9.9 1.414l1.414 9.9l-9.192 9.192a1 1 0 0 1-1.415 0l-9.9-9.9a1 1 0 0 1 0-1.413zm.707 2.122L3.833 12l8.485 8.485l7.779-7.778l-1.061-7.425zm2.122 6.363a2 2 0 1 1 2.828-2.828a2 2 0 0 1-2.828 2.829'/%3E%3C/svg%3E");
    }
    .ri--refresh-line {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='M5.463 4.433A9.96 9.96 0 0 1 12 2c5.523 0 10 4.477 10 10c0 2.136-.67 4.116-1.81 5.74L17 12h3A8 8 0 0 0 6.46 6.228zm13.074 15.134A9.96 9.96 0 0 1 12 22C6.477 22 2 17.523 2 12c0-2.136.67-4.116 1.81-5.74L7 12H4a8 8 0 0 0 13.54 5.772z'/%3E%3C/svg%3E");
    }
    .ri--search-line {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='m18.031 16.617l4.283 4.282l-1.415 1.415l-4.282-4.283A8.96 8.96 0 0 1 11 20c-4.968 0-9-4.032-9-9s4.032-9 9-9s9 4.032 9 9a8.96 8.96 0 0 1-1.969 5.617m-2.006-.742A6.98 6.98 0 0 0 18 11c0-3.867-3.133-7-7-7s-7 3.133-7 7s3.133 7 7 7a6.98 6.98 0 0 0 4.875-1.975z'/%3E%3C/svg%3E");
    }
    .ri--settings-3-line {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='M3.34 17a10 10 0 0 1-.979-2.326a3 3 0 0 0 .003-5.347a10 10 0 0 1 2.5-4.337a3 3 0 0 0 4.632-2.674a10 10 0 0 1 5.007.003a3 3 0 0 0 4.632 2.671a10.06 10.06 0 0 1 2.503 4.336a3 3 0 0 0-.002 5.347a10 10 0 0 1-2.501 4.337a3 3 0 0 0-4.632 2.674a10 10 0 0 1-5.007-.002a3 3 0 0 0-4.631-2.672A10 10 0 0 1 3.339 17m5.66.196a5 5 0 0 1 2.25 2.77q.75.07 1.499.002a5 5 0 0 1 2.25-2.772a5 5 0 0 1 3.526-.564q.435-.614.748-1.298A5 5 0 0 1 18 12c0-1.26.47-2.437 1.273-3.334a8 8 0 0 0-.75-1.298A5 5 0 0 1 15 6.804a5 5 0 0 1-2.25-2.77q-.75-.071-1.5-.001A5 5 0 0 1 9 6.804a5 5 0 0 1-3.526.564q-.436.614-.747 1.298A5 5 0 0 1 6 12c0 1.26-.471 2.437-1.273 3.334a8 8 0 0 0 .75 1.298A5 5 0 0 1 9 17.196M12 15a3 3 0 1 1 0-6a3 3 0 0 1 0 6m0-2a1 1 0 1 0 0-2a1 1 0 0 0 0 2'/%3E%3C/svg%3E");
    }
    .ri--shopping-cart-line {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='M4.005 16V4h-2V2h3a1 1 0 0 1 1 1v12h12.438l2-8H8.005V5h13.72a1 1 0 0 1 .97 1.243l-2.5 10a1 1 0 0 1-.97.757H5.004a1 1 0 0 1-1-1m2 7a2 2 0 1 1 0-4a2 2 0 0 1 0 4m12 0a2 2 0 1 1 0-4a2 2 0 0 1 0 4'/%3E%3C/svg%3E");
    }
    .ri--stack-line {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='m20.083 15.2l1.202.721a.5.5 0 0 1 0 .858l-8.77 5.262a1 1 0 0 1-1.03 0l-8.77-5.262a.5.5 0 0 1 0-.858l1.202-.721L12 20.05zm0-4.7l1.202.721a.5.5 0 0 1 0 .858L12 17.649l-9.285-5.57a.5.5 0 0 1 0-.858l1.202-.721L12 15.35zm-7.569-9.191l8.771 5.262a.5.5 0 0 1 0 .858L12 12.999L2.715 7.43a.5.5 0 0 1 0-.858l8.77-5.262a1 1 0 0 1 1.03 0M12 3.332L5.887 7L12 10.668L18.113 7z'/%3E%3C/svg%3E");
    }
    .ri--time-line {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10s-4.477 10-10 10m0-2a8 8 0 1 0 0-16a8 8 0 0 0 0 16m1-8h4v2h-6V7h2z'/%3E%3C/svg%3E");
    }
    .ri--user-3-line {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='M20 22h-2v-2a3 3 0 0 0-3-3H9a3 3 0 0 0-3 3v2H4v-2a5 5 0 0 1 5-5h6a5 5 0 0 1 5 5zm-8-9a6 6 0 1 1 0-12a6 6 0 0 1 0 12m0-2a4 4 0 1 0 0-8a4 4 0 0 0 0 8'/%3E%3C/svg%3E");
    }
    .ri--user-line {
        --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='black' d='M4 22a8 8 0 1 1 16 0h-2a6 6 0 0 0-12 0zm8-9c-3.315 0-6-2.685-6-6s2.685-6 6-6s6 2.685 6 6s-2.685 6-6 6m0-2c2.21 0 4-1.79 4-4s-1.79-4-4-4s-4 1.79-4 4s1.79 4 4 4'/%3E%3C/svg%3E");
    }
    .text-shadow-2xs {
        text-shadow: 0px 1px 0px var(--tw-text-shadow-color, #00000026);
    }
    .text-shadow-error {
        --tw-text-shadow-color: var(--color-error);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .text-shadow-error {
            --tw-text-shadow-color: color-mix(
                in oklab,
                var(--color-error) var(--tw-text-shadow-alpha),
                transparent
            );
        }
    }
    .text-shadow-error\/20 {
        --tw-text-shadow-color: var(--color-error);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .text-shadow-error\/20 {
            --tw-text-shadow-color: color-mix(
                in oklab,
                color-mix(in oklab, var(--color-error) 20%, transparent) var(--tw-text-shadow-alpha),
                transparent
            );
        }
    }
    .text-shadow-lg {
        text-shadow:
            0px 1px 2px var(--tw-text-shadow-color, #0000001a),
            0px 3px 2px var(--tw-text-shadow-color, #0000001a),
            0px 4px 8px var(--tw-text-shadow-color, #0000001a);
    }
    .text-shadow-md {
        text-shadow:
            0px 1px 1px var(--tw-text-shadow-color, #0000001a),
            0px 1px 2px var(--tw-text-shadow-color, #0000001a),
            0px 2px 4px var(--tw-text-shadow-color, #0000001a);
    }
    .text-shadow-none {
        text-shadow: none;
    }
    .text-shadow-primary {
        --tw-text-shadow-color: var(--color-primary);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .text-shadow-primary {
            --tw-text-shadow-color: color-mix(
                in oklab,
                var(--color-primary) var(--tw-text-shadow-alpha),
                transparent
            );
        }
    }
    .text-shadow-primary\/20 {
        --tw-text-shadow-color: var(--color-primary);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .text-shadow-primary\/20 {
            --tw-text-shadow-color: color-mix(
                in oklab,
                color-mix(in oklab, var(--color-primary) 20%, transparent)
                    var(--tw-text-shadow-alpha),
                transparent
            );
        }
    }
    .text-shadow-secondary {
        --tw-text-shadow-color: var(--color-secondary);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .text-shadow-secondary {
            --tw-text-shadow-color: color-mix(
                in oklab,
                var(--color-secondary) var(--tw-text-shadow-alpha),
                transparent
            );
        }
    }
    .text-shadow-secondary\/20 {
        --tw-text-shadow-color: var(--color-secondary);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .text-shadow-secondary\/20 {
            --tw-text-shadow-color: color-mix(
                in oklab,
                color-mix(in oklab, var(--color-secondary) 20%, transparent)
                    var(--tw-text-shadow-alpha),
                transparent
            );
        }
    }
    .text-shadow-sm {
        text-shadow:
            0px 1px 0px var(--tw-text-shadow-color, #00000013),
            0px 1px 1px var(--tw-text-shadow-color, #00000013),
            0px 2px 2px var(--tw-text-shadow-color, #00000013);
    }
    .text-shadow-success {
        --tw-text-shadow-color: var(--color-success);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .text-shadow-success {
            --tw-text-shadow-color: color-mix(
                in oklab,
                var(--color-success) var(--tw-text-shadow-alpha),
                transparent
            );
        }
    }
    .text-shadow-success\/20 {
        --tw-text-shadow-color: var(--color-success);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .text-shadow-success\/20 {
            --tw-text-shadow-color: color-mix(
                in oklab,
                color-mix(in oklab, var(--color-success) 20%, transparent)
                    var(--tw-text-shadow-alpha),
                transparent
            );
        }
    }
    .text-shadow-xs {
        text-shadow: 0px 1px 1px var(--tw-text-shadow-color, #0003);
    }
    .textarea-error,
    .textarea-error:focus,
    .textarea-error:focus-within {
        --input-color: var(--color-error);
    }
    .toggle-primary:checked,
    .toggle-primary[aria-checked="true"] {
        --input-color: var(--color-primary);
    }
    .toggle-sm[type="checkbox"],
    .toggle-sm:has([type="checkbox"]) {
        --size: calc(var(--size-selector, 0.25rem) * 5);
    }
    .toggle-xs[type="checkbox"],
    .toggle-xs:has([type="checkbox"]) {
        --size: calc(var(--size-selector, 0.25rem) * 4);
    }
    :is(.\*\:cursor-pointer > *) {
        cursor: pointer;
    }
    :is(.\*\:rounded-box > *) {
        border-radius: var(--radius-box);
    }
    :is(.\*\:border-2 > *) {
        border-style: var(--tw-border-style);
        border-width: 2px;
    }
    :is(.\*\:px-2 > *) {
        padding-inline: calc(var(--spacing) * 2);
    }
    :is(.\*\:px-2\.5 > *) {
        padding-inline: calc(var(--spacing) * 2.5);
    }
    :is(.\*\:py-1 > *) {
        padding-block: calc(var(--spacing) * 1);
    }
    :is(.\*\:text-nowrap > *) {
        text-wrap: nowrap;
    }
    :is(.\*\:opacity-70 > *) {
        opacity: 0.7;
    }
    :is(.\*\:transition-all > *) {
        transition-property: all;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
    :is(.\*\:\[grid-area\:1\/1\] > *) {
        grid-area: 1/1;
    }
    @media (hover: hover) {
        .group-hover\:inset-x-0:is(:where(.group):hover *) {
            inset-inline: calc(var(--spacing) * 0);
        }
        .group-hover\:bottom-0:is(:where(.group):hover *) {
            bottom: calc(var(--spacing) * 0);
        }
        .group-hover\:bottom-4:is(:where(.group):hover *) {
            bottom: calc(var(--spacing) * 4);
        }
        .group-hover\:block:is(:where(.group):hover *) {
            display: block;
        }
        .group-hover\:h-16:is(:where(.group):hover *) {
            height: calc(var(--spacing) * 16);
        }
        .group-hover\:translate-x-0:is(:where(.group):hover *) {
            --tw-translate-x: calc(var(--spacing) * 0);
            translate: var(--tw-translate-x) var(--tw-translate-y);
        }
        .group-hover\:scale-100:is(:where(.group):hover *) {
            --tw-scale-x: 100%;
            --tw-scale-y: 100%;
            --tw-scale-z: 100%;
            scale: var(--tw-scale-x) var(--tw-scale-y);
        }
        .group-hover\:scale-108:is(:where(.group):hover *) {
            --tw-scale-x: 108%;
            --tw-scale-y: 108%;
            --tw-scale-z: 108%;
            scale: var(--tw-scale-x) var(--tw-scale-y);
        }
        .group-hover\:border-primary:is(:where(.group):hover *) {
            border-color: var(--color-primary);
        }
        .group-hover\:bg-base-200:is(:where(.group):hover *) {
            background-color: var(--color-base-200);
        }
        .group-hover\:bg-primary:is(:where(.group):hover *) {
            background-color: var(--color-primary);
        }
        .group-hover\:from-primary\/10:is(:where(.group):hover *) {
            --tw-gradient-from: var(--color-primary);
        }
        @supports (color: color-mix(in lab, red, red)) {
            .group-hover\:from-primary\/10:is(:where(.group):hover *) {
                --tw-gradient-from: color-mix(in oklab, var(--color-primary) 10%, transparent);
            }
        }
        .group-hover\:from-primary\/10:is(:where(.group):hover *) {
            --tw-gradient-stops: var(
                --tw-gradient-via-stops,
                var(--tw-gradient-position),
                var(--tw-gradient-from) var(--tw-gradient-from-position),
                var(--tw-gradient-to) var(--tw-gradient-to-position)
            );
        }
        .group-hover\:to-secondary\/10:is(:where(.group):hover *) {
            --tw-gradient-to: var(--color-secondary);
        }
        @supports (color: color-mix(in lab, red, red)) {
            .group-hover\:to-secondary\/10:is(:where(.group):hover *) {
                --tw-gradient-to: color-mix(in oklab, var(--color-secondary) 10%, transparent);
            }
        }
        .group-hover\:to-secondary\/10:is(:where(.group):hover *) {
            --tw-gradient-stops: var(
                --tw-gradient-via-stops,
                var(--tw-gradient-position),
                var(--tw-gradient-from) var(--tw-gradient-from-position),
                var(--tw-gradient-to) var(--tw-gradient-to-position)
            );
        }
        .group-hover\:text-base-content:is(:where(.group):hover *),
        .group-hover\:text-base-content\/80:is(:where(.group):hover *) {
            color: var(--color-base-content);
        }
        @supports (color: color-mix(in lab, red, red)) {
            .group-hover\:text-base-content\/80:is(:where(.group):hover *) {
                color: color-mix(in oklab, var(--color-base-content) 80%, transparent);
            }
        }
        .group-hover\:text-black\/80:is(:where(.group):hover *) {
            color: #000c;
        }
        @supports (color: color-mix(in lab, red, red)) {
            .group-hover\:text-black\/80:is(:where(.group):hover *) {
                color: color-mix(in oklab, var(--color-black) 80%, transparent);
            }
        }
        .group-hover\:text-primary-content:is(:where(.group):hover *) {
            color: var(--color-primary-content);
        }
        .group-hover\:text-white:is(:where(.group):hover *) {
            color: var(--color-white);
        }
        .group-hover\:opacity-0:is(:where(.group):hover *) {
            opacity: 0;
        }
        .group-hover\:opacity-30:is(:where(.group):hover *) {
            opacity: 0.3;
        }
        .group-hover\:opacity-60:is(:where(.group):hover *) {
            opacity: 0.6;
        }
        .group-hover\:opacity-80:is(:where(.group):hover *) {
            opacity: 0.8;
        }
        .group-hover\:opacity-100:is(:where(.group):hover *) {
            opacity: 1;
        }
        .group-hover\:blur-lg:is(:where(.group):hover *) {
            --tw-blur: blur(var(--blur-lg));
            filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,)
                var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,)
                var(--tw-drop-shadow,);
        }
        .group-hover\/purchase\:opacity-60:is(:where(.group\/purchase):hover *) {
            opacity: 0.6;
        }
        .group-hover\/purchase\:blur-lg:is(:where(.group\/purchase):hover *) {
            --tw-blur: blur(var(--blur-lg));
            filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,)
                var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,)
                var(--tw-drop-shadow,);
        }
    }
    .group-focus\:scale-80:is(:where(.group):focus *) {
        --tw-scale-x: 80%;
        --tw-scale-y: 80%;
        --tw-scale-z: 80%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
    }
    .group-focus\:scale-100:is(:where(.group):focus *) {
        --tw-scale-x: 100%;
        --tw-scale-y: 100%;
        --tw-scale-z: 100%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
    }
    .group-focus\:rotate-0:is(:where(.group):focus *) {
        rotate: none;
    }
    .group-focus\:rotate-45:is(:where(.group):focus *) {
        rotate: 45deg;
    }
    .group-focus\:rotate-90:is(:where(.group):focus *) {
        rotate: 90deg;
    }
    .group-focus\:opacity-0:is(:where(.group):focus *) {
        opacity: 0;
    }
    .group-focus\:opacity-100:is(:where(.group):focus *) {
        opacity: 1;
    }
    .group-has-\[\[data-pass-p100\]\]\:scale-x-100:is(:where(.group):has([data-pass-p100]) *),
    .group-has-\[\[data-pass-p20\]\]\:scale-x-100:is(:where(.group):has([data-pass-p20]) *),
    .group-has-\[\[data-pass-p40\]\]\:scale-x-100:is(:where(.group):has([data-pass-p40]) *),
    .group-has-\[\[data-pass-p60\]\]\:scale-x-100:is(:where(.group):has([data-pass-p60]) *),
    .group-has-\[\[data-pass-p80\]\]\:scale-x-100:is(:where(.group):has([data-pass-p80]) *) {
        --tw-scale-x: 100%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
    }
    .group-has-\[\[data-pass-r1\]\]\:text-success:is(:where(.group):has([data-pass-r1]) *),
    .group-has-\[\[data-pass-r2\]\]\:text-success:is(:where(.group):has([data-pass-r2]) *),
    .group-has-\[\[data-pass-r2\]\[data-pass-r3\]\]\:text-success:is(
        :where(.group):has([data-pass-r2][data-pass-r3]) *
    ),
    .group-has-\[\[data-pass-r3\]\]\:text-success:is(:where(.group):has([data-pass-r3]) *),
    .group-has-\[\[data-pass-r4\]\]\:text-success:is(:where(.group):has([data-pass-r4]) *),
    .group-has-\[\[data-pass-r4\]\[data-pass-r5\]\]\:text-success:is(
        :where(.group):has([data-pass-r4][data-pass-r5]) *
    ),
    .group-has-\[\[data-pass-r5\]\]\:text-success:is(:where(.group):has([data-pass-r5]) *) {
        color: var(--color-success);
    }
    .group-has-\[\[id\=layout-sidebar-hover-trigger\]\:checked\]\/html\:flex:is(
        :where(.group\/html):has([id="layout-sidebar-hover-trigger"]:checked) *
    ) {
        display: flex;
    }
    .group-has-\[\[id\=layout-sidebar-hover-trigger\]\:checked\]\/html\:hidden:is(
        :where(.group\/html):has([id="layout-sidebar-hover-trigger"]:checked) *
    ) {
        display: none;
    }
    .group-has-\[\[id\=layout-sidebar-hover-trigger\]\:checked\]\/html\:opacity-0:is(
        :where(.group\/html):has([id="layout-sidebar-hover-trigger"]:checked) *
    ) {
        opacity: 0;
    }
    .group-has-\[\[id\=layout-sidebar-hover-trigger\]\:checked\]\/html\:opacity-100:is(
        :where(.group\/html):has([id="layout-sidebar-hover-trigger"]:checked) *
    ) {
        opacity: 1;
    }
    .group-data-copied\:-bottom-8:is(:where(.group)[data-copied] *) {
        bottom: calc(var(--spacing) * -8);
    }
    .group-data-copied\:scale-0:is(:where(.group)[data-copied] *) {
        --tw-scale-x: 0%;
        --tw-scale-y: 0%;
        --tw-scale-z: 0%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
    }
    .group-data-copied\:scale-100:is(:where(.group)[data-copied] *) {
        --tw-scale-x: 100%;
        --tw-scale-y: 100%;
        --tw-scale-z: 100%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
    }
    .group-data-copied\:opacity-100:is(:where(.group)[data-copied] *) {
        opacity: 1;
    }
    .group-data-visible\:scale-100:is(:where(.group)[data-visible] *) {
        --tw-scale-x: 100%;
        --tw-scale-y: 100%;
        --tw-scale-z: 100%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
    }
    .group-data-visible\:opacity-100:is(:where(.group)[data-visible] *) {
        opacity: 1;
    }
    .group-data-\[at-top\=false\]\:w-\[800px\]:is(:where(.group)[data-at-top="false"] *) {
        width: 800px;
    }
    .group-data-\[at-top\=false\]\:bg-base-100:is(:where(.group)[data-at-top="false"] *) {
        background-color: var(--color-base-100);
    }
    .group-data-\[at-top\=false\]\:shadow:is(:where(.group)[data-at-top="false"] *) {
        --tw-shadow:
            0 1px 3px 0 var(--tw-shadow-color, #0000001a),
            0 1px 2px -1px var(--tw-shadow-color, #0000001a);
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow),
            var(--tw-ring-shadow), var(--tw-shadow);
    }
    .group-data-\[changed\]\/html\:p-\[2px\]:is(:where(.group\/html)[data-changed] *) {
        padding: 2px;
    }
    .group-data-\[changed\]\/html\:opacity-100:is(:where(.group\/html)[data-changed] *) {
        opacity: 1;
    }
    .group-data-\[copied\]\:block:is(:where(.group)[data-copied] *) {
        display: block;
    }
    .group-data-\[copied\]\:hidden:is(:where(.group)[data-copied] *),
    .group-data-\[fullscreen\]\/html\:hidden:is(:where(.group\/html)[data-fullscreen] *) {
        display: none;
    }
    .group-data-\[fullscreen\]\/html\:inline:is(:where(.group\/html)[data-fullscreen] *) {
        display: inline;
    }
    .group-data-\[sidebar-theme\=dark\]\/html\:bg-base-200:is(
        :where(.group\/html)[data-sidebar-theme="dark"] *
    ),
    .group-data-\[sidebar-theme\=light\]\/html\:bg-base-200:is(
        :where(.group\/html)[data-sidebar-theme="light"] *
    ) {
        background-color: var(--color-base-200);
    }
    .group-data-\[sorting\=asc\]\:opacity-100:is(:where(.group)[data-sorting="asc"] *),
    .group-data-\[sorting\=desc\]\:opacity-100:is(:where(.group)[data-sorting="desc"] *) {
        opacity: 1;
    }
    .group-data-\[theme\=contrast\]\/html\:pointer-events-auto:is(
        :where(.group\/html)[data-theme="contrast"] *
    ) {
        pointer-events: auto;
    }
    .group-data-\[theme\=contrast\]\/html\:hidden:is(
        :where(.group\/html)[data-theme="contrast"] *
    ) {
        display: none;
    }
    .group-data-\[theme\=contrast\]\/html\:p-1:is(:where(.group\/html)[data-theme="contrast"] *) {
        padding: calc(var(--spacing) * 1);
    }
    .group-data-\[theme\=contrast\]\/html\:opacity-100:is(
        :where(.group\/html)[data-theme="contrast"] *
    ) {
        opacity: 1;
    }
    .group-data-\[theme\=dark\]\/html\:translate-y-0:is(:where(.group\/html)[data-theme="dark"] *) {
        --tw-translate-y: calc(var(--spacing) * 0);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }
    .group-data-\[theme\=dark\]\/html\:p-1:is(:where(.group\/html)[data-theme="dark"] *) {
        padding: calc(var(--spacing) * 1);
    }
    .group-data-\[theme\=dark\]\/html\:opacity-0:is(:where(.group\/html)[data-theme="dark"] *) {
        opacity: 0;
    }
    .group-data-\[theme\=dark\]\/html\:opacity-100:is(:where(.group\/html)[data-theme="dark"] *) {
        opacity: 1;
    }
    .group-data-\[theme\=dim\]\/html\:p-1:is(:where(.group\/html)[data-theme="dim"] *) {
        padding: calc(var(--spacing) * 1);
    }
    .group-data-\[theme\=dim\]\/html\:opacity-100:is(:where(.group\/html)[data-theme="dim"] *) {
        opacity: 1;
    }
    .group-data-\[theme\=light\]\/html\:pointer-events-auto:is(
        :where(.group\/html)[data-theme="light"] *
    ) {
        pointer-events: auto;
    }
    .group-data-\[theme\=light\]\/html\:hidden:is(:where(.group\/html)[data-theme="light"] *) {
        display: none;
    }
    .group-data-\[theme\=light\]\/html\:translate-y-0:is(
        :where(.group\/html)[data-theme="light"] *
    ) {
        --tw-translate-y: calc(var(--spacing) * 0);
        translate: var(--tw-translate-x) var(--tw-translate-y);
    }
    .group-data-\[theme\=light\]\/html\:p-1:is(:where(.group\/html)[data-theme="light"] *) {
        padding: calc(var(--spacing) * 1);
    }
    .group-data-\[theme\=light\]\/html\:opacity-0:is(:where(.group\/html)[data-theme="light"] *) {
        opacity: 0;
    }
    .group-data-\[theme\=light\]\/html\:opacity-100:is(:where(.group\/html)[data-theme="light"] *) {
        opacity: 1;
    }
    .group-data-\[theme\=material\]\/html\:p-1:is(:where(.group\/html)[data-theme="material"] *) {
        padding: calc(var(--spacing) * 1);
    }
    .group-data-\[theme\=material\]\/html\:opacity-100:is(
        :where(.group\/html)[data-theme="material"] *
    ) {
        opacity: 1;
    }
    .group-data-\[theme\=material-dark\]\/html\:p-1:is(
        :where(.group\/html)[data-theme="material-dark"] *
    ) {
        padding: calc(var(--spacing) * 1);
    }
    .group-data-\[theme\=material-dark\]\/html\:opacity-100:is(
        :where(.group\/html)[data-theme="material-dark"] *
    ) {
        opacity: 1;
    }
    .group-\[\.ghost\]\:opacity-60:is(:where(.group).ghost *) {
        opacity: 0.6;
    }
    .group-\[\.ghost\]\:grayscale-100:is(:where(.group).ghost *) {
        --tw-grayscale: grayscale(100%);
        filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,)
            var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,)
            var(--tw-drop-shadow,);
    }
    .group-\[\:not\(\[data-font-family\]\)\]\/html\:bg-base-200:is(
        :where(.group\/html):not([data-font-family]) *
    ) {
        background-color: var(--color-base-200);
    }
    .group-\[\:not\(\[data-theme\]\)\]\/html\:p-1:is(:where(.group\/html):not([data-theme]) *) {
        padding: calc(var(--spacing) * 1);
    }
    .group-\[\:not\(\[data-theme\]\)\]\/html\:opacity-100:is(
        :where(.group\/html):not([data-theme]) *
    ) {
        opacity: 1;
    }
    .group-\[\:not\(\[dir\]\)\]\/html\:bg-base-200:is(:where(.group\/html):not([dir]) *),
    .group-\[\[data-font-family\=ar-one\]\]\/html\:bg-base-200:is(
        :where(.group\/html)[data-font-family="ar-one"] *
    ),
    .group-\[\[data-font-family\=dm-sans\]\]\/html\:bg-base-200:is(
        :where(.group\/html)[data-font-family="dm-sans"] *
    ),
    .group-\[\[data-font-family\=inclusive\]\]\/html\:bg-base-200:is(
        :where(.group\/html)[data-font-family="inclusive"] *
    ),
    .group-\[\[data-font-family\=wix\]\]\/html\:bg-base-200:is(
        :where(.group\/html)[data-font-family="wix"] *
    ),
    .group-\[\[dir\=ltr\]\]\/html\:bg-base-200:is(:where(.group\/html)[dir="ltr"] *),
    .group-\[\[dir\=rtl\]\]\/html\:bg-base-200:is(:where(.group\/html)[dir="rtl"] *) {
        background-color: var(--color-base-200);
    }
    .placeholder\:text-sm::placeholder {
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
    }
    .first\:pt-0:first-child {
        padding-top: calc(var(--spacing) * 0);
    }
    @media (hover: hover) {
        .hover\:w-26:hover {
            width: calc(var(--spacing) * 26);
        }
        :where(.hover\:space-x-0\.5:hover > :not(:last-child)) {
            --tw-space-x-reverse: 0;
            margin-inline-start: calc(calc(var(--spacing) * 0.5) * var(--tw-space-x-reverse));
            margin-inline-end: calc(
                calc(var(--spacing) * 0.5) * calc(1 - var(--tw-space-x-reverse))
            );
        }
        .hover\:border-base-300:hover {
            border-color: var(--color-base-300);
        }
        .hover\:border-blue-500\/40:hover {
            border-color: #3080ff66;
        }
        @supports (color: color-mix(in lab, red, red)) {
            .hover\:border-blue-500\/40:hover {
                border-color: color-mix(in oklab, var(--color-blue-500) 40%, transparent);
            }
        }
        .hover\:border-cyan-600\/40:hover {
            border-color: #0092b566;
        }
        @supports (color: color-mix(in lab, red, red)) {
            .hover\:border-cyan-600\/40:hover {
                border-color: color-mix(in oklab, var(--color-cyan-600) 40%, transparent);
            }
        }
        .hover\:border-fuchsia-500\/40:hover {
            border-color: #e12afb66;
        }
        @supports (color: color-mix(in lab, red, red)) {
            .hover\:border-fuchsia-500\/40:hover {
                border-color: color-mix(in oklab, var(--color-fuchsia-500) 40%, transparent);
            }
        }
        .hover\:border-orange-400\/40:hover {
            border-color: #ff8b1a66;
        }
        @supports (color: color-mix(in lab, red, red)) {
            .hover\:border-orange-400\/40:hover {
                border-color: color-mix(in oklab, var(--color-orange-400) 40%, transparent);
            }
        }
        .hover\:border-primary:hover {
            border-color: var(--color-primary);
        }
        .hover\:border-teal-500\/40:hover {
            border-color: #00baa766;
        }
        @supports (color: color-mix(in lab, red, red)) {
            .hover\:border-teal-500\/40:hover {
                border-color: color-mix(in oklab, var(--color-teal-500) 40%, transparent);
            }
        }
        .hover\:border-violet-500\/40:hover {
            border-color: #8d54ff66;
        }
        @supports (color: color-mix(in lab, red, red)) {
            .hover\:border-violet-500\/40:hover {
                border-color: color-mix(in oklab, var(--color-violet-500) 40%, transparent);
            }
        }
        .hover\:bg-base-200:hover,
        .hover\:bg-base-200\/20:hover {
            background-color: var(--color-base-200);
        }
        @supports (color: color-mix(in lab, red, red)) {
            .hover\:bg-base-200\/20:hover {
                background-color: color-mix(in oklab, var(--color-base-200) 20%, transparent);
            }
        }
        .hover\:bg-base-200\/30:hover {
            background-color: var(--color-base-200);
        }
        @supports (color: color-mix(in lab, red, red)) {
            .hover\:bg-base-200\/30:hover {
                background-color: color-mix(in oklab, var(--color-base-200) 30%, transparent);
            }
        }
        .hover\:bg-base-200\/40:hover {
            background-color: var(--color-base-200);
        }
        @supports (color: color-mix(in lab, red, red)) {
            .hover\:bg-base-200\/40:hover {
                background-color: color-mix(in oklab, var(--color-base-200) 40%, transparent);
            }
        }
        .hover\:bg-base-200\/50:hover {
            background-color: var(--color-base-200);
        }
        @supports (color: color-mix(in lab, red, red)) {
            .hover\:bg-base-200\/50:hover {
                background-color: color-mix(in oklab, var(--color-base-200) 50%, transparent);
            }
        }
        .hover\:bg-base-300:hover {
            background-color: var(--color-base-300);
        }
        .hover\:bg-blue-500\/5:hover {
            background-color: #3080ff0d;
        }
        @supports (color: color-mix(in lab, red, red)) {
            .hover\:bg-blue-500\/5:hover {
                background-color: color-mix(in oklab, var(--color-blue-500) 5%, transparent);
            }
        }
        .hover\:bg-cyan-600\/5:hover {
            background-color: #0092b50d;
        }
        @supports (color: color-mix(in lab, red, red)) {
            .hover\:bg-cyan-600\/5:hover {
                background-color: color-mix(in oklab, var(--color-cyan-600) 5%, transparent);
            }
        }
        .hover\:bg-error\/10:hover {
            background-color: var(--color-error);
        }
        @supports (color: color-mix(in lab, red, red)) {
            .hover\:bg-error\/10:hover {
                background-color: color-mix(in oklab, var(--color-error) 10%, transparent);
            }
        }
        .hover\:bg-fuchsia-500\/5:hover {
            background-color: #e12afb0d;
        }
        @supports (color: color-mix(in lab, red, red)) {
            .hover\:bg-fuchsia-500\/5:hover {
                background-color: color-mix(in oklab, var(--color-fuchsia-500) 5%, transparent);
            }
        }
        .hover\:bg-orange-400\/5:hover {
            background-color: #ff8b1a0d;
        }
        @supports (color: color-mix(in lab, red, red)) {
            .hover\:bg-orange-400\/5:hover {
                background-color: color-mix(in oklab, var(--color-orange-400) 5%, transparent);
            }
        }
        .hover\:bg-primary:hover,
        .hover\:bg-primary\/20:hover {
            background-color: var(--color-primary);
        }
        @supports (color: color-mix(in lab, red, red)) {
            .hover\:bg-primary\/20:hover {
                background-color: color-mix(in oklab, var(--color-primary) 20%, transparent);
            }
        }
        .hover\:bg-teal-500\/5:hover {
            background-color: #00baa70d;
        }
        @supports (color: color-mix(in lab, red, red)) {
            .hover\:bg-teal-500\/5:hover {
                background-color: color-mix(in oklab, var(--color-teal-500) 5%, transparent);
            }
        }
        .hover\:bg-violet-500\/5:hover {
            background-color: #8d54ff0d;
        }
        @supports (color: color-mix(in lab, red, red)) {
            .hover\:bg-violet-500\/5:hover {
                background-color: color-mix(in oklab, var(--color-violet-500) 5%, transparent);
            }
        }
        .hover\:bg-white\/20:hover {
            background-color: #fff3;
        }
        @supports (color: color-mix(in lab, red, red)) {
            .hover\:bg-white\/20:hover {
                background-color: color-mix(in oklab, var(--color-white) 20%, transparent);
            }
        }
        .hover\:bg-white\/60:hover {
            background-color: #fff9;
        }
        @supports (color: color-mix(in lab, red, red)) {
            .hover\:bg-white\/60:hover {
                background-color: color-mix(in oklab, var(--color-white) 60%, transparent);
            }
        }
        .hover\:bg-white\/80:hover {
            background-color: #fffc;
        }
        @supports (color: color-mix(in lab, red, red)) {
            .hover\:bg-white\/80:hover {
                background-color: color-mix(in oklab, var(--color-white) 80%, transparent);
            }
        }
        .hover\:bg-linear-to-r:hover {
            --tw-gradient-position: to right;
        }
        @supports (background-image: linear-gradient(in lab, red, red)) {
            .hover\:bg-linear-to-r:hover {
                --tw-gradient-position: to right in oklab;
            }
        }
        .hover\:bg-linear-to-r:hover {
            background-image: linear-gradient(var(--tw-gradient-stops));
        }
        .hover\:from-primary\/5:hover {
            --tw-gradient-from: var(--color-primary);
        }
        @supports (color: color-mix(in lab, red, red)) {
            .hover\:from-primary\/5:hover {
                --tw-gradient-from: color-mix(in oklab, var(--color-primary) 5%, transparent);
            }
        }
        .hover\:from-primary\/5:hover {
            --tw-gradient-stops: var(
                --tw-gradient-via-stops,
                var(--tw-gradient-position),
                var(--tw-gradient-from) var(--tw-gradient-from-position),
                var(--tw-gradient-to) var(--tw-gradient-to-position)
            );
        }
        .hover\:text-base-content:hover,
        .hover\:text-base-content\/80:hover {
            color: var(--color-base-content);
        }
        @supports (color: color-mix(in lab, red, red)) {
            .hover\:text-base-content\/80:hover {
                color: color-mix(in oklab, var(--color-base-content) 80%, transparent);
            }
        }
        .hover\:text-error-content:hover {
            color: var(--color-error-content);
        }
        .hover\:text-primary:hover {
            color: var(--color-primary);
        }
        .hover\:text-primary-content:hover {
            color: var(--color-primary-content);
        }
        .hover\:underline:hover {
            text-decoration-line: underline;
        }
        .hover\:opacity-95:hover {
            opacity: 0.95;
        }
        .hover\:opacity-100:hover {
            opacity: 1;
        }
        .hover\:shadow-lg:hover {
            --tw-shadow:
                0 10px 15px -3px var(--tw-shadow-color, #0000001a),
                0 4px 6px -4px var(--tw-shadow-color, #0000001a);
            box-shadow:
                var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow),
                var(--tw-ring-shadow), var(--tw-shadow);
        }
        .hover\:shadow-md:hover {
            --tw-shadow:
                0 4px 6px -1px var(--tw-shadow-color, #0000001a),
                0 2px 4px -2px var(--tw-shadow-color, #0000001a);
            box-shadow:
                var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow),
                var(--tw-ring-shadow), var(--tw-shadow);
        }
        .hover\:grayscale-0:hover {
            --tw-grayscale: grayscale(0%);
            filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,)
                var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,)
                var(--tw-drop-shadow,);
        }
        :is(.\*\:hover\:bg-base-200 > *):hover {
            background-color: var(--color-base-200);
        }
        :is(.\*\:hover\:text-base-content > *):hover {
            color: var(--color-base-content);
        }
        :is(.\*\:hover\:opacity-70 > *):hover {
            opacity: 0.7;
        }
        :is(.\*\:hover\:opacity-100 > *):hover {
            opacity: 1;
        }
        :is(.hover\:\*\:shadow-sm:hover > *) {
            --tw-shadow:
                0 1px 3px 0 var(--tw-shadow-color, #0000001a),
                0 1px 2px -1px var(--tw-shadow-color, #0000001a);
            box-shadow:
                var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow),
                var(--tw-ring-shadow), var(--tw-shadow);
        }
    }
    .focus\:bg-transparent:focus {
        background-color: #0000;
    }
    .focus\:outline-0:focus {
        outline-style: var(--tw-outline-style);
        outline-width: 0;
    }
    .focus\:outline-none:focus {
        --tw-outline-style: none;
        outline-style: none;
    }
    .active\:scale-95:active {
        --tw-scale-x: 95%;
        --tw-scale-y: 95%;
        --tw-scale-z: 95%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
    }
    .active\:scale-\[\.98\]:active {
        scale: 0.98;
    }
    .data-error\:max-h-8[data-error] {
        max-height: calc(var(--spacing) * 8);
    }
    .data-error\:checkbox-error[data-error] {
        color: var(--color-error-content);
        --input-color: var(--color-error);
    }
    .data-error\:range-error[data-error] {
        color: var(--color-error);
        --range-thumb: var(--color-error-content);
    }
    .data-error\:opacity-100[data-error] {
        opacity: 1;
    }
    .data-error\:input-error[data-error],
    .data-error\:input-error[data-error]:focus,
    .data-error\:input-error[data-error]:focus-within,
    .data-error\:select-error[data-error],
    .data-error\:select-error[data-error]:focus,
    .data-error\:select-error[data-error]:focus-within {
        --input-color: var(--color-error);
    }
    .data-\[scrolling\=down\]\:-top-full[data-scrolling="down"] {
        top: -100%;
    }
    @media not all and (min-width: 96rem) {
        .max-2xl\:order-1 {
            order: 1;
        }
        .max-2xl\:order-2 {
            order: 2;
        }
        .max-2xl\:text-sm {
            font-size: var(--text-sm);
            line-height: var(--tw-leading, var(--text-sm--line-height));
        }
    }
    @media not all and (min-width: 80rem) {
        .max-xl\:hidden {
            display: none;
        }
        .max-xl\:btn-square {
            width: var(--size);
            height: var(--size);
            padding-inline: 0;
        }
    }
    @media not all and (min-width: 64rem) {
        .max-lg\:hidden {
            display: none;
        }
        .max-lg\:flex-col {
            flex-direction: column;
        }
        .max-lg\:pt-0 {
            padding-top: calc(var(--spacing) * 0);
        }
    }
    @media not all and (min-width: 48rem) {
        .max-md\:start-1\/2 {
            inset-inline-start: 50%;
        }
        .max-md\:-bottom-12 {
            bottom: calc(var(--spacing) * -12);
        }
        .max-md\:hidden {
            display: none;
        }
        .max-md\:btn-square {
            width: var(--size);
            height: var(--size);
            padding-inline: 0;
        }
        .max-md\:-translate-x-1\/2 {
            --tw-translate-x: -50%;
            translate: var(--tw-translate-x) var(--tw-translate-y);
        }
        .max-md\:gap-3 {
            gap: calc(var(--spacing) * 3);
        }
        .max-md\:text-sm {
            font-size: var(--text-sm);
            line-height: var(--tw-leading, var(--text-sm--line-height));
        }
        .max-md\:shadow {
            --tw-shadow:
                0 1px 3px 0 var(--tw-shadow-color, #0000001a),
                0 1px 2px -1px var(--tw-shadow-color, #0000001a);
            box-shadow:
                var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow),
                var(--tw-ring-shadow), var(--tw-shadow);
        }
    }
    @media not all and (min-width: 40rem) {
        .max-sm\:dropdown-center {
            --anchor-h: center;
        }
        .max-sm\:dropdown-center :where(.dropdown-content) {
            inset-inline-end: 50%;
            translate: 50%;
        }
        [dir="rtl"] :is(.max-sm\:dropdown-center :where(.dropdown-content)) {
            translate: -50%;
        }
        .max-sm\:dropdown-center.dropdown-left {
            --anchor-h: left;
            --anchor-v: center;
        }
        .max-sm\:dropdown-center.dropdown-left .dropdown-content {
            top: auto;
            bottom: 50%;
            translate: 0 50%;
        }
        .max-sm\:dropdown-center.dropdown-right {
            --anchor-h: right;
            --anchor-v: center;
        }
        .max-sm\:dropdown-center.dropdown-right .dropdown-content {
            top: auto;
            bottom: 50%;
            translate: 0 50%;
        }
        .max-sm\:ms-auto {
            margin-inline-start: auto;
        }
        .max-sm\:hidden {
            display: none;
        }
        .max-sm\:btn-circle {
            width: var(--size);
            height: var(--size);
            border-radius: 3.40282e38px;
            padding-inline: 0;
        }
        .max-sm\:btn-square {
            width: var(--size);
            height: var(--size);
            padding-inline: 0;
        }
        .max-sm\:size-8 {
            width: calc(var(--spacing) * 8);
            height: calc(var(--spacing) * 8);
        }
        .max-sm\:flex-col-reverse {
            flex-direction: column-reverse;
        }
        .max-sm\:items-center {
            align-items: center;
        }
        .max-sm\:text-center {
            text-align: center;
        }
        .max-sm\:text-sm,
        .max-sm\:placeholder\:text-sm::placeholder {
            font-size: var(--text-sm);
            line-height: var(--tw-leading, var(--text-sm--line-height));
        }
    }
    @media (min-width: 40rem) {
        .sm\:dropdown-end {
            --anchor-h: span-left;
        }
        .sm\:dropdown-end :where(.dropdown-content) {
            inset-inline-end: 0;
            translate: 0;
        }
        [dir="rtl"] :is(.sm\:dropdown-end :where(.dropdown-content)) {
            translate: 0;
        }
        .sm\:dropdown-end.dropdown-left {
            --anchor-h: left;
            --anchor-v: span-top;
        }
        .sm\:dropdown-end.dropdown-left .dropdown-content {
            top: auto;
            bottom: 0;
        }
        .sm\:dropdown-end.dropdown-right {
            --anchor-h: right;
            --anchor-v: span-top;
        }
        .sm\:dropdown-end.dropdown-right .dropdown-content {
            top: auto;
            bottom: 0;
        }
        .sm\:col-span-2 {
            grid-column: span 2 / span 2;
        }
        .min-sm\:container {
            width: 100%;
        }
        .min-sm\:container {
            max-width: 40rem;
        }
        @media (min-width: 48rem) {
            .min-sm\:container {
                max-width: 48rem;
            }
        }
        @media (min-width: 64rem) {
            .min-sm\:container {
                max-width: 64rem;
            }
        }
        @media (min-width: 80rem) {
            .min-sm\:container {
                max-width: 80rem;
            }
        }
        @media (min-width: 96rem) {
            .min-sm\:container {
                max-width: 96rem;
            }
        }
        .sm\:container {
            width: 100%;
        }
        .sm\:container {
            max-width: 40rem;
        }
        @media (min-width: 48rem) {
            .sm\:container {
                max-width: 48rem;
            }
        }
        @media (min-width: 64rem) {
            .sm\:container {
                max-width: 64rem;
            }
        }
        @media (min-width: 80rem) {
            .sm\:container {
                max-width: 80rem;
            }
        }
        @media (min-width: 96rem) {
            .sm\:container {
                max-width: 96rem;
            }
        }
        .min-sm\:container {
            margin-inline: auto;
            padding-inline: 1rem;
        }
        @media (min-width: 48rem) {
            .min-sm\:container {
                padding-inline: 2rem;
            }
        }
        @media (min-width: 64rem) {
            .min-sm\:container {
                padding-inline: 3rem;
            }
        }
        @media (min-width: 80rem) {
            .min-sm\:container {
                padding-inline: 4rem;
            }
        }
        @media (min-width: 96rem) {
            .min-sm\:container {
                padding-inline: 6rem;
            }
        }
        .sm\:container {
            margin-inline: auto;
            padding-inline: 1rem;
        }
        @media (min-width: 48rem) {
            .sm\:container {
                padding-inline: 2rem;
            }
        }
        @media (min-width: 64rem) {
            .sm\:container {
                padding-inline: 3rem;
            }
        }
        @media (min-width: 80rem) {
            .sm\:container {
                padding-inline: 4rem;
            }
        }
        @media (min-width: 96rem) {
            .sm\:container {
                padding-inline: 6rem;
            }
        }
        .sm\:mx-5 {
            margin-inline: calc(var(--spacing) * 5);
        }
        .sm\:mt-3 {
            margin-top: calc(var(--spacing) * 3);
        }
        .sm\:mt-4 {
            margin-top: calc(var(--spacing) * 4);
        }
        .sm\:mt-6 {
            margin-top: calc(var(--spacing) * 6);
        }
        .sm\:mt-8 {
            margin-top: calc(var(--spacing) * 8);
        }
        .sm\:block {
            display: block;
        }
        .sm\:flex {
            display: flex;
        }
        .sm\:hidden {
            display: none;
        }
        .sm\:inline {
            display: inline;
        }
        .sm\:inline-flex {
            display: inline-flex;
        }
        .sm\:size-5 {
            width: calc(var(--spacing) * 5);
            height: calc(var(--spacing) * 5);
        }
        .sm\:size-5\.5 {
            width: calc(var(--spacing) * 5.5);
            height: calc(var(--spacing) * 5.5);
        }
        .sm\:size-6 {
            width: calc(var(--spacing) * 6);
            height: calc(var(--spacing) * 6);
        }
        .sm\:size-9 {
            width: calc(var(--spacing) * 9);
            height: calc(var(--spacing) * 9);
        }
        .sm\:size-10 {
            width: calc(var(--spacing) * 10);
            height: calc(var(--spacing) * 10);
        }
        .sm\:size-\[120px\] {
            width: 120px;
            height: 120px;
        }
        .sm\:size-\[600px\] {
            width: 600px;
            height: 600px;
        }
        .sm\:h-28 {
            height: calc(var(--spacing) * 28);
        }
        .sm\:h-screen {
            height: 100vh;
        }
        .sm\:w-1\/2 {
            width: 50%;
        }
        .sm\:w-1\/3 {
            width: 33.3333%;
        }
        .sm\:w-3 {
            width: calc(var(--spacing) * 3);
        }
        .sm\:w-3\/5 {
            width: 60%;
        }
        .sm\:w-36 {
            width: calc(var(--spacing) * 36);
        }
        .sm\:w-84 {
            width: calc(var(--spacing) * 84);
        }
        .sm\:w-92 {
            width: calc(var(--spacing) * 92);
        }
        .sm\:w-96 {
            width: calc(var(--spacing) * 96);
        }
        .sm\:w-sm {
            width: var(--container-sm);
        }
        .sm\:grid-cols-2 {
            grid-template-columns: repeat(2, minmax(0, 1fr));
        }
        .sm\:grid-cols-3 {
            grid-template-columns: repeat(3, minmax(0, 1fr));
        }
        .sm\:grid-cols-4 {
            grid-template-columns: repeat(4, minmax(0, 1fr));
        }
        .sm\:grid-cols-5 {
            grid-template-columns: repeat(5, minmax(0, 1fr));
        }
        .sm\:justify-start {
            justify-content: flex-start;
        }
        .sm\:gap-3 {
            gap: calc(var(--spacing) * 3);
        }
        .sm\:gap-5 {
            gap: calc(var(--spacing) * 5);
        }
        .sm\:gap-6 {
            gap: calc(var(--spacing) * 6);
        }
        .sm\:gap-8 {
            gap: calc(var(--spacing) * 8);
        }
        :where(.sm\:space-y-20 > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 20) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 20) * calc(1 - var(--tw-space-y-reverse)));
        }
        :where(.sm\:divide-x > :not(:last-child)) {
            --tw-divide-x-reverse: 0;
            border-inline-style: var(--tw-border-style);
            border-inline-start-width: calc(1px * var(--tw-divide-x-reverse));
            border-inline-end-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
        }
        .sm\:rounded-\[60px\] {
            border-radius: 60px;
        }
        .sm\:rounded-full {
            border-radius: 3.40282e38px;
        }
        .sm\:\[background-size\:100\%_100\%\] {
            background-size: 100% 100%;
        }
        .sm\:p-2\.5 {
            padding: calc(var(--spacing) * 2.5);
        }
        .sm\:p-6 {
            padding: calc(var(--spacing) * 6);
        }
        .sm\:p-8 {
            padding: calc(var(--spacing) * 8);
        }
        .sm\:px-6 {
            padding-inline: calc(var(--spacing) * 6);
        }
        .sm\:px-16 {
            padding-inline: calc(var(--spacing) * 16);
        }
        .sm\:pt-8 {
            padding-top: calc(var(--spacing) * 8);
        }
        .sm\:text-2xl {
            font-size: var(--text-2xl);
            line-height: var(--tw-leading, var(--text-2xl--line-height));
        }
        .sm\:text-3xl {
            font-size: var(--text-3xl);
            line-height: var(--tw-leading, var(--text-3xl--line-height));
        }
        .sm\:text-4xl {
            font-size: var(--text-4xl);
            line-height: var(--tw-leading, var(--text-4xl--line-height));
        }
        .sm\:text-base {
            font-size: var(--text-base);
            line-height: var(--tw-leading, var(--text-base--line-height));
        }
        .sm\:text-lg {
            font-size: var(--text-lg);
            line-height: var(--tw-leading, var(--text-lg--line-height));
        }
        .sm\:text-sm {
            font-size: var(--text-sm);
            line-height: var(--tw-leading, var(--text-sm--line-height));
        }
        .sm\:text-xl {
            font-size: var(--text-xl);
            line-height: var(--tw-leading, var(--text-xl--line-height));
        }
        .sm\:btn-sm {
            --fontsize: 0.75rem;
            --btn-p: 0.75rem;
            --size: calc(var(--size-field, 0.25rem) * 8);
        }
    }
    @media (min-width: 48rem) {
        .md\:-inset-x-24 {
            inset-inline: calc(var(--spacing) * -24);
        }
        .md\:top-1\/2 {
            top: 50%;
        }
        .md\:col-span-4 {
            grid-column: span 4 / span 4;
        }
        .md\:col-span-8 {
            grid-column: span 8 / span 8;
        }
        .md\:mx-20 {
            margin-inline: calc(var(--spacing) * 20);
        }
        .md\:mt-4 {
            margin-top: calc(var(--spacing) * 4);
        }
        .md\:mt-6 {
            margin-top: calc(var(--spacing) * 6);
        }
        .md\:mt-10 {
            margin-top: calc(var(--spacing) * 10);
        }
        .md\:mt-12 {
            margin-top: calc(var(--spacing) * 12);
        }
        .md\:mt-16 {
            margin-top: calc(var(--spacing) * 16);
        }
        .md\:flex {
            display: flex;
        }
        .md\:hidden {
            display: none;
        }
        .md\:size-10 {
            width: calc(var(--spacing) * 10);
            height: calc(var(--spacing) * 10);
        }
        .md\:size-16 {
            width: calc(var(--spacing) * 16);
            height: calc(var(--spacing) * 16);
        }
        .md\:size-24 {
            width: calc(var(--spacing) * 24);
            height: calc(var(--spacing) * 24);
        }
        .md\:size-28 {
            width: calc(var(--spacing) * 28);
            height: calc(var(--spacing) * 28);
        }
        .md\:size-36 {
            width: calc(var(--spacing) * 36);
            height: calc(var(--spacing) * 36);
        }
        .md\:size-48 {
            width: calc(var(--spacing) * 48);
            height: calc(var(--spacing) * 48);
        }
        .md\:h-16 {
            height: calc(var(--spacing) * 16);
        }
        .md\:h-28 {
            height: calc(var(--spacing) * 28);
        }
        .md\:h-60 {
            height: calc(var(--spacing) * 60);
        }
        .md\:h-88 {
            height: calc(var(--spacing) * 88);
        }
        .md\:max-w-xl {
            max-width: var(--container-xl);
        }
        .md\:-translate-y-1\/2 {
            --tw-translate-y: -50%;
            translate: var(--tw-translate-x) var(--tw-translate-y);
        }
        .md\:grid-cols-1 {
            grid-template-columns: repeat(1, minmax(0, 1fr));
        }
        .md\:grid-cols-2 {
            grid-template-columns: repeat(2, minmax(0, 1fr));
        }
        .md\:grid-cols-3 {
            grid-template-columns: repeat(3, minmax(0, 1fr));
        }
        .md\:grid-cols-4 {
            grid-template-columns: repeat(4, minmax(0, 1fr));
        }
        .md\:grid-cols-5 {
            grid-template-columns: repeat(5, minmax(0, 1fr));
        }
        .md\:grid-cols-6 {
            grid-template-columns: repeat(6, minmax(0, 1fr));
        }
        :where(.md\:space-y-8 > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));
        }
        .md\:p-8 {
            padding: calc(var(--spacing) * 8);
        }
        .md\:px-6 {
            padding-inline: calc(var(--spacing) * 6);
        }
        .md\:px-8 {
            padding-inline: calc(var(--spacing) * 8);
        }
        .md\:py-12 {
            padding-block: calc(var(--spacing) * 12);
        }
        .md\:pt-12 {
            padding-top: calc(var(--spacing) * 12);
        }
        .md\:pt-14 {
            padding-top: calc(var(--spacing) * 14);
        }
        .md\:pb-18 {
            padding-bottom: calc(var(--spacing) * 18);
        }
        .md\:text-4xl {
            font-size: var(--text-4xl);
            line-height: var(--tw-leading, var(--text-4xl--line-height));
        }
        .md\:text-lg {
            font-size: var(--text-lg);
            line-height: var(--tw-leading, var(--text-lg--line-height));
        }
        .md\:text-sm {
            font-size: var(--text-sm);
            line-height: var(--tw-leading, var(--text-sm--line-height));
        }
        .md\:text-xl {
            font-size: var(--text-xl);
            line-height: var(--tw-leading, var(--text-xl--line-height));
        }
    }
    @media (min-width: 64rem) {
        .lg\:col-span-2 {
            grid-column: span 2 / span 2;
        }
        .lg\:col-span-3 {
            grid-column: span 3 / span 3;
        }
        .lg\:col-span-4 {
            grid-column: span 4 / span 4;
        }
        .lg\:col-span-5 {
            grid-column: span 5 / span 5;
        }
        .lg\:col-span-7 {
            grid-column: span 7 / span 7;
        }
        .lg\:col-span-8 {
            grid-column: span 8 / span 8;
        }
        .lg\:mt-6 {
            margin-top: calc(var(--spacing) * 6);
        }
        .lg\:mt-12 {
            margin-top: calc(var(--spacing) * 12);
        }
        .lg\:mt-16 {
            margin-top: calc(var(--spacing) * 16);
        }
        .lg\:mt-24 {
            margin-top: calc(var(--spacing) * 24);
        }
        .lg\:block {
            display: block;
        }
        .lg\:hidden {
            display: none;
        }
        .lg\:inline {
            display: inline;
        }
        .lg\:inline-flex {
            display: inline-flex;
        }
        .lg\:max-w-3xl {
            max-width: var(--container-3xl);
        }
        .lg\:grid-cols-1 {
            grid-template-columns: repeat(1, minmax(0, 1fr));
        }
        .lg\:grid-cols-2 {
            grid-template-columns: repeat(2, minmax(0, 1fr));
        }
        .lg\:grid-cols-3 {
            grid-template-columns: repeat(3, minmax(0, 1fr));
        }
        .lg\:grid-cols-4 {
            grid-template-columns: repeat(4, minmax(0, 1fr));
        }
        .lg\:grid-cols-7 {
            grid-template-columns: repeat(7, minmax(0, 1fr));
        }
        .lg\:grid-cols-12 {
            grid-template-columns: repeat(12, minmax(0, 1fr));
        }
        .lg\:gap-6 {
            gap: calc(var(--spacing) * 6);
        }
        .lg\:gap-24 {
            gap: calc(var(--spacing) * 24);
        }
        .lg\:border-e {
            border-inline-end-style: var(--tw-border-style);
            border-inline-end-width: 1px;
        }
        .lg\:p-16 {
            padding: calc(var(--spacing) * 16);
        }
        .lg\:py-1\.5 {
            padding-block: calc(var(--spacing) * 1.5);
        }
        .lg\:pb-16 {
            padding-bottom: calc(var(--spacing) * 16);
        }
        .lg\:text-4xl {
            font-size: var(--text-4xl);
            line-height: var(--tw-leading, var(--text-4xl--line-height));
        }
        .lg\:text-5xl {
            font-size: var(--text-5xl);
            line-height: var(--tw-leading, var(--text-5xl--line-height));
        }
    }
    @media (min-width: 80rem) {
        .xl\:col-span-1 {
            grid-column: span 1 / span 1;
        }
        .xl\:col-span-2 {
            grid-column: span 2 / span 2;
        }
        .xl\:col-span-3 {
            grid-column: span 3 / span 3;
        }
        .xl\:col-span-4 {
            grid-column: span 4 / span 4;
        }
        .xl\:col-span-5 {
            grid-column: span 5 / span 5;
        }
        .xl\:col-span-6 {
            grid-column: span 6 / span 6;
        }
        .xl\:col-span-7 {
            grid-column: span 7 / span 7;
        }
        .xl\:col-span-8 {
            grid-column: span 8 / span 8;
        }
        .xl\:mt-8 {
            margin-top: calc(var(--spacing) * 8);
        }
        .xl\:mt-10 {
            margin-top: calc(var(--spacing) * 10);
        }
        .xl\:mt-12 {
            margin-top: calc(var(--spacing) * 12);
        }
        .xl\:mt-16 {
            margin-top: calc(var(--spacing) * 16);
        }
        .xl\:mt-20 {
            margin-top: calc(var(--spacing) * 20);
        }
        .xl\:mt-32 {
            margin-top: calc(var(--spacing) * 32);
        }
        .xl\:block {
            display: block;
        }
        .xl\:hidden {
            display: none;
        }
        .xl\:max-w-5xl {
            max-width: var(--container-5xl);
        }
        .xl\:grid-cols-1 {
            grid-template-columns: repeat(1, minmax(0, 1fr));
        }
        .xl\:grid-cols-2 {
            grid-template-columns: repeat(2, minmax(0, 1fr));
        }
        .xl\:grid-cols-3 {
            grid-template-columns: repeat(3, minmax(0, 1fr));
        }
        .xl\:grid-cols-4 {
            grid-template-columns: repeat(4, minmax(0, 1fr));
        }
        .xl\:grid-cols-5 {
            grid-template-columns: repeat(5, minmax(0, 1fr));
        }
        .xl\:grid-cols-6 {
            grid-template-columns: repeat(6, minmax(0, 1fr));
        }
        .xl\:grid-cols-8 {
            grid-template-columns: repeat(8, minmax(0, 1fr));
        }
        .xl\:grid-cols-12 {
            grid-template-columns: repeat(12, minmax(0, 1fr));
        }
        .xl\:gap-5 {
            gap: calc(var(--spacing) * 5);
        }
        .xl\:gap-8 {
            gap: calc(var(--spacing) * 8);
        }
        .xl\:gap-12 {
            gap: calc(var(--spacing) * 12);
        }
        :where(.xl\:space-y-12 > :not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start: calc(calc(var(--spacing) * 12) * var(--tw-space-y-reverse));
            margin-block-end: calc(calc(var(--spacing) * 12) * calc(1 - var(--tw-space-y-reverse)));
        }
        .xl\:px-12 {
            padding-inline: calc(var(--spacing) * 12);
        }
        .xl\:py-12 {
            padding-block: calc(var(--spacing) * 12);
        }
        .xl\:py-16 {
            padding-block: calc(var(--spacing) * 16);
        }
        .xl\:py-40 {
            padding-block: calc(var(--spacing) * 40);
        }
        .xl\:pt-16 {
            padding-top: calc(var(--spacing) * 16);
        }
        .xl\:pb-24 {
            padding-bottom: calc(var(--spacing) * 24);
        }
    }
    @media (min-width: 96rem) {
        .\32xl\:col-span-1 {
            grid-column: span 1 / span 1;
        }
        .\32xl\:col-span-2 {
            grid-column: span 2 / span 2;
        }
        .\32xl\:col-span-3 {
            grid-column: span 3 / span 3;
        }
        .\32xl\:col-span-4 {
            grid-column: span 4 / span 4;
        }
        .\32xl\:col-span-5 {
            grid-column: span 5 / span 5;
        }
        .\32xl\:col-span-7 {
            grid-column: span 7 / span 7;
        }
        .\32xl\:col-span-9 {
            grid-column: span 9 / span 9;
        }
        .\32xl\:mt-16 {
            margin-top: calc(var(--spacing) * 16);
        }
        .\32xl\:mt-24 {
            margin-top: calc(var(--spacing) * 24);
        }
        .\32xl\:flex {
            display: flex;
        }
        .\32xl\:inline-flex {
            display: inline-flex;
        }
        .\32xl\:max-w-6xl {
            max-width: var(--container-6xl);
        }
        .\32xl\:grid-cols-3 {
            grid-template-columns: repeat(3, minmax(0, 1fr));
        }
        .\32xl\:grid-cols-4 {
            grid-template-columns: repeat(4, minmax(0, 1fr));
        }
        .\32xl\:grid-cols-5 {
            grid-template-columns: repeat(5, minmax(0, 1fr));
        }
        .\32xl\:grid-cols-6 {
            grid-template-columns: repeat(6, minmax(0, 1fr));
        }
        .\32xl\:grid-cols-10 {
            grid-template-columns: repeat(10, minmax(0, 1fr));
        }
        .\32xl\:grid-cols-12 {
            grid-template-columns: repeat(12, minmax(0, 1fr));
        }
        .\32xl\:gap-3 {
            gap: calc(var(--spacing) * 3);
        }
        .\32xl\:gap-6 {
            gap: calc(var(--spacing) * 6);
        }
        .\32xl\:p-4 {
            padding: calc(var(--spacing) * 4);
        }
        .\32xl\:p-5 {
            padding: calc(var(--spacing) * 5);
        }
        .\32xl\:px-20 {
            padding-inline: calc(var(--spacing) * 20);
        }
        .\32xl\:py-24 {
            padding-block: calc(var(--spacing) * 24);
        }
        .\32xl\:pt-24 {
            padding-top: calc(var(--spacing) * 24);
        }
        .\32xl\:pb-36 {
            padding-bottom: calc(var(--spacing) * 36);
        }
        .\32xl\:pb-48 {
            padding-bottom: calc(var(--spacing) * 48);
        }
        .\32xl\:text-2xl {
            font-size: var(--text-2xl);
            line-height: var(--tw-leading, var(--text-2xl--line-height));
        }
        .\32xl\:text-5xl {
            font-size: var(--text-5xl);
            line-height: var(--tw-leading, var(--text-5xl--line-height));
        }
        .\32xl\:text-6xl {
            font-size: var(--text-6xl);
            line-height: var(--tw-leading, var(--text-6xl--line-height));
        }
    }
    .dark\:block:where(
        [data-theme="dark"] *,
        [data-theme="dim"] *,
        [data-theme="material-dark"] *
    ) {
        display: block;
    }
    @media (prefers-color-scheme: dark) {
        .dark\:block:not(
            [data-theme="light"] *,
            [data-theme="contrast"] *,
            [data-theme="material"] *
        ) {
            display: block;
        }
    }
    .dark\:hidden:where(
        [data-theme="dark"] *,
        [data-theme="dim"] *,
        [data-theme="material-dark"] *
    ) {
        display: none;
    }
    @media (prefers-color-scheme: dark) {
        .dark\:hidden:not(
            [data-theme="light"] *,
            [data-theme="contrast"] *,
            [data-theme="material"] *
        ) {
            display: none;
        }
    }
    .dark\:inline:where(
        [data-theme="dark"] *,
        [data-theme="dim"] *,
        [data-theme="material-dark"] *
    ) {
        display: inline;
    }
    @media (prefers-color-scheme: dark) {
        .dark\:inline:not(
            [data-theme="light"] *,
            [data-theme="contrast"] *,
            [data-theme="material"] *
        ) {
            display: inline;
        }
    }
    .dark\:border-white:where(
        [data-theme="dark"] *,
        [data-theme="dim"] *,
        [data-theme="material-dark"] *
    ) {
        border-color: var(--color-white);
    }
    @media (prefers-color-scheme: dark) {
        .dark\:border-white:not(
            [data-theme="light"] *,
            [data-theme="contrast"] *,
            [data-theme="material"] *
        ) {
            border-color: var(--color-white);
        }
    }
    .dark\:border-white\/2:where(
        [data-theme="dark"] *,
        [data-theme="dim"] *,
        [data-theme="material-dark"] *
    ) {
        border-color: #ffffff05;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .dark\:border-white\/2:where(
            [data-theme="dark"] *,
            [data-theme="dim"] *,
            [data-theme="material-dark"] *
        ) {
            border-color: color-mix(in oklab, var(--color-white) 2%, transparent);
        }
    }
    @media (prefers-color-scheme: dark) {
        .dark\:border-white\/2:not(
            [data-theme="light"] *,
            [data-theme="contrast"] *,
            [data-theme="material"] *
        ) {
            border-color: #ffffff05;
        }
        @supports (color: color-mix(in lab, red, red)) {
            .dark\:border-white\/2:not(
                [data-theme="light"] *,
                [data-theme="contrast"] *,
                [data-theme="material"] *
            ) {
                border-color: color-mix(in oklab, var(--color-white) 2%, transparent);
            }
        }
    }
    .dark\:border-white\/5:where(
        [data-theme="dark"] *,
        [data-theme="dim"] *,
        [data-theme="material-dark"] *
    ) {
        border-color: #ffffff0d;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .dark\:border-white\/5:where(
            [data-theme="dark"] *,
            [data-theme="dim"] *,
            [data-theme="material-dark"] *
        ) {
            border-color: color-mix(in oklab, var(--color-white) 5%, transparent);
        }
    }
    @media (prefers-color-scheme: dark) {
        .dark\:border-white\/5:not(
            [data-theme="light"] *,
            [data-theme="contrast"] *,
            [data-theme="material"] *
        ) {
            border-color: #ffffff0d;
        }
        @supports (color: color-mix(in lab, red, red)) {
            .dark\:border-white\/5:not(
                [data-theme="light"] *,
                [data-theme="contrast"] *,
                [data-theme="material"] *
            ) {
                border-color: color-mix(in oklab, var(--color-white) 5%, transparent);
            }
        }
    }
    .dark\:border-white\/10:where(
        [data-theme="dark"] *,
        [data-theme="dim"] *,
        [data-theme="material-dark"] *
    ) {
        border-color: #ffffff1a;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .dark\:border-white\/10:where(
            [data-theme="dark"] *,
            [data-theme="dim"] *,
            [data-theme="material-dark"] *
        ) {
            border-color: color-mix(in oklab, var(--color-white) 10%, transparent);
        }
    }
    @media (prefers-color-scheme: dark) {
        .dark\:border-white\/10:not(
            [data-theme="light"] *,
            [data-theme="contrast"] *,
            [data-theme="material"] *
        ) {
            border-color: #ffffff1a;
        }
        @supports (color: color-mix(in lab, red, red)) {
            .dark\:border-white\/10:not(
                [data-theme="light"] *,
                [data-theme="contrast"] *,
                [data-theme="material"] *
            ) {
                border-color: color-mix(in oklab, var(--color-white) 10%, transparent);
            }
        }
    }
    .dark\:bg-\[\#14181c\]:where(
            [data-theme="dark"] *,
            [data-theme="dim"] *,
            [data-theme="material-dark"] *
        ) {
        background-color: #14181c;
    }
    @media (prefers-color-scheme: dark) {
        .dark\:bg-\[\#14181c\]:not(
                [data-theme="light"] *,
                [data-theme="contrast"] *,
                [data-theme="material"] *
            ) {
            background-color: #14181c;
        }
    }
    .dark\:bg-white\/4:where(
        [data-theme="dark"] *,
        [data-theme="dim"] *,
        [data-theme="material-dark"] *
    ) {
        background-color: #ffffff0a;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .dark\:bg-white\/4:where(
            [data-theme="dark"] *,
            [data-theme="dim"] *,
            [data-theme="material-dark"] *
        ) {
            background-color: color-mix(in oklab, var(--color-white) 4%, transparent);
        }
    }
    @media (prefers-color-scheme: dark) {
        .dark\:bg-white\/4:not(
            [data-theme="light"] *,
            [data-theme="contrast"] *,
            [data-theme="material"] *
        ) {
            background-color: #ffffff0a;
        }
        @supports (color: color-mix(in lab, red, red)) {
            .dark\:bg-white\/4:not(
                [data-theme="light"] *,
                [data-theme="contrast"] *,
                [data-theme="material"] *
            ) {
                background-color: color-mix(in oklab, var(--color-white) 4%, transparent);
            }
        }
    }
    .dark\:bg-white\/5:where(
        [data-theme="dark"] *,
        [data-theme="dim"] *,
        [data-theme="material-dark"] *
    ) {
        background-color: #ffffff0d;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .dark\:bg-white\/5:where(
            [data-theme="dark"] *,
            [data-theme="dim"] *,
            [data-theme="material-dark"] *
        ) {
            background-color: color-mix(in oklab, var(--color-white) 5%, transparent);
        }
    }
    @media (prefers-color-scheme: dark) {
        .dark\:bg-white\/5:not(
            [data-theme="light"] *,
            [data-theme="contrast"] *,
            [data-theme="material"] *
        ) {
            background-color: #ffffff0d;
        }
        @supports (color: color-mix(in lab, red, red)) {
            .dark\:bg-white\/5:not(
                [data-theme="light"] *,
                [data-theme="contrast"] *,
                [data-theme="material"] *
            ) {
                background-color: color-mix(in oklab, var(--color-white) 5%, transparent);
            }
        }
    }
    .dark\:bg-white\/10:where(
        [data-theme="dark"] *,
        [data-theme="dim"] *,
        [data-theme="material-dark"] *
    ) {
        background-color: #ffffff1a;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .dark\:bg-white\/10:where(
            [data-theme="dark"] *,
            [data-theme="dim"] *,
            [data-theme="material-dark"] *
        ) {
            background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
        }
    }
    @media (prefers-color-scheme: dark) {
        .dark\:bg-white\/10:not(
            [data-theme="light"] *,
            [data-theme="contrast"] *,
            [data-theme="material"] *
        ) {
            background-color: #ffffff1a;
        }
        @supports (color: color-mix(in lab, red, red)) {
            .dark\:bg-white\/10:not(
                [data-theme="light"] *,
                [data-theme="contrast"] *,
                [data-theme="material"] *
            ) {
                background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
            }
        }
    }
    .dark\:from-purple-400:where(
        [data-theme="dark"] *,
        [data-theme="dim"] *,
        [data-theme="material-dark"] *
    ) {
        --tw-gradient-from: var(--color-purple-400);
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    @media (prefers-color-scheme: dark) {
        .dark\:from-purple-400:not(
            [data-theme="light"] *,
            [data-theme="contrast"] *,
            [data-theme="material"] *
        ) {
            --tw-gradient-from: var(--color-purple-400);
            --tw-gradient-stops: var(
                --tw-gradient-via-stops,
                var(--tw-gradient-position),
                var(--tw-gradient-from) var(--tw-gradient-from-position),
                var(--tw-gradient-to) var(--tw-gradient-to-position)
            );
        }
    }
    .dark\:via-blue-400:where(
        [data-theme="dark"] *,
        [data-theme="dim"] *,
        [data-theme="material-dark"] *
    ) {
        --tw-gradient-via: var(--color-blue-400);
        --tw-gradient-via-stops:
            var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-via) var(--tw-gradient-via-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position);
        --tw-gradient-stops: var(--tw-gradient-via-stops);
    }
    @media (prefers-color-scheme: dark) {
        .dark\:via-blue-400:not(
            [data-theme="light"] *,
            [data-theme="contrast"] *,
            [data-theme="material"] *
        ) {
            --tw-gradient-via: var(--color-blue-400);
            --tw-gradient-via-stops:
                var(--tw-gradient-position),
                var(--tw-gradient-from) var(--tw-gradient-from-position),
                var(--tw-gradient-via) var(--tw-gradient-via-position),
                var(--tw-gradient-to) var(--tw-gradient-to-position);
            --tw-gradient-stops: var(--tw-gradient-via-stops);
        }
    }
    .dark\:to-cyan-400:where(
        [data-theme="dark"] *,
        [data-theme="dim"] *,
        [data-theme="material-dark"] *
    ) {
        --tw-gradient-to: var(--color-cyan-400);
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    @media (prefers-color-scheme: dark) {
        .dark\:to-cyan-400:not(
            [data-theme="light"] *,
            [data-theme="contrast"] *,
            [data-theme="material"] *
        ) {
            --tw-gradient-to: var(--color-cyan-400);
            --tw-gradient-stops: var(
                --tw-gradient-via-stops,
                var(--tw-gradient-position),
                var(--tw-gradient-from) var(--tw-gradient-from-position),
                var(--tw-gradient-to) var(--tw-gradient-to-position)
            );
        }
    }
    .dark\:text-orange-400:where(
        [data-theme="dark"] *,
        [data-theme="dim"] *,
        [data-theme="material-dark"] *
    ) {
        color: var(--color-orange-400);
    }
    @media (prefers-color-scheme: dark) {
        .dark\:text-orange-400:not(
            [data-theme="light"] *,
            [data-theme="contrast"] *,
            [data-theme="material"] *
        ) {
            color: var(--color-orange-400);
        }
    }
    .dark\:text-white:where(
        [data-theme="dark"] *,
        [data-theme="dim"] *,
        [data-theme="material-dark"] *
    ) {
        color: var(--color-white);
    }
    @media (prefers-color-scheme: dark) {
        .dark\:text-white:not(
            [data-theme="light"] *,
            [data-theme="contrast"] *,
            [data-theme="material"] *
        ) {
            color: var(--color-white);
        }
    }
    .dark\:opacity-6:where(
        [data-theme="dark"] *,
        [data-theme="dim"] *,
        [data-theme="material-dark"] *
    ) {
        opacity: 0.06;
    }
    @media (prefers-color-scheme: dark) {
        .dark\:opacity-6:not(
            [data-theme="light"] *,
            [data-theme="contrast"] *,
            [data-theme="material"] *
        ) {
            opacity: 0.06;
        }
    }
    .dark\:opacity-15:where(
        [data-theme="dark"] *,
        [data-theme="dim"] *,
        [data-theme="material-dark"] *
    ) {
        opacity: 0.15;
    }
    @media (prefers-color-scheme: dark) {
        .dark\:opacity-15:not(
            [data-theme="light"] *,
            [data-theme="contrast"] *,
            [data-theme="material"] *
        ) {
            opacity: 0.15;
        }
    }
    .dark\:opacity-20:where(
        [data-theme="dark"] *,
        [data-theme="dim"] *,
        [data-theme="material-dark"] *
    ) {
        opacity: 0.2;
    }
    @media (prefers-color-scheme: dark) {
        .dark\:opacity-20:not(
            [data-theme="light"] *,
            [data-theme="contrast"] *,
            [data-theme="material"] *
        ) {
            opacity: 0.2;
        }
    }
    .dark\:opacity-60:where(
        [data-theme="dark"] *,
        [data-theme="dim"] *,
        [data-theme="material-dark"] *
    ) {
        opacity: 0.6;
    }
    @media (prefers-color-scheme: dark) {
        .dark\:opacity-60:not(
            [data-theme="light"] *,
            [data-theme="contrast"] *,
            [data-theme="material"] *
        ) {
            opacity: 0.6;
        }
    }
    .dark\:invert:where(
        [data-theme="dark"] *,
        [data-theme="dim"] *,
        [data-theme="material-dark"] *
    ) {
        --tw-invert: invert(100%);
        filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,)
            var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,)
            var(--tw-drop-shadow,);
    }
    @media (prefers-color-scheme: dark) {
        .dark\:invert:not(
            [data-theme="light"] *,
            [data-theme="contrast"] *,
            [data-theme="material"] *
        ) {
            --tw-invert: invert(100%);
            filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,)
                var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,)
                var(--tw-drop-shadow,);
        }
    }
    @media (hover: hover) {
        .group-hover\:dark\:\!opacity-40:is(:where(.group):hover *):where(
                [data-theme="dark"] *,
                [data-theme="dim"] *,
                [data-theme="material-dark"] *
            ) {
            opacity: 0.4 !important;
        }
        @media (prefers-color-scheme: dark) {
            .group-hover\:dark\:\!opacity-40:is(:where(.group):hover *):not(
                    [data-theme="light"] *,
                    [data-theme="contrast"] *,
                    [data-theme="material"] *
                ) {
                opacity: 0.4 !important;
            }
        }
    }
    .group-data-\[at-top\=false\]\:dark\:bg-base-200:is(
            :where(.group)[data-at-top="false"] *
        ):where([data-theme="dark"] *, [data-theme="dim"] *, [data-theme="material-dark"] *) {
        background-color: var(--color-base-200);
    }
    @media (prefers-color-scheme: dark) {
        .group-data-\[at-top\=false\]\:dark\:bg-base-200:is(
                :where(.group)[data-at-top="false"] *
            ):not([data-theme="light"] *, [data-theme="contrast"] *, [data-theme="material"] *) {
            background-color: var(--color-base-200);
        }
    }
    @media (hover: hover) {
        .dark\:hover\:bg-white:where(
                [data-theme="dark"] *,
                [data-theme="dim"] *,
                [data-theme="material-dark"] *
            ):hover {
            background-color: var(--color-white);
        }
    }
    @media (prefers-color-scheme: dark) {
        @media (hover: hover) {
            .dark\:hover\:bg-white:not(
                    [data-theme="light"] *,
                    [data-theme="contrast"] *,
                    [data-theme="material"] *
                ):hover {
                background-color: var(--color-white);
            }
        }
    }
    @media (hover: hover) {
        .dark\:hover\:bg-white\/10:where(
                [data-theme="dark"] *,
                [data-theme="dim"] *,
                [data-theme="material-dark"] *
            ):hover {
            background-color: #ffffff1a;
        }
        @supports (color: color-mix(in lab, red, red)) {
            .dark\:hover\:bg-white\/10:where(
                    [data-theme="dark"] *,
                    [data-theme="dim"] *,
                    [data-theme="material-dark"] *
                ):hover {
                background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
            }
        }
    }
    @media (prefers-color-scheme: dark) {
        @media (hover: hover) {
            .dark\:hover\:bg-white\/10:not(
                    [data-theme="light"] *,
                    [data-theme="contrast"] *,
                    [data-theme="material"] *
                ):hover {
                background-color: #ffffff1a;
            }
            @supports (color: color-mix(in lab, red, red)) {
                .dark\:hover\:bg-white\/10:not(
                        [data-theme="light"] *,
                        [data-theme="contrast"] *,
                        [data-theme="material"] *
                    ):hover {
                    background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
                }
            }
        }
    }
    @media (hover: hover) {
        .dark\:hover\:bg-white\/20:where(
                [data-theme="dark"] *,
                [data-theme="dim"] *,
                [data-theme="material-dark"] *
            ):hover {
            background-color: #fff3;
        }
        @supports (color: color-mix(in lab, red, red)) {
            .dark\:hover\:bg-white\/20:where(
                    [data-theme="dark"] *,
                    [data-theme="dim"] *,
                    [data-theme="material-dark"] *
                ):hover {
                background-color: color-mix(in oklab, var(--color-white) 20%, transparent);
            }
        }
    }
    @media (prefers-color-scheme: dark) {
        @media (hover: hover) {
            .dark\:hover\:bg-white\/20:not(
                    [data-theme="light"] *,
                    [data-theme="contrast"] *,
                    [data-theme="material"] *
                ):hover {
                background-color: #fff3;
            }
            @supports (color: color-mix(in lab, red, red)) {
                .dark\:hover\:bg-white\/20:not(
                        [data-theme="light"] *,
                        [data-theme="contrast"] *,
                        [data-theme="material"] *
                    ):hover {
                    background-color: color-mix(in oklab, var(--color-white) 20%, transparent);
                }
            }
        }
    }
    @media (hover: hover) {
        .dark\:hover\:text-black:where(
                [data-theme="dark"] *,
                [data-theme="dim"] *,
                [data-theme="material-dark"] *
            ):hover {
            color: var(--color-black);
        }
    }
    @media (prefers-color-scheme: dark) {
        @media (hover: hover) {
            .dark\:hover\:text-black:not(
                    [data-theme="light"] *,
                    [data-theme="contrast"] *,
                    [data-theme="material"] *
                ):hover {
                color: var(--color-black);
            }
        }
    }
    @starting-style {
        .starting\:scale-125 {
            --tw-scale-x: 125%;
            --tw-scale-y: 125%;
            --tw-scale-z: 125%;
            scale: var(--tw-scale-x) var(--tw-scale-y);
        }
    }
    @starting-style {
        .starting\:opacity-0 {
            opacity: 0;
        }
    }
    @starting-style {
        .starting\:blur-sm {
            --tw-blur: blur(var(--blur-sm));
            filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,)
                var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,)
                var(--tw-drop-shadow,);
        }
    }
    .\[\&\.drag\]\:rounded-box.drag {
        border-radius: var(--radius-box);
    }
    .\[\&\.drag\]\:border.drag {
        border-style: var(--tw-border-style);
        border-width: 1px;
    }
    .\[\&\.drag\]\:bg-base-100.drag {
        background-color: var(--color-base-100);
    }
    .\[\&\.ghost\]\:motion-preset-shake.ghost {
        --motion-duration: 0.3s;
        --motion-origin-rotate: 15deg;
        --motion-origin-opacity: 0;
        --motion-rotate-timing: var(--motion-spring-bounciest);
        --motion-rotate-perceptual-duration-multiplier: 2.035;
        --motion-opacity-in-animation: motion-opacity-in
            calc(
                var(--motion-opacity-duration, var(--motion-duration)) *
                    var(
                        --motion-opacity-perceptual-duration-multiplier,
                        var(--motion-perceptual-duration-multiplier)
                    )
            )
            var(--motion-opacity-timing, var(--motion-timing))
            var(--motion-opacity-delay, var(--motion-delay)) both;
        --motion-rotate-in-animation: motion-rotate-in
            calc(
                var(--motion-rotate-duration, var(--motion-duration)) *
                    var(
                        --motion-rotate-perceptual-duration-multiplier,
                        var(--motion-perceptual-duration-multiplier)
                    )
            )
            var(--motion-rotate-timing, var(--motion-timing))
            var(--motion-rotate-delay, var(--motion-delay)) both;
        animation:
            var(--motion-scale-in-animation), var(--motion-translate-in-animation),
            var(--motion-rotate-in-animation), var(--motion-filter-in-animation),
            var(--motion-opacity-in-animation), var(--motion-background-color-in-animation),
            var(--motion-text-color-in-animation), var(--motion-scale-loop-animation),
            var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation),
            var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation),
            var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    }
    .\[\&\.ghost\]\:bg-base-200\/40.ghost {
        background-color: var(--color-base-200);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .\[\&\.ghost\]\:bg-base-200\/40.ghost {
            background-color: color-mix(in oklab, var(--color-base-200) 40%, transparent);
        }
    }
    .\[\&\.ghost\]\:bg-primary\/5.ghost {
        background-color: var(--color-primary);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .\[\&\.ghost\]\:bg-primary\/5.ghost {
            background-color: color-mix(in oklab, var(--color-primary) 5%, transparent);
        }
    }
    .\[\&\.ghost\]\:bg-secondary\/5.ghost {
        background-color: var(--color-secondary);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .\[\&\.ghost\]\:bg-secondary\/5.ghost {
            background-color: color-mix(in oklab, var(--color-secondary) 5%, transparent);
        }
    }
    .\[\&\.p-swap\]\:bg-base-200\/60.p-swap {
        background-color: var(--color-base-200);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .\[\&\.p-swap\]\:bg-base-200\/60.p-swap {
            background-color: color-mix(in oklab, var(--color-base-200) 60%, transparent);
        }
    }
    .\[\&\.selected\]\:bg-base-200\/60.selected {
        background-color: var(--color-base-200);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .\[\&\.selected\]\:bg-base-200\/60.selected {
            background-color: color-mix(in oklab, var(--color-base-200) 60%, transparent);
        }
    }
    .\[\&\:not\(\[data-scrolling\=down\]\)\]\:top-0:not([data-scrolling="down"]) {
        top: calc(var(--spacing) * 0);
    }
    @media (min-width: 40rem) {
        .\[\&\:not\(\[data-scrolling\=down\]\)\]\:sm\:top-4:not([data-scrolling="down"]) {
            top: calc(var(--spacing) * 4);
        }
    }
    .no-spinner::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }
    .no-spinner::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }
    .no-spinner {
        appearance: textfield;
    }
}
html {
    scroll-behavior: smooth;
}
.animated-text {
    animation: var(--animate-text-color);
    color: #0000;
    background-size: 500% 500%;
    -webkit-background-clip: text;
    background-clip: text;
}
.btn,
.card .card-title {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
}
.card .card-body {
    gap: calc(var(--spacing) * 0);
}
.table th {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
}
.menu .menu-title {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    color: var(--color-base-content);
}
@supports (color: color-mix(in lab, red, red)) {
    .menu .menu-title {
        color: color-mix(in oklab, var(--color-base-content) 70%, transparent);
    }
}
.timeline:not(.timeline-vertical) > li > hr {
    height: 2px;
}
.timeline.timeline-vertical > li > hr {
    width: 2px;
}
.cally ::part(button) {
    font-family: var(--font-sans);
}
.fieldset .fieldset-legend {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
    color: var(--color-base-content);
}
@supports (color: color-mix(in lab, red, red)) {
    .fieldset .fieldset-legend {
        color: color-mix(in oklab, var(--color-base-content) 80%, transparent);
    }
}
.fieldset .fieldset-label,
.fieldset .label {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    color: var(--color-base-content);
}
@supports (color: color-mix(in lab, red, red)) {
    .fieldset .fieldset-label,
    .fieldset .label {
        color: color-mix(in oklab, var(--color-base-content) 80%, transparent);
    }
}
:is(.checkbox, .radio, .range, .toggle):disabled {
    opacity: 0.35;
}
.label {
    cursor: pointer;
    color: var(--color-base-content);
}
@supports (color: color-mix(in lab, red, red)) {
    .label {
        color: color-mix(in oklab, var(--color-base-content) 80%, transparent);
    }
}
input:-webkit-autofill {
    -webkit-background-clip: text;
}
input:-webkit-autofill:hover {
    -webkit-background-clip: text;
}
input:-webkit-autofill:focus {
    -webkit-background-clip: text;
}
input:-webkit-autofill:active {
    -webkit-background-clip: text;
}
:is([data-theme="material"], [data-theme="material-dark"]) .card {
    --tw-shadow: 0 0 #0000;
    box-shadow:
        var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow),
        var(--tw-ring-shadow), var(--tw-shadow);
}
:is([data-theme="material"], [data-theme="material-dark"]) .card:not(.card-border) {
    border-style: var(--tw-border-style);
    border-width: 0;
}
.grainy {
    background: #fff0 url(../images/landing/footer-grainy.png) 50%;
}
.landing-gradient-underline {
    position: relative;
}
.landing-gradient-underline:after {
    content: "";
    background-image: url(../images/landing/hero-text-underline.svg);
    background-repeat: no-repeat;
    width: 160%;
    height: 160%;
    position: absolute;
    top: 16px;
    left: 4px;
    transform: rotate(2deg);
}
:root {
    --layout-sidebar-width: 256px;
}
.sidebar-menu .menu-label {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    color: var(--color-base-content);
}
@supports (color: color-mix(in lab, red, red)) {
    .sidebar-menu .menu-label {
        color: color-mix(in oklab, var(--color-base-content) 70%, transparent);
    }
}
.sidebar-menu .menu-item {
    height: calc(var(--spacing) * 8);
    align-items: center;
    gap: calc(var(--spacing) * 2);
    border-radius: var(--radius-box);
    padding-inline: calc(var(--spacing) * 2.5);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    display: flex;
}
.sidebar-menu a,
.sidebar-menu .menu-item-link {
    cursor: pointer;
}
@media (hover: hover) {
    :is(.sidebar-menu a, .sidebar-menu .menu-item-link).menu-item:hover {
        background-color: var(--color-base-200);
    }
}
:is(.sidebar-menu a, .sidebar-menu .menu-item-link).menu-item.active {
    background-color: var(--color-base-200);
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
}
.sidebar-menu .collapse input {
    min-height: calc(var(--spacing) * 8);
    padding: calc(var(--spacing) * 0);
}
.sidebar-menu .collapse .collapse-title {
    min-height: calc(var(--spacing) * 8);
    align-items: center;
    gap: calc(var(--spacing) * 2);
    border-radius: var(--radius-box);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    display: flex;
}
@media (hover: hover) {
    .sidebar-menu .collapse .collapse-title:is(:where(.peer):hover ~ *) {
        background-color: var(--color-base-200);
    }
}
.sidebar-menu .collapse .collapse-title .arrow-icon {
    opacity: 0.6;
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
}
.sidebar-menu .collapse .collapse-title:is(:where(.peer):checked ~ *) {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
}
.sidebar-menu .collapse .collapse-title:is(:where(.peer):checked ~ *) .arrow-icon {
    opacity: 1;
    rotate: 90deg;
}
.sidebar-menu .collapse .collapse-content:before {
    inset-inline-start: calc(var(--spacing) * 4);
    top: calc(var(--spacing) * 10);
    bottom: calc(var(--spacing) * 2);
    background-color: var(--color-base-content);
    width: 1px;
    position: absolute;
}
@supports (color: color-mix(in lab, red, red)) {
    .sidebar-menu .collapse .collapse-content:before {
        background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
    }
}
.sidebar-menu .collapse .collapse-content:before {
    content: "";
}
#layout-sidebar {
    width: var(--layout-sidebar-width);
    min-width: var(--layout-sidebar-width);
    background: var(--layout-sidebar-background);
    max-height: 100vh;
    top: calc(var(--spacing) * 0);
    bottom: calc(var(--spacing) * 0);
    z-index: 10;
    transition-property: margin, top, max-height, border-radius;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 0.3s;
    flex-direction: column;
    transition-duration: 0.3s;
    display: flex;
    position: relative;
}
#layout-sidebar.hide {
    margin-inline-start: calc(var(--layout-sidebar-width) * -1);
}
#layout-topbar {
    background: var(--layout-topbar-background);
    top: calc(var(--spacing) * 0);
    z-index: 10;
    max-height: calc(var(--spacing) * 16);
    min-height: calc(var(--spacing) * 16);
    transition-property: top, margin, border-radius;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 0.3s;
    transition-duration: 0.3s;
    position: sticky;
}
#layout-content {
    padding: calc(var(--spacing) * 6);
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    flex-grow: 1;
}
#layout-sidebar-toggle-trigger:checked ~ #layout-sidebar {
    margin-inline-start: calc(var(--layout-sidebar-width) * -1);
}
#layout-sidebar-hover {
    top: calc(var(--spacing) * 0);
    bottom: calc(var(--spacing) * 0);
    left: calc(var(--spacing) * 0);
    z-index: 11;
    display: none;
    position: fixed;
}
#layout-sidebar-hover-trigger:checked ~ #layout-sidebar {
    z-index: 12;
    margin-inline-start: calc(var(--layout-sidebar-width) * -1);
    position: fixed;
}
#layout-sidebar-hover-trigger:checked ~ #layout-sidebar-hover {
    display: block;
}
#layout-sidebar-hover:hover ~ #layout-sidebar,
#layout-sidebar-hover-trigger:checked ~ #layout-sidebar:hover {
    z-index: 12;
}
@media (min-width: 64rem) {
    #layout-sidebar-hover:hover ~ #layout-sidebar,
    #layout-sidebar-hover-trigger:checked ~ #layout-sidebar:hover {
        margin-inline-start: calc(var(--spacing) * 0) !important;
    }
}
#layout-monochrome-layer {
    pointer-events: none;
    inset: calc(var(--spacing) * 0);
    z-index: 999999;
    opacity: 0;
    --tw-grayscale: grayscale(100%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,)
        var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,)
        var(--tw-drop-shadow,);
    --tw-backdrop-opacity: opacity(100%);
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
        var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,)
        var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,)
        var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
        var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,)
        var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,)
        var(--tw-backdrop-sepia,);
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 1s;
    transition-duration: 1s;
    position: fixed;
}
html[data-monochrome-enabled] #layout-monochrome-layer {
    opacity: 1;
}
@media (max-width: 64rem) {
    #layout-sidebar {
        z-index: 500;
        position: fixed;
    }
    #layout-sidebar-toggle-trigger:not(:checked) ~ #layout-sidebar {
        margin-inline-start: calc(var(--layout-sidebar-width) * -1);
    }
    #layout-sidebar-toggle-trigger:checked ~ #layout-sidebar {
        margin-inline-start: 0;
    }
    #layout-sidebar-toggle-trigger:checked ~ #layout-sidebar-backdrop {
        inset: calc(var(--spacing) * 0);
        z-index: 499;
        background-color: var(--color-base-content);
        position: fixed;
    }
    @supports (color: color-mix(in lab, red, red)) {
        #layout-sidebar-toggle-trigger:checked ~ #layout-sidebar-backdrop {
            background-color: color-mix(in oklab, var(--color-base-content) 5%, transparent);
        }
    }
    #layout-sidebar-toggle-trigger:checked ~ #layout-sidebar-backdrop {
        transition-property: all;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
}
html:not([data-theme="material"], [data-theme="material-dark"]) #layout-sidebar {
    border-inline-end-style: var(--tw-border-style);
    border-inline-end-width: 1px;
    border-color: var(--color-base-200);
}
html:not([data-theme="material"], [data-theme="material-dark"]) #layout-topbar {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
    border-color: var(--color-base-200);
}
:is(html[data-theme="material"], html[data-theme="material-dark"]) #layout-sidebar {
    max-height: calc(100vh - 32px);
    top: calc(var(--spacing) * 4);
    bottom: calc(var(--spacing) * 4);
    border-radius: var(--radius-box);
    margin-inline-start: calc(var(--spacing) * 4);
}
:is(html[data-theme="material"], html[data-theme="material-dark"]) #layout-topbar {
    margin-inline: calc(var(--spacing) * 5);
    margin-top: calc(var(--spacing) * 4);
    border-radius: var(--radius-box);
    position: static;
}
#components-layout {
    background-color: var(--color-base-100);
}
#components-layout-container {
    display: flex;
    padding-inline: calc(var(--spacing) * 0) !important;
}
@media (min-width: 80rem) {
    #components-layout-container {
        width: 100%;
    }
    @media (min-width: 40rem) {
        #components-layout-container {
            max-width: 40rem;
        }
    }
    @media (min-width: 48rem) {
        #components-layout-container {
            max-width: 48rem;
        }
    }
    @media (min-width: 64rem) {
        #components-layout-container {
            max-width: 64rem;
        }
    }
    #components-layout-container {
        max-width: 80rem;
    }
    @media (min-width: 96rem) {
        #components-layout-container {
            max-width: 96rem;
        }
    }
    #components-layout-container {
        margin-inline: auto;
        padding-inline: 1rem;
    }
    @media (min-width: 48rem) {
        #components-layout-container {
            padding-inline: 2rem;
        }
    }
    @media (min-width: 64rem) {
        #components-layout-container {
            padding-inline: 3rem;
        }
    }
    #components-layout-container {
        padding-inline: 4rem;
    }
    @media (min-width: 96rem) {
        #components-layout-container {
            padding-inline: 6rem;
        }
    }
}
#components-layout-main {
    min-width: calc(var(--spacing) * 0);
    --tw-border-style: dashed;
    border-style: dashed;
    border-color: var(--color-base-300);
    flex-grow: 1;
}
@supports (color: color-mix(in lab, red, red)) {
    #components-layout-main {
        border-color: color-mix(in oklab, var(--color-base-300) 80%, transparent);
    }
}
@media (min-width: 80rem) {
    #components-layout-main {
        border-inline-end-style: var(--tw-border-style);
        border-inline-end-width: 1px;
    }
}
#components-layout-content {
    margin-inline: calc(var(--spacing) * 4);
    margin-block: calc(var(--spacing) * 8);
    min-height: calc(100vh - 8rem);
}
@media (min-width: 48rem) {
    #components-layout-content {
        margin-inline: calc(var(--spacing) * 8);
    }
}
@media (min-width: 64rem) {
    #components-layout-content {
        margin-block: calc(var(--spacing) * 12);
    }
}
@media (min-width: 80rem) {
    #components-layout-content {
        margin-inline: calc(var(--spacing) * 12);
    }
}
@media (min-width: 96rem) {
    #components-layout-content {
        margin-inline: calc(var(--spacing) * 20);
    }
}
.apexcharts-canvas * {
    font-family: var(--font-sans) !important;
}
.apexcharts-canvas .apexcharts-gridline,
.apexcharts-canvas .apexcharts-xaxis line,
.apexcharts-canvas .apexcharts-inner .apexcharts-grid-borders line,
.apexcharts-canvas .apexcharts-yaxis line,
.apexcharts-canvas .apexcharts-xaxis-tick {
    stroke: var(--color-base-content);
}
@supports (color: color-mix(in lab, red, red)) {
    .apexcharts-canvas .apexcharts-gridline,
    .apexcharts-canvas .apexcharts-xaxis line,
    .apexcharts-canvas .apexcharts-inner .apexcharts-grid-borders line,
    .apexcharts-canvas .apexcharts-yaxis line,
    .apexcharts-canvas .apexcharts-xaxis-tick {
        stroke: color-mix(in oklab, var(--color-base-content) 15%, transparent);
    }
}
.apexcharts-canvas .apexcharts-menu {
    border-color: var(--color-base-300) !important;
    background-color: var(--color-base-100) !important;
}
@media (hover: hover) {
    .apexcharts-canvas .apexcharts-menu .apexcharts-menu-item:hover {
        background-color: var(--color-base-200);
    }
}
.apexcharts-canvas .apexcharts-tooltip {
    border-color: var(--color-base-300) !important;
    background-color: var(--color-base-100) !important;
    --tw-shadow:
        0 1px 3px 0 var(--tw-shadow-color, #0000001a),
        0 1px 2px -1px var(--tw-shadow-color, #0000001a) !important;
    box-shadow:
        var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow),
        var(--tw-ring-shadow), var(--tw-shadow) !important;
}
.apexcharts-canvas .apexcharts-tooltip .apexcharts-tooltip-title {
    border-color: var(--color-base-300) !important;
    background-color: var(--color-base-200) !important;
}
:is(.apexcharts-canvas .apexcharts-xaxis, .apexcharts-canvas .apexcharts-yaxis) text {
    fill: var(--color-base-content) !important;
}
.apexcharts-canvas .apexcharts-tooltip-text {
    color: var(--color-base-content);
}
.apexcharts-canvas .apexcharts-xaxistooltip {
    border-color: var(--color-base-300) !important;
    background-color: var(--color-base-100) !important;
}
.apexcharts-canvas .apexcharts-xaxistooltip:before,
.apexcharts-canvas .apexcharts-xaxistooltip:after {
    border-bottom-color: var(--color-base-300) !important;
}
.apexcharts-canvas .apexcharts-title-text,
.apexcharts-canvas .apexcharts-datalabels-group .apexcharts-text {
    fill: var(--color-base-content) !important;
}
.apexcharts-canvas .apexcharts-legend-marker path.apexcharts-marker {
    stroke: #0000;
}
.apexcharts-canvas .apexcharts-legend-text {
    color: var(--color-base-content) !important;
}
.apexcharts-canvas .apexcharts-series-markers-wrap .apexcharts-series-markers path {
    stroke: var(--color-base-200);
}
.swiper-thumbs .swiper-slide {
    border-style: var(--tw-border-style);
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 0.3s;
    border-width: 2px;
    border-color: #0000;
    transition-duration: 0.3s;
}
.swiper-thumbs .swiper-slide.swiper-slide-thumb-active {
    border-color: var(--color-primary);
    opacity: 1;
}
.swiper-scrollbar {
    --swiper-scrollbar-size: 8px;
    background-color: var(--color-base-300) !important;
}
.swiper-scrollbar .swiper-scrollbar-drag {
    background-color: var(--color-primary) !important;
}
.swiper-pagination .swiper-pagination-bullet {
    background-color: var(--color-base-content);
}
@supports (color: color-mix(in lab, red, red)) {
    .swiper-pagination .swiper-pagination-bullet {
        background-color: color-mix(in oklab, var(--color-base-content) 15%, transparent);
    }
}
.swiper-pagination .swiper-pagination-bullet {
    opacity: 1;
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 0.3s;
    transition-duration: 0.3s;
}
.swiper-pagination .swiper-pagination-bullet.swiper-pagination-bullet-active {
    --tw-scale-x: 125%;
    --tw-scale-y: 125%;
    --tw-scale-z: 125%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
    background-color: var(--color-primary);
}
.filepond--root {
    margin-bottom: calc(var(--spacing) * 0) !important;
    font-family: var(--font-sans) !important;
}
@media not all and (min-width: 40rem) {
    .filepond--root {
        font-size: var(--text-sm) !important;
        line-height: var(--tw-leading, var(--text-sm--line-height)) !important;
    }
}
.filepond--root .filepond--drop-label,
.filepond--root .filepond--panel-root {
    border-radius: var(--radius-box);
    background-color: var(--color-base-200);
    color: var(--color-base-content);
}
.flatpickr-months .flatpickr-month {
    color: #fff !important;
}
.flatpickr-calendar {
    background-color: var(--color-base-100) !important;
    --tw-shadow:
        0 1px 3px 0 var(--tw-shadow-color, #0000001a),
        0 1px 2px -1px var(--tw-shadow-color, #0000001a) !important;
    box-shadow:
        var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow),
        var(--tw-ring-shadow), var(--tw-shadow) !important;
}
.flatpickr-calendar.open {
    z-index: 1 !important;
}
.flatpickr-calendar:before,
.flatpickr-calendar:after {
    border-bottom-color: var(--color-base-100) !important;
}
.flatpickr-calendar .flatpickr-prev-month,
.flatpickr-calendar .flatpickr-next-month {
    border-radius: var(--radius-box);
    top: calc(var(--spacing) * 2.5) !important;
    height: fit-content !important;
    padding: calc(var(--spacing) * 2) !important;
}
@media (hover: hover) {
    :is(
        .flatpickr-calendar .flatpickr-prev-month,
        .flatpickr-calendar .flatpickr-next-month
    ):hover {
        background-color: var(--color-base-200);
    }
    @supports (color: color-mix(in lab, red, red)) {
        :is(
            .flatpickr-calendar .flatpickr-prev-month,
            .flatpickr-calendar .flatpickr-next-month
        ):hover {
            background-color: color-mix(in oklab, var(--color-base-200) 50%, transparent);
        }
    }
}
:is(.flatpickr-calendar .flatpickr-prev-month, .flatpickr-calendar .flatpickr-next-month) svg {
    width: calc(var(--spacing) * 3) !important;
    height: calc(var(--spacing) * 3) !important;
    fill: var(--color-base-content) !important;
}
@supports (color: color-mix(in lab, red, red)) {
    :is(.flatpickr-calendar .flatpickr-prev-month, .flatpickr-calendar .flatpickr-next-month) svg {
        fill: color-mix(in oklab, var(--color-base-content) 60%, transparent) !important;
    }
}
.flatpickr-calendar .flatpickr-prev-month {
    inset-inline-start: calc(var(--spacing) * 2) !important;
}
.flatpickr-calendar .flatpickr-next-month {
    inset-inline-end: calc(var(--spacing) * 2) !important;
}
.flatpickr-calendar .flatpickr-months {
    padding-block: calc(var(--spacing) * 2);
}
.flatpickr-calendar .flatpickr-month,
.flatpickr-calendar .flatpickr-months {
    align-items: center;
    fill: var(--color-base-content) !important;
    color: var(--color-base-content) !important;
}
.flatpickr-calendar .flatpickr-current-month {
    font-size: var(--text-base) !important;
    line-height: var(--tw-leading, var(--text-base--line-height)) !important;
}
.flatpickr-calendar .flatpickr-current-month .flatpickr-monthDropdown-months,
.flatpickr-calendar .flatpickr-current-month .flatpickr-monthDropdown-month {
    background-color: var(--color-base-100);
    padding: calc(var(--spacing) * 0);
    border-color: var(--color-base-300) !important;
    --tw-outline-style: none !important;
    outline-style: none !important;
}
.flatpickr-calendar .flatpickr-current-month .flatpickr-monthDropdown-months {
    appearance: none;
    border-radius: var(--radius-box);
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    padding-inline-start: calc(var(--spacing) * 2.5);
}
@media (hover: hover) {
    .flatpickr-calendar .flatpickr-current-month .flatpickr-monthDropdown-months:hover {
        background-color: var(--color-base-200);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .flatpickr-calendar .flatpickr-current-month .flatpickr-monthDropdown-months:hover {
            background-color: color-mix(in oklab, var(--color-base-200) 50%, transparent);
        }
    }
}
.flatpickr-calendar .flatpickr-current-month .numInputWrapper .arrowUp,
.flatpickr-calendar .flatpickr-current-month .numInputWrapper .arrowDown {
    border-style: var(--tw-border-style) !important;
    border-width: 0 !important;
}
:is(
    .flatpickr-calendar .flatpickr-current-month .numInputWrapper .arrowUp,
    .flatpickr-calendar .flatpickr-current-month .numInputWrapper .arrowDown
):where([data-theme="dark"] *, [data-theme="dim"] *, [data-theme="material-dark"] *) {
    --tw-invert: invert(100%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,)
        var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,)
        var(--tw-drop-shadow,);
}
@media (prefers-color-scheme: dark) {
    :is(
        .flatpickr-calendar .flatpickr-current-month .numInputWrapper .arrowUp,
        .flatpickr-calendar .flatpickr-current-month .numInputWrapper .arrowDown
    ):not([data-theme="light"] *, [data-theme="contrast"] *, [data-theme="material"] *) {
        --tw-invert: invert(100%);
        filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,)
            var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,)
            var(--tw-drop-shadow,);
    }
}
.flatpickr-calendar .flatpickr-weekday {
    --tw-font-weight: var(--font-weight-medium) !important;
    font-weight: var(--font-weight-medium) !important;
    color: var(--color-base-content) !important;
}
@supports (color: color-mix(in lab, red, red)) {
    .flatpickr-calendar .flatpickr-weekday {
        color: color-mix(in oklab, var(--color-base-content) 75%, transparent) !important;
    }
}
.flatpickr-calendar .flatpickr-weeks {
    border-inline-end-style: var(--tw-border-style);
    border-inline-end-width: 1px;
    border-color: var(--color-base-300);
    --tw-shadow: 0 0 #0000 !important;
    box-shadow:
        var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow),
        var(--tw-ring-shadow), var(--tw-shadow) !important;
}
.flatpickr-calendar .flatpickr-weeks .flatpickr-day {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    color: var(--color-base-content) !important;
}
@supports (color: color-mix(in lab, red, red)) {
    .flatpickr-calendar .flatpickr-weeks .flatpickr-day {
        color: color-mix(in oklab, var(--color-base-content) 60%, transparent) !important;
    }
}
@media (hover: hover) {
    .flatpickr-calendar .flatpickr-weeks .flatpickr-day:hover {
        background-color: #0000 !important;
    }
}
.flatpickr-calendar .flatpickr-day {
    color: var(--color-base-content) !important;
    border-radius: 0.25rem !important;
}
@supports (color: color-mix(in lab, red, red)) {
    .flatpickr-calendar .flatpickr-day {
        color: color-mix(in oklab, var(--color-base-content) 80%, transparent) !important;
    }
}
.flatpickr-calendar .flatpickr-day.today,
.flatpickr-calendar .flatpickr-day.flatpickr-monthSelect-month.today {
    border-color: #0000;
    position: relative;
}
:is(
    .flatpickr-calendar .flatpickr-day.today,
    .flatpickr-calendar .flatpickr-day.flatpickr-monthSelect-month.today
):after {
    inset-inline-end: calc(var(--spacing) * 1);
    top: calc(var(--spacing) * 1);
    background-color: var(--color-primary);
    content: "";
    border-radius: 3.40282e38px;
    width: 5px;
    height: 5px;
    position: absolute;
}
.flatpickr-calendar .flatpickr-day.nextMonthDay {
    color: var(--color-base-content) !important;
}
@supports (color: color-mix(in lab, red, red)) {
    .flatpickr-calendar .flatpickr-day.nextMonthDay {
        color: color-mix(in oklab, var(--color-base-content) 50%, transparent) !important;
    }
}
.flatpickr-calendar .flatpickr-day:hover {
    border-color: var(--color-base-300) !important;
    background-color: var(--color-base-200) !important;
}
.flatpickr-calendar .flatpickr-day.flatpickr-disabled {
    color: var(--color-base-content) !important;
}
@supports (color: color-mix(in lab, red, red)) {
    .flatpickr-calendar .flatpickr-day.flatpickr-disabled {
        color: color-mix(in oklab, var(--color-base-content) 30%, transparent) !important;
    }
}
.flatpickr-calendar .flatpickr-day.flatpickr-disabled:hover {
    background-color: #0000 !important;
    border-color: #0000 !important;
}
.flatpickr-calendar .flatpickr-day.inRange {
    border-color: var(--color-base-300) !important;
    background-color: var(--color-base-200) !important;
    --tw-shadow: 0 0 #0000 !important;
    box-shadow:
        var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow),
        var(--tw-ring-shadow), var(--tw-shadow) !important;
}
.flatpickr-calendar .flatpickr-day.selected {
    border-color: var(--color-primary) !important;
    background-color: var(--color-primary) !important;
    color: var(--color-primary-content) !important;
}
.flatpickr-calendar .flatpickr-day.selected.week {
    --tw-shadow: 0 0 #0000 !important;
    box-shadow:
        var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow),
        var(--tw-ring-shadow), var(--tw-shadow) !important;
}
.flatpickr-calendar.noCalendar .flatpickr-time {
    border-style: var(--tw-border-style) !important;
    border-width: 0 !important;
}
.flatpickr-calendar .flatpickr-time {
    border-top-color: var(--color-base-300) !important;
}
.flatpickr-calendar .flatpickr-time input,
.flatpickr-calendar .flatpickr-time .flatpickr-am-pm {
    color: var(--color-base-content);
    background-color: #0000 !important;
}
@supports (color: color-mix(in lab, red, red)) {
    .flatpickr-calendar .flatpickr-time input,
    .flatpickr-calendar .flatpickr-time .flatpickr-am-pm {
        color: color-mix(in oklab, var(--color-base-content) 80%, transparent);
    }
}
.flatpickr-calendar .flatpickr-time .flatpickr-time-separator {
    color: var(--color-base-content) !important;
}
@supports (color: color-mix(in lab, red, red)) {
    .flatpickr-calendar .flatpickr-time .flatpickr-time-separator {
        color: color-mix(in oklab, var(--color-base-content) 60%, transparent) !important;
    }
}
.flatpickr-calendar .flatpickr-confirm {
    gap: calc(var(--spacing) * 2);
    flex-direction: row-reverse;
}
.flatpickr-calendar .flatpickr-confirm svg {
    fill: var(--color-base-content);
}
.flatpickr-calendar .flatpickr-monthSelect-months .flatpickr-monthSelect-month {
    color: var(--color-base-content) !important;
}
@supports (color: color-mix(in lab, red, red)) {
    .flatpickr-calendar .flatpickr-monthSelect-months .flatpickr-monthSelect-month {
        color: color-mix(in oklab, var(--color-base-content) 80%, transparent) !important;
    }
}
@media (hover: hover) {
    .flatpickr-calendar .flatpickr-monthSelect-months .flatpickr-monthSelect-month:hover {
        border-color: var(--color-base-300) !important;
        background-color: var(--color-base-200) !important;
    }
}
.flatpickr-calendar .flatpickr-monthSelect-months .flatpickr-monthSelect-month.selected {
    border-color: var(--color-primary) !important;
    background-color: var(--color-primary) !important;
    color: var(--color-primary-content) !important;
}
.custom-scrollbar {
    scrollbar-width: thin;
    scrollbar-color: transparent transparent;
    transition: scrollbar-color 0.5s ease-out;
    overflow: auto;
}
.custom-scrollbar:hover {
    scrollbar-color: #96969666 transparent;
}
.simplebar-vertical .simplebar-scrollbar:before {
    background-color: var(--color-base-content) !important;
}
@supports (color: color-mix(in lab, red, red)) {
    .simplebar-vertical .simplebar-scrollbar:before {
        background-color: color-mix(
            in oklab,
            var(--color-base-content) 20%,
            transparent
        ) !important;
    }
}
.simplebar-vertical .simplebar-scrollbar:before {
    left: 3px !important;
}
.simplebar-vertical .simplebar-scrollbar:hover:before {
    background-color: var(--color-base-content) !important;
}
@supports (color: color-mix(in lab, red, red)) {
    .simplebar-vertical .simplebar-scrollbar:hover:before {
        background-color: color-mix(
            in oklab,
            var(--color-base-content) 35%,
            transparent
        ) !important;
    }
}
.simplebar-vertical .simplebar-scrollbar:hover:before {
    left: 3px !important;
}
.choices.is-disabled .choices__inner {
    border-color: var(--color-base-200) !important;
    background-color: var(--color-base-200) !important;
}
.choices .choices__inner {
    background-color: var(--color-base-100);
    border-color: var(--color-base-300) !important;
}
.choices .choices__input {
    background-color: #0000 !important;
}
.choices .choices__list.choices__list--multiple .choices__item {
    border-style: var(--tw-border-style);
    background-color: var(--color-primary);
    color: var(--color-primary-content);
    border-width: 0;
}
.choices .choices__list.choices__list--multiple .choices__item .choices__button {
    border-color: var(--color-primary-content);
}
@supports (color: color-mix(in lab, red, red)) {
    .choices .choices__list.choices__list--multiple .choices__item .choices__button {
        border-color: color-mix(in oklab, var(--color-primary-content) 50%, transparent);
    }
}
.choices .choices__list.choices__list--multiple .choices__item .choices__button {
    border-left: 1px solid inherit;
    padding-inline-end: calc(var(--spacing) * 1.5);
}
.choices .choices__list.choices__list--dropdown {
    background-color: var(--color-base-100);
    border-color: var(--color-base-300) !important;
}
.choices .choices__list.choices__list--dropdown .choices__input {
    border-color: var(--color-base-300);
    background-color: var(--color-base-100) !important;
}
.choices
    .choices__list.choices__list--dropdown
    .choices__item:not(.choices__item--disabled).is-highlighted {
    background-color: var(--color-base-200);
}
.choices .choices__list.choices__list--dropdown .choices__group .choices__heading {
    border-color: var(--color-base-300);
}
.choices .choices__list.choices__list--dropdown .choices__item--choice b {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
}
.choices.is-open:after {
    --tw-scale-y: -100%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
}
.choices:after {
    border-color: #0000 !important;
    border-top-color: var(--color-base-content) !important;
}
@supports (color: color-mix(in lab, red, red)) {
    .choices:after {
        border-top-color: color-mix(
            in oklab,
            var(--color-base-content) 60%,
            transparent
        ) !important;
    }
}
.choices:after {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
}
:is(.ql-toolbar, .ql-container) * {
    font-family: var(--font-sans);
}
.ql-toolbar,
.ql-container {
    border-color: var(--color-base-300) !important;
}
.ql-toolbar {
    border-top-left-radius: 0.25rem;
    border-top-right-radius: 0.25rem;
}
.ql-toolbar .ql-formats .ql-header,
.ql-toolbar .ql-formats .ql-header .ql-picker-label {
    border-style: var(--tw-border-style);
    border-width: 0;
    color: var(--color-base-content) !important;
}
.ql-toolbar .ql-formats .ql-header .ql-picker-options {
    border-radius: var(--radius-box);
    background-color: var(--color-base-100);
    --tw-shadow: 0 0 #0000;
    box-shadow:
        var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow),
        var(--tw-ring-shadow), var(--tw-shadow);
    border-color: var(--color-base-300) !important;
}
.ql-toolbar .ql-formats button {
    opacity: 0.7;
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
}
@media (hover: hover) {
    .ql-toolbar .ql-formats button:hover {
        opacity: 1;
    }
}
.ql-toolbar .ql-formats button.ql-active {
    opacity: 1;
}
.ql-toolbar .ql-formats button .ql-stroke {
    stroke: var(--color-base-content) !important;
}
.ql-toolbar .ql-formats button .ql-fill {
    fill: var(--color-base-content) !important;
}
.ql-toolbar .ql-formats .ql-active .ql-stroke {
    opacity: 1;
    stroke: var(--color-primary) !important;
}
.ql-bubble .ql-tooltip {
    --tw-shadow:
        0 1px 3px 0 var(--tw-shadow-color, #0000001a),
        0 1px 2px -1px var(--tw-shadow-color, #0000001a);
    box-shadow:
        var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow),
        var(--tw-ring-shadow), var(--tw-shadow);
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    border-radius: 3.40282e38px;
    background-color: var(--color-base-100) !important;
}
@media (hover: hover) {
    .ql-bubble .ql-tooltip:hover {
        --tw-shadow:
            0 10px 15px -3px var(--tw-shadow-color, #0000001a),
            0 4px 6px -4px var(--tw-shadow-color, #0000001a);
        box-shadow:
            var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow),
            var(--tw-ring-shadow), var(--tw-shadow);
    }
    .ql-bubble .ql-formats .ql-header .ql-picker-options .ql-picker-item:hover {
        color: var(--color-primary);
    }
}
.ql-container {
    border-bottom-right-radius: 0.25rem;
    border-bottom-left-radius: 0.25rem;
    background-color: var(--color-base-100) !important;
}
@keyframes dropdown {
    0% {
        opacity: 0;
    }
}
@keyframes radio {
    0% {
        padding: 5px;
    }
    50% {
        padding: 3px;
    }
}
@keyframes toast {
    0% {
        opacity: 0;
        scale: 0.9;
    }
    to {
        opacity: 1;
        scale: 1;
    }
}
@keyframes rating {
    0%,
    40% {
        filter: brightness(1.05) contrast(1.05);
        scale: 1.1;
    }
}
@keyframes skeleton {
    0% {
        background-position: 150%;
    }
    to {
        background-position: -50%;
    }
}
@keyframes progress {
    50% {
        background-position-x: -115%;
    }
}
@property --tw-font-weight {
    syntax: "*";
    inherits: false;
}
@property --tw-translate-x {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}
@property --tw-translate-y {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}
@property --tw-translate-z {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}
@property --tw-scale-x {
    syntax: "*";
    inherits: false;
    initial-value: 1;
}
@property --tw-scale-y {
    syntax: "*";
    inherits: false;
    initial-value: 1;
}
@property --tw-scale-z {
    syntax: "*";
    inherits: false;
    initial-value: 1;
}
@property --tw-rotate-x {
    syntax: "*";
    inherits: false;
}
@property --tw-rotate-y {
    syntax: "*";
    inherits: false;
}
@property --tw-rotate-z {
    syntax: "*";
    inherits: false;
}
@property --tw-skew-x {
    syntax: "*";
    inherits: false;
}
@property --tw-skew-y {
    syntax: "*";
    inherits: false;
}
@property --tw-space-y-reverse {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}
@property --tw-space-x-reverse {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}
@property --tw-divide-y-reverse {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}
@property --tw-border-style {
    syntax: "*";
    inherits: false;
    initial-value: solid;
}
@property --tw-gradient-position {
    syntax: "*";
    inherits: false;
}
@property --tw-gradient-from {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000;
}
@property --tw-gradient-via {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000;
}
@property --tw-gradient-to {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000;
}
@property --tw-gradient-stops {
    syntax: "*";
    inherits: false;
}
@property --tw-gradient-via-stops {
    syntax: "*";
    inherits: false;
}
@property --tw-gradient-from-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 0%;
}
@property --tw-gradient-via-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 50%;
}
@property --tw-gradient-to-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 100%;
}
@property --tw-leading {
    syntax: "*";
    inherits: false;
}
@property --tw-tracking {
    syntax: "*";
    inherits: false;
}
@property --tw-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
    syntax: "*";
    inherits: false;
}
@property --tw-shadow-alpha {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 100%;
}
@property --tw-inset-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
    syntax: "*";
    inherits: false;
}
@property --tw-inset-shadow-alpha {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 100%;
}
@property --tw-ring-color {
    syntax: "*";
    inherits: false;
}
@property --tw-ring-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
    syntax: "*";
    inherits: false;
}
@property --tw-inset-ring-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
    syntax: "*";
    inherits: false;
}
@property --tw-ring-offset-width {
    syntax: "<length>";
    inherits: false;
    initial-value: 0;
}
@property --tw-ring-offset-color {
    syntax: "*";
    inherits: false;
    initial-value: #fff;
}
@property --tw-ring-offset-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
}
@property --tw-blur {
    syntax: "*";
    inherits: false;
}
@property --tw-brightness {
    syntax: "*";
    inherits: false;
}
@property --tw-contrast {
    syntax: "*";
    inherits: false;
}
@property --tw-grayscale {
    syntax: "*";
    inherits: false;
}
@property --tw-hue-rotate {
    syntax: "*";
    inherits: false;
}
@property --tw-invert {
    syntax: "*";
    inherits: false;
}
@property --tw-opacity {
    syntax: "*";
    inherits: false;
}
@property --tw-saturate {
    syntax: "*";
    inherits: false;
}
@property --tw-sepia {
    syntax: "*";
    inherits: false;
}
@property --tw-drop-shadow {
    syntax: "*";
    inherits: false;
}
@property --tw-drop-shadow-color {
    syntax: "*";
    inherits: false;
}
@property --tw-drop-shadow-alpha {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 100%;
}
@property --tw-drop-shadow-size {
    syntax: "*";
    inherits: false;
}
@property --tw-backdrop-blur {
    syntax: "*";
    inherits: false;
}
@property --tw-backdrop-brightness {
    syntax: "*";
    inherits: false;
}
@property --tw-backdrop-contrast {
    syntax: "*";
    inherits: false;
}
@property --tw-backdrop-grayscale {
    syntax: "*";
    inherits: false;
}
@property --tw-backdrop-hue-rotate {
    syntax: "*";
    inherits: false;
}
@property --tw-backdrop-invert {
    syntax: "*";
    inherits: false;
}
@property --tw-backdrop-opacity {
    syntax: "*";
    inherits: false;
}
@property --tw-backdrop-saturate {
    syntax: "*";
    inherits: false;
}
@property --tw-backdrop-sepia {
    syntax: "*";
    inherits: false;
}
@property --tw-duration {
    syntax: "*";
    inherits: false;
}
@property --tw-ease {
    syntax: "*";
    inherits: false;
}
@property --tw-text-shadow-color {
    syntax: "*";
    inherits: false;
}
@property --tw-text-shadow-alpha {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 100%;
}
@property --tw-outline-style {
    syntax: "*";
    inherits: false;
    initial-value: solid;
}
@property --tw-divide-x-reverse {
    syntax: "*";
    inherits: false;
    initial-value: 0;
}
@keyframes spin {
    to {
        transform: rotate(360deg);
    }
}
@keyframes ping {
    75%,
    to {
        opacity: 0;
        transform: scale(2);
    }
}
@keyframes bounce-slow {
    0% {
        transform: translateY(0);
    }
    to {
        transform: translateY(-12px);
    }
}
@keyframes text-color {
    0% {
        background-position: 0;
    }
    50% {
        background-position: 100%;
    }
    to {
        background-position: 0;
    }
}

/* Custom: Sidebar Theme Override */
:root[data-sidebar-theme="dark"]:is([data-theme="light"], [data-theme="contrast"]),
html[data-sidebar-theme="dark"]:is([data-theme="light"], [data-theme="contrast"]) {
    --layout-sidebar-background: #181c20;
}

:root[data-sidebar-theme="light"]:is([data-theme="light"], [data-theme="contrast"]),
html[data-sidebar-theme="light"]:is([data-theme="light"], [data-theme="contrast"]) {
    /* Keep default light background based on theme */
}

/* Ensure sidebar text is readable on dark sidebar */
[data-sidebar-theme="dark"] #layout-sidebar {
    color: #d4d8dc;
}

[data-sidebar-theme="dark"] #layout-sidebar .menu-label {
    color: #8a9299;
}

[data-sidebar-theme="dark"] #layout-sidebar .menu-item {
    color: #d4d8dc;
}

[data-sidebar-theme="dark"] #layout-sidebar .menu-item:hover {
    background-color: rgba(255, 255, 255, 0.1);
}

[data-sidebar-theme="dark"] #layout-sidebar .menu-item.active {
    background-color: rgba(22, 123, 255, 0.15);
    color: #167bff;
}
